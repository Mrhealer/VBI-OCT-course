{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0","program":"/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ip_network","--edition=2018","/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=ad10c0d3c1953026","-C","extra-filename=-ad10c0d3c1953026","--out-dir","/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps","-L","dependency=/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps/libip_network-ad10c0d3c1953026.rmeta"},"prelude":{"crate_id":{"name":"ip_network","disambiguator":[2005130924865726417,0]},"crate_root":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src","external_crates":[{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[731825893227783439,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17620493357780722015,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17104879904101875706,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16830480400437399750,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7171606794823467103,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1962125835969742563,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9581088599378972321,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[813795769934850431,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17725418628365393926,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5893038469516244934,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17002347431842942188,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3247696082052491306,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1250632192672038569,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6011250054333313481,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[13264462261958304631,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[11374198430379246765,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[9483954524752636596,0]}}],"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":0,"byte_end":3619,"line_start":1,"line_end":108,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1574,"byte_end":1583,"line_start":50,"line_end":50,"column_start":27,"column_end":36},"alias_span":null,"name":"IpNetwork","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1613,"byte_end":1624,"line_start":51,"line_end":51,"column_start":29,"column_end":40},"alias_span":null,"name":"Ipv4Network","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":393},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1655,"byte_end":1673,"line_start":52,"line_end":52,"column_start":30,"column_end":48},"alias_span":null,"name":"Ipv6MulticastScope","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":422},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1675,"byte_end":1686,"line_start":52,"line_end":52,"column_start":50,"column_end":61},"alias_span":null,"name":"Ipv6Network","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":0,"byte_end":3619,"line_start":1,"line_end":108,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":98},{"krate":0,"index":191},{"krate":0,"index":268},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":437},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":449},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":348},{"krate":0,"index":350}],"decl_id":null,"docs":" IPv4 and IPv6 network structs.","sig":null,"attributes":[{"value":"/ IPv4 and IPv6 network structs.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":0,"byte_end":34,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":35,"byte_end":38,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Optional features","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":39,"byte_end":63,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":64,"byte_end":67,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ When using this crate, you can choose to compile with these features:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":68,"byte_end":141,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":142,"byte_end":145,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * `serde` – for serialization and deserialization by [Serde framework](https://serde.rs).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":146,"byte_end":241,"line_start":7,"line_end":7,"column_start":1,"column_end":94}},{"value":"/ * `diesel` – support for [PostgreSQL CIDR type] with [Diesel ORM](https://diesel.rs).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":242,"byte_end":333,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"/ * `postgres` – support for [PostgreSQL CIDR type] with [postgres crate](https://github.com/sfackler/rust-postgres).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":334,"byte_end":455,"line_start":9,"line_end":9,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":456,"byte_end":459,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":460,"byte_end":475,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":476,"byte_end":479,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":480,"byte_end":491,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":492,"byte_end":519,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":520,"byte_end":552,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":553,"byte_end":556,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ let ip_network = Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":557,"byte_end":631,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(Ipv4Addr::new(192, 168, 1, 0), ip_network.network_address());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":632,"byte_end":708,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(24, ip_network.netmask());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":709,"byte_end":750,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(254, ip_network.hosts().len());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":751,"byte_end":797,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(\"192.168.1.0/24\", ip_network.to_string());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":798,"byte_end":855,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":856,"byte_end":902,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":903,"byte_end":910,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":911,"byte_end":914,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [PostgreSQL CIDR type]: https://www.postgresql.org/docs/current/datatype-net-types.html#DATATYPE-CIDR","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":915,"byte_end":1020,"line_start":25,"line_end":25,"column_start":1,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":353},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5726,"byte_end":5728,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"name":"V4","qualname":"::ip_network::IpNetwork::V4","value":"IpNetwork::V4(Ipv4Network)","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":356},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5747,"byte_end":5749,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"V6","qualname":"::ip_network::IpNetwork::V6","value":"IpNetwork::V6(Ipv6Network)","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":352},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5710,"byte_end":5719,"line_start":11,"line_end":11,"column_start":10,"column_end":19},"name":"IpNetwork","qualname":"::ip_network::IpNetwork","value":"pub enum IpNetwork { V4(Ipv4Network), V6(Ipv6Network), }","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":356}],"decl_id":null,"docs":" Holds IPv4 or IPv6 network.\n","sig":null,"attributes":[{"value":"/ Holds IPv4 or IPv6 network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5601,"byte_end":5632,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6498,"byte_end":6501,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<IpNetwork>::new","value":"pub fn new<I: Into<IpAddr>>(I, u8) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `IpNetwork` based on [`IpAddr`] and `netmask`.","sig":null,"attributes":[{"value":"/ Constructs new `IpNetwork` based on [`IpAddr`] and `netmask`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5788,"byte_end":5853,"line_start":17,"line_end":17,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5858,"byte_end":5861,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ [`IpAddr`]: https://doc.rust-lang.org/std/net/enum.IpAddr.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5866,"byte_end":5932,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5937,"byte_end":5940,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5945,"byte_end":5959,"line_start":21,"line_end":21,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5964,"byte_end":5967,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5972,"byte_end":5979,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ use std::net::{IpAddr, Ipv4Addr};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5984,"byte_end":6021,"line_start":24,"line_end":24,"column_start":5,"column_end":42}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6026,"byte_end":6052,"line_start":25,"line_end":25,"column_start":5,"column_end":31}},{"value":"/ use ip_network::{IpNetwork, Ipv4Network};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6057,"byte_end":6102,"line_start":26,"line_end":26,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6107,"byte_end":6110,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ let network_address = IpAddr::V4(Ipv4Addr::new(192, 168, 1, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6115,"byte_end":6183,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ let ip_network = IpNetwork::new(network_address, 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6188,"byte_end":6246,"line_start":29,"line_end":29,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(ip_network.network_address(), IpAddr::V4(Ipv4Addr::new(192, 168, 1, 0)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6251,"byte_end":6339,"line_start":30,"line_end":30,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(ip_network.netmask(), 24);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6344,"byte_end":6385,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6390,"byte_end":6436,"line_start":32,"line_end":32,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6441,"byte_end":6448,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6453,"byte_end":6486,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7594,"byte_end":7606,"line_start":61,"line_end":61,"column_start":12,"column_end":24},"name":"new_truncate","qualname":"<IpNetwork>::new_truncate","value":"pub fn new_truncate<I: Into<IpAddr>>(I, u8) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `IpNetwork` based on [`IpAddr`] and `netmask` with truncating host bits\n from given `network_address`.","sig":null,"attributes":[{"value":"/ Constructs new `IpNetwork` based on [`IpAddr`] and `netmask` with truncating host bits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6804,"byte_end":6894,"line_start":42,"line_end":42,"column_start":5,"column_end":95}},{"value":"/ from given `network_address`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6899,"byte_end":6932,"line_start":43,"line_end":43,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6937,"byte_end":6940,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Returns error if netmask is bigger than 32 for IPv4 and 128 for IPv6.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":6945,"byte_end":7018,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7023,"byte_end":7026,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`Ipv4Addr`]: https://doc.rust-lang.org/std/net/struct.IpAddr.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7031,"byte_end":7101,"line_start":47,"line_end":47,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7106,"byte_end":7109,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7114,"byte_end":7128,"line_start":49,"line_end":49,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7133,"byte_end":7136,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7141,"byte_end":7148,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ use std::net::{IpAddr, Ipv4Addr};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7153,"byte_end":7190,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/ use ip_network::IpNetwork;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7195,"byte_end":7225,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7230,"byte_end":7233,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ let network_address = IpAddr::V4(Ipv4Addr::new(192, 168, 1, 128));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7238,"byte_end":7308,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ let ip_network = IpNetwork::new_truncate(network_address, 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7313,"byte_end":7380,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(ip_network.network_address(), IpAddr::V4(Ipv4Addr::new(192, 168, 1, 0)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7385,"byte_end":7473,"line_start":57,"line_end":57,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(ip_network.netmask(), 24);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7478,"byte_end":7519,"line_start":58,"line_end":58,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7524,"byte_end":7570,"line_start":59,"line_end":59,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7575,"byte_end":7582,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8358,"byte_end":8373,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"network_address","qualname":"<IpNetwork>::network_address","value":"pub fn network_address(&Self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns network IP address.","sig":null,"attributes":[{"value":"/ Returns network IP address.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7950,"byte_end":7981,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7986,"byte_end":7989,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":7994,"byte_end":8008,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8013,"byte_end":8016,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8021,"byte_end":8028,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::net::{IpAddr, Ipv4Addr};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8033,"byte_end":8070,"line_start":76,"line_end":76,"column_start":5,"column_end":42}},{"value":"/ use ip_network::IpNetwork;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8075,"byte_end":8105,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8110,"byte_end":8113,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let ip_network = IpNetwork::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8118,"byte_end":8190,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(ip_network.network_address(), IpAddr::V4(Ipv4Addr::new(192, 168, 1, 0)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8195,"byte_end":8283,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8288,"byte_end":8334,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8339,"byte_end":8346,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8967,"byte_end":8974,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"netmask","qualname":"<IpNetwork>::netmask","value":"pub fn netmask(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns network mask as integer.","sig":null,"attributes":[{"value":"/ Returns network mask as integer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8601,"byte_end":8637,"line_start":90,"line_end":90,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8642,"byte_end":8645,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8650,"byte_end":8664,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8669,"byte_end":8672,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8677,"byte_end":8684,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use std::net::{IpAddr, Ipv4Addr};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8689,"byte_end":8726,"line_start":95,"line_end":95,"column_start":5,"column_end":42}},{"value":"/ use ip_network::IpNetwork;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8731,"byte_end":8761,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8766,"byte_end":8769,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let ip_network = IpNetwork::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8774,"byte_end":8846,"line_start":98,"line_end":98,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(ip_network.netmask(), 24);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8851,"byte_end":8892,"line_start":99,"line_end":99,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8897,"byte_end":8943,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":8948,"byte_end":8955,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9234,"byte_end":9241,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"is_ipv4","qualname":"<IpNetwork>::is_ipv4","value":"pub fn is_ipv4(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `IpNetwork` contains `Ipv4Network` struct.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `IpNetwork` contains `Ipv4Network` struct.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9158,"byte_end":9222,"line_start":109,"line_end":109,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9454,"byte_end":9461,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"is_ipv6","qualname":"<IpNetwork>::is_ipv6","value":"pub fn is_ipv6(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `IpNetwork` contains `Ipv6Network` struct.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `IpNetwork` contains `Ipv6Network` struct.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9378,"byte_end":9442,"line_start":117,"line_end":117,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":10127,"byte_end":10135,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"contains","qualname":"<IpNetwork>::contains","value":"pub fn contains<I: Into<IpAddr>>(&Self, I) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `IpNetwork` contains `IpAddr`. For different network type\n (for example IpNetwork is IPv6 and IpAddr is IPv4) always returns `false`.","sig":null,"attributes":[{"value":"/ Returns `true` if `IpNetwork` contains `IpAddr`. For different network type","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9514,"byte_end":9593,"line_start":122,"line_end":122,"column_start":5,"column_end":84}},{"value":"/ (for example IpNetwork is IPv6 and IpAddr is IPv4) always returns `false`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9598,"byte_end":9676,"line_start":123,"line_end":123,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9681,"byte_end":9684,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9689,"byte_end":9703,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9708,"byte_end":9711,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9716,"byte_end":9723,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use std::net::{IpAddr, Ipv4Addr, Ipv6Addr};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9728,"byte_end":9775,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ use ip_network::IpNetwork;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9780,"byte_end":9810,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9815,"byte_end":9818,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let ip_network = IpNetwork::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9823,"byte_end":9895,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ assert!(ip_network.contains(Ipv4Addr::new(192, 168, 1, 25)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9900,"byte_end":9965,"line_start":132,"line_end":132,"column_start":5,"column_end":70}},{"value":"/ assert!(!ip_network.contains(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 1, 0, 0)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":9970,"byte_end":10052,"line_start":133,"line_end":133,"column_start":5,"column_end":87}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":10057,"byte_end":10103,"line_start":134,"line_end":134,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":10108,"byte_end":10115,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":10507,"byte_end":10523,"line_start":145,"line_end":145,"column_start":12,"column_end":28},"name":"is_default_route","qualname":"<IpNetwork>::is_default_route","value":"pub fn is_default_route(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the network is default route, that contains all IP addresses.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the network is default route, that contains all IP addresses.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":10412,"byte_end":10495,"line_start":144,"line_end":144,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":10808,"byte_end":10820,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"is_multicast","qualname":"<IpNetwork>::is_multicast","value":"pub fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the network is part of multicast network range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the network is part of multicast network range.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":10727,"byte_end":10796,"line_start":152,"line_end":152,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11103,"byte_end":11119,"line_start":161,"line_end":161,"column_start":12,"column_end":28},"name":"is_documentation","qualname":"<IpNetwork>::is_documentation","value":"pub fn is_documentation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a part of network reserved for documentation.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this is a part of network reserved for documentation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11016,"byte_end":11091,"line_start":160,"line_end":160,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11403,"byte_end":11414,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"is_loopback","qualname":"<IpNetwork>::is_loopback","value":"pub fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this network is inside loopback address range.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this network is inside loopback address range.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11323,"byte_end":11391,"line_start":168,"line_end":168,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11686,"byte_end":11695,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"is_global","qualname":"<IpNetwork>::is_global","value":"pub fn is_global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the network appears to be globally routable.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the network appears to be globally routable.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11608,"byte_end":11674,"line_start":176,"line_end":176,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12332,"byte_end":12349,"line_start":195,"line_end":195,"column_start":12,"column_end":29},"name":"from_str_truncate","qualname":"<IpNetwork>::from_str_truncate","value":"pub fn from_str_truncate(&str) -> Result<Self, IpNetworkParseError>","parent":null,"children":[],"decl_id":null,"docs":" Converts string in format IPv4 (X.X.X.X/Y) or IPv6 (X:X::X/Y) CIDR notation to `IpNetwork`.","sig":null,"attributes":[{"value":"/ Converts string in format IPv4 (X.X.X.X/Y) or IPv6 (X:X::X/Y) CIDR notation to `IpNetwork`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11885,"byte_end":11980,"line_start":184,"line_end":184,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11985,"byte_end":11988,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":11993,"byte_end":12007,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12012,"byte_end":12015,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12020,"byte_end":12027,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12032,"byte_end":12059,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/ use ip_network::{IpNetwork, Ipv4Network};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12064,"byte_end":12109,"line_start":190,"line_end":190,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12114,"byte_end":12117,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let ip_network = IpNetwork::from_str_truncate(\"192.168.1.1/24\").unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12122,"byte_end":12199,"line_start":192,"line_end":192,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(ip_network, IpNetwork::V4(Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24).unwrap()));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12204,"byte_end":12308,"line_start":193,"line_end":193,"column_start":5,"column_end":109}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12313,"byte_end":12320,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12935,"byte_end":12953,"line_start":209,"line_end":209,"column_start":12,"column_end":30},"name":"collapse_addresses","qualname":"<IpNetwork>::collapse_addresses","value":"pub fn collapse_addresses(&[Self]) -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of the collapsed IpNetworks.\n","sig":null,"attributes":[{"value":"/ Return an iterator of the collapsed IpNetworks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":12872,"byte_end":12923,"line_start":208,"line_end":208,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26248,"byte_end":26259,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"Ipv4Network","qualname":"::ipv4_network::Ipv4Network","value":"Ipv4Network {  }","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"decl_id":null,"docs":" IPv4 Network.\n","sig":null,"attributes":[{"value":"/ IPv4 Network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26168,"byte_end":26185,"line_start":12,"line_end":12,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26405,"byte_end":26411,"line_start":21,"line_end":21,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::ipv4_network::Ipv4Network::LENGTH","value":"u8","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" IPv4 address length in bits.\n","sig":null,"attributes":[{"value":"/ IPv4 address length in bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26358,"byte_end":26390,"line_start":20,"line_end":20,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":139},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26512,"byte_end":26525,"line_start":24,"line_end":24,"column_start":15,"column_end":28},"name":"DEFAULT_ROUTE","qualname":"::ipv4_network::Ipv4Network::DEFAULT_ROUTE","value":"Self","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Default route that contains all IP addresses, IP network 0.0.0.0/0\n","sig":null,"attributes":[{"value":"/ Default route that contains all IP addresses, IP network 0.0.0.0/0","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26427,"byte_end":26497,"line_start":23,"line_end":23,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27323,"byte_end":27326,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4Network>::new","value":"pub fn new(Ipv4Addr, u8) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `Ipv4Network` based on [`Ipv4Addr`] and `netmask`.","sig":null,"attributes":[{"value":"/ Constructs new `Ipv4Network` based on [`Ipv4Addr`] and `netmask`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26621,"byte_end":26690,"line_start":29,"line_end":29,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26695,"byte_end":26698,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Returns error if netmask is bigger than 32 or if host bits are set in `network_address`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26703,"byte_end":26795,"line_start":31,"line_end":31,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26800,"byte_end":26803,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Ipv4Addr`]: https://doc.rust-lang.org/std/net/struct.Ipv4Addr.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26808,"byte_end":26880,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26885,"byte_end":26888,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26893,"byte_end":26907,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26912,"byte_end":26915,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26920,"byte_end":26927,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26932,"byte_end":26959,"line_start":38,"line_end":38,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26964,"byte_end":26996,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27001,"byte_end":27004,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27009,"byte_end":27083,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(ip_network.network_address(), Ipv4Addr::new(192, 168, 1, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27088,"byte_end":27164,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(ip_network.netmask(), 24);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27169,"byte_end":27210,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27215,"byte_end":27261,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27266,"byte_end":27273,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27278,"byte_end":27311,"line_start":46,"line_end":46,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28451,"byte_end":28463,"line_start":80,"line_end":80,"column_start":12,"column_end":24},"name":"new_truncate","qualname":"<Ipv4Network>::new_truncate","value":"pub fn new_truncate(Ipv4Addr, u8) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `Ipv4Network` based on [`Ipv4Addr`] and `netmask` with truncating host bits\n from given `network_address`.","sig":null,"attributes":[{"value":"/ Constructs new `Ipv4Network` based on [`Ipv4Addr`] and `netmask` with truncating host bits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27758,"byte_end":27852,"line_start":62,"line_end":62,"column_start":5,"column_end":99}},{"value":"/ from given `network_address`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27857,"byte_end":27890,"line_start":63,"line_end":63,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27895,"byte_end":27898,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns error if netmask is bigger than 32.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27903,"byte_end":27950,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27955,"byte_end":27958,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ [`Ipv4Addr`]: https://doc.rust-lang.org/std/net/struct.Ipv4Addr.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":27963,"byte_end":28035,"line_start":67,"line_end":67,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28040,"byte_end":28043,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28048,"byte_end":28062,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28067,"byte_end":28070,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28075,"byte_end":28082,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28087,"byte_end":28114,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28119,"byte_end":28151,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28156,"byte_end":28159,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::new_truncate(Ipv4Addr::new(192, 168, 1, 100), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28164,"byte_end":28249,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(ip_network.network_address(), Ipv4Addr::new(192, 168, 1, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28254,"byte_end":28330,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(ip_network.netmask(), 24);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28335,"byte_end":28376,"line_start":77,"line_end":77,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28381,"byte_end":28427,"line_start":78,"line_end":78,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28432,"byte_end":28439,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29284,"byte_end":29299,"line_start":107,"line_end":107,"column_start":12,"column_end":27},"name":"network_address","qualname":"<Ipv4Network>::network_address","value":"pub fn network_address(&Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns network IP address (first address in range).","sig":null,"attributes":[{"value":"/ Returns network IP address (first address in range).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28855,"byte_end":28911,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28916,"byte_end":28919,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28924,"byte_end":28938,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28943,"byte_end":28946,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28951,"byte_end":28958,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28963,"byte_end":28990,"line_start":99,"line_end":99,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":28995,"byte_end":29027,"line_start":100,"line_end":100,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29032,"byte_end":29035,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29040,"byte_end":29114,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(ip_network.network_address(), Ipv4Addr::new(192, 168, 1, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29119,"byte_end":29195,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29200,"byte_end":29246,"line_start":104,"line_end":104,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29251,"byte_end":29258,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29263,"byte_end":29272,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29789,"byte_end":29806,"line_start":123,"line_end":123,"column_start":12,"column_end":29},"name":"broadcast_address","qualname":"<Ipv4Network>::broadcast_address","value":"pub fn broadcast_address(&Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns broadcast address of network (last address in range).","sig":null,"attributes":[{"value":"/ Returns broadcast address of network (last address in range).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29361,"byte_end":29426,"line_start":111,"line_end":111,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29431,"byte_end":29434,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29439,"byte_end":29453,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29458,"byte_end":29461,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29466,"byte_end":29473,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29478,"byte_end":29505,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29510,"byte_end":29542,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29547,"byte_end":29550,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29555,"byte_end":29629,"line_start":119,"line_end":119,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(ip_network.broadcast_address(), Ipv4Addr::new(192, 168, 1, 255));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29634,"byte_end":29714,"line_start":120,"line_end":120,"column_start":5,"column_end":85}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29719,"byte_end":29765,"line_start":121,"line_end":121,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29770,"byte_end":29777,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30305,"byte_end":30312,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"netmask","qualname":"<Ipv4Network>::netmask","value":"pub fn netmask(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns network mask as integer.","sig":null,"attributes":[{"value":"/ Returns network mask as integer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29931,"byte_end":29967,"line_start":127,"line_end":127,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29972,"byte_end":29975,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29980,"byte_end":29994,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":29999,"byte_end":30002,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30007,"byte_end":30014,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30019,"byte_end":30046,"line_start":132,"line_end":132,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30051,"byte_end":30083,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30088,"byte_end":30091,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30096,"byte_end":30170,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(ip_network.netmask(), 24);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30175,"byte_end":30216,"line_start":136,"line_end":136,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30221,"byte_end":30267,"line_start":137,"line_end":137,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30272,"byte_end":30279,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30284,"byte_end":30293,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30759,"byte_end":30771,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"name":"full_netmask","qualname":"<Ipv4Network>::full_netmask","value":"pub fn full_netmask(&Self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns network mask as IPv4 address.","sig":null,"attributes":[{"value":"/ Returns network mask as IPv4 address.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30360,"byte_end":30401,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30406,"byte_end":30409,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30414,"byte_end":30428,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30433,"byte_end":30436,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30441,"byte_end":30448,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30453,"byte_end":30480,"line_start":149,"line_end":149,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30485,"byte_end":30517,"line_start":150,"line_end":150,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30522,"byte_end":30525,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30530,"byte_end":30604,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(ip_network.full_netmask(), Ipv4Addr::new(255, 255, 255, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30609,"byte_end":30684,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30689,"byte_end":30735,"line_start":154,"line_end":154,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30740,"byte_end":30747,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31497,"byte_end":31505,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv4Network>::contains","value":"pub fn contains(&Self, Ipv4Addr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if given [`IPv4Addr`] is inside this network.","sig":null,"attributes":[{"value":"/ Returns [`true`] if given [`IPv4Addr`] is inside this network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30861,"byte_end":30927,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30932,"byte_end":30935,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":30940,"byte_end":31003,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/ [`Ipv4Addr`]: https://doc.rust-lang.org/std/net/struct.Ipv4Addr.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31008,"byte_end":31080,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31085,"byte_end":31088,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31093,"byte_end":31107,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31112,"byte_end":31115,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31120,"byte_end":31127,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31132,"byte_end":31159,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31164,"byte_end":31196,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31201,"byte_end":31204,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31209,"byte_end":31283,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ assert!(ip_network.contains(Ipv4Addr::new(192, 168, 1, 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31288,"byte_end":31352,"line_start":172,"line_end":172,"column_start":5,"column_end":69}},{"value":"/ assert!(!ip_network.contains(Ipv4Addr::new(192, 168, 2, 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31357,"byte_end":31422,"line_start":173,"line_end":173,"column_start":5,"column_end":70}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31427,"byte_end":31473,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31478,"byte_end":31485,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32475,"byte_end":32480,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"hosts","qualname":"<Ipv4Network>::hosts","value":"pub fn hosts(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns iterator over host IP addresses in range (without network and broadcast address). You\n can also use this method to check how much hosts address are in range by calling [`len()`] method\n on iterator (see Examples).","sig":null,"attributes":[{"value":"/ Returns iterator over host IP addresses in range (without network and broadcast address). You","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31640,"byte_end":31737,"line_start":180,"line_end":180,"column_start":5,"column_end":102}},{"value":"/ can also use this method to check how much hosts address are in range by calling [`len()`] method","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31742,"byte_end":31843,"line_start":181,"line_end":181,"column_start":5,"column_end":106}},{"value":"/ on iterator (see Examples).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31848,"byte_end":31879,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31884,"byte_end":31887,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`len()`]: https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html#method.len","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31892,"byte_end":31981,"line_start":184,"line_end":184,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31986,"byte_end":31989,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":31994,"byte_end":32008,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32013,"byte_end":32016,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32021,"byte_end":32028,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32033,"byte_end":32060,"line_start":189,"line_end":189,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32065,"byte_end":32097,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32102,"byte_end":32105,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let ip = Ipv4Addr::new(192, 168, 1, 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32110,"byte_end":32153,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ let mut hosts = Ipv4Network::new(ip, 24)?.hosts();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32158,"byte_end":32212,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(254, hosts.len());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32217,"byte_end":32250,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(hosts.next().unwrap(), Ipv4Addr::new(192, 168, 1, 1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32255,"byte_end":32324,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(hosts.last().unwrap(), Ipv4Addr::new(192, 168, 1, 254));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32329,"byte_end":32400,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32405,"byte_end":32451,"line_start":197,"line_end":197,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32456,"byte_end":32463,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33091,"byte_end":33099,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"supernet","qualname":"<Ipv4Network>::supernet","value":"pub fn supernet(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns network with smaller netmask by one. If netmask is already zero, `None` will be returned.","sig":null,"attributes":[{"value":"/ Returns network with smaller netmask by one. If netmask is already zero, `None` will be returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32594,"byte_end":32695,"line_start":203,"line_end":203,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32700,"byte_end":32703,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32708,"byte_end":32722,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32727,"byte_end":32730,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32735,"byte_end":32742,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32747,"byte_end":32774,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32779,"byte_end":32811,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32816,"byte_end":32819,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let ip = Ipv4Addr::new(192, 168, 1, 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32824,"byte_end":32867,"line_start":211,"line_end":211,"column_start":5,"column_end":48}},{"value":"/ let mut hosts = Ipv4Network::new(ip, 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32872,"byte_end":32918,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(hosts.supernet(), Some(Ipv4Network::new(Ipv4Addr::new(192, 168, 0, 0), 23)?));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":32923,"byte_end":33016,"line_start":213,"line_end":213,"column_start":5,"column_end":98}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33021,"byte_end":33067,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33072,"byte_end":33079,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33941,"byte_end":33948,"line_start":239,"line_end":239,"column_start":12,"column_end":19},"name":"subnets","qualname":"<Ipv4Network>::subnets","value":"pub fn subnets(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns iterator over networks with bigger netmask by one. If netmask is already 32,\n iterator is empty.","sig":null,"attributes":[{"value":"/ Returns iterator over networks with bigger netmask by one. If netmask is already 32,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33297,"byte_end":33385,"line_start":224,"line_end":224,"column_start":5,"column_end":93}},{"value":"/ iterator is empty.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33390,"byte_end":33412,"line_start":225,"line_end":225,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33417,"byte_end":33420,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33425,"byte_end":33439,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33444,"byte_end":33447,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33452,"byte_end":33459,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33464,"byte_end":33491,"line_start":230,"line_end":230,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33496,"byte_end":33528,"line_start":231,"line_end":231,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33533,"byte_end":33536,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33541,"byte_end":33615,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ let mut iterator = ip_network.subnets();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33620,"byte_end":33664,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(iterator.next().unwrap(), Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 25)?);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33669,"byte_end":33764,"line_start":235,"line_end":235,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(iterator.last().unwrap(), Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 128), 25)?);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33769,"byte_end":33866,"line_start":236,"line_end":236,"column_start":5,"column_end":102}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33871,"byte_end":33917,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":33922,"byte_end":33929,"line_start":238,"line_end":238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34879,"byte_end":34898,"line_start":262,"line_end":262,"column_start":12,"column_end":31},"name":"subnets_with_prefix","qualname":"<Ipv4Network>::subnets_with_prefix","value":"pub fn subnets_with_prefix(&Self, u8) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ipv4NetworkIterator` over networks with defined netmask.","sig":null,"attributes":[{"value":"/ Returns `Ipv4NetworkIterator` over networks with defined netmask.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34146,"byte_end":34215,"line_start":244,"line_end":244,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34220,"byte_end":34223,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34228,"byte_end":34240,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34245,"byte_end":34248,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This method panics when prefix is bigger than 32 or when prefix is lower or equal than netmask.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34253,"byte_end":34352,"line_start":248,"line_end":248,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34357,"byte_end":34360,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34365,"byte_end":34379,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34384,"byte_end":34387,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34392,"byte_end":34399,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34404,"byte_end":34431,"line_start":253,"line_end":253,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34436,"byte_end":34468,"line_start":254,"line_end":254,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34473,"byte_end":34476,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let ip = Ipv4Addr::new(192, 168, 1, 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34481,"byte_end":34524,"line_start":256,"line_end":256,"column_start":5,"column_end":48}},{"value":"/ let mut iterator = Ipv4Network::new(ip, 24)?.subnets_with_prefix(25);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34529,"byte_end":34602,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(iterator.next().unwrap(), Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 25)?);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34607,"byte_end":34702,"line_start":258,"line_end":258,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(iterator.last().unwrap(), Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 128), 25)?);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34707,"byte_end":34804,"line_start":259,"line_end":259,"column_start":5,"column_end":102}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34809,"byte_end":34855,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":34860,"byte_end":34867,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35492,"byte_end":35508,"line_start":279,"line_end":279,"column_start":12,"column_end":28},"name":"is_default_route","qualname":"<Ipv4Network>::is_default_route","value":"pub fn is_default_route(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] for the default route network (0.0.0.0/0), that contains all IPv4 addresses.","sig":null,"attributes":[{"value":"/ Returns [`true`] for the default route network (0.0.0.0/0), that contains all IPv4 addresses.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35035,"byte_end":35132,"line_start":266,"line_end":266,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35137,"byte_end":35140,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35145,"byte_end":35208,"line_start":268,"line_end":268,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35213,"byte_end":35216,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35221,"byte_end":35235,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35240,"byte_end":35243,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35248,"byte_end":35255,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35260,"byte_end":35287,"line_start":273,"line_end":273,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35292,"byte_end":35324,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35329,"byte_end":35332,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(0, 0, 0, 0), 0)?.is_default_route());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35337,"byte_end":35417,"line_start":276,"line_end":276,"column_start":5,"column_end":85}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35422,"byte_end":35468,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35473,"byte_end":35480,"line_start":278,"line_end":278,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36127,"byte_end":36150,"line_start":299,"line_end":299,"column_start":12,"column_end":35},"name":"is_local_identification","qualname":"<Ipv4Network>::is_local_identification","value":"pub fn is_local_identification(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] for network in local identification range (0.0.0.0/8).","sig":null,"attributes":[{"value":"/ Returns [`true`] for network in local identification range (0.0.0.0/8).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35563,"byte_end":35638,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35643,"byte_end":35646,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 1122].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35651,"byte_end":35699,"line_start":285,"line_end":285,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35704,"byte_end":35707,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 1122]: https://tools.ietf.org/html/rfc1122","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35712,"byte_end":35768,"line_start":287,"line_end":287,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35773,"byte_end":35836,"line_start":288,"line_end":288,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35841,"byte_end":35844,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35849,"byte_end":35863,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35868,"byte_end":35871,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35876,"byte_end":35883,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35888,"byte_end":35915,"line_start":293,"line_end":293,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35920,"byte_end":35952,"line_start":294,"line_end":294,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35957,"byte_end":35960,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(0, 0, 0, 0), 8)?.is_local_identification());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":35965,"byte_end":36052,"line_start":296,"line_end":296,"column_start":5,"column_end":92}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36057,"byte_end":36103,"line_start":297,"line_end":297,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36108,"byte_end":36115,"line_start":298,"line_end":298,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36879,"byte_end":36893,"line_start":320,"line_end":320,"column_start":12,"column_end":26},"name":"is_unspecified","qualname":"<Ipv4Network>::is_unspecified","value":"pub fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] for the special 'unspecified' network (0.0.0.0/32).","sig":null,"attributes":[{"value":"/ Returns [`true`] for the special 'unspecified' network (0.0.0.0/32).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36246,"byte_end":36318,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36323,"byte_end":36326,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This property is defined in _UNIX Network Programming, Second Edition_,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36331,"byte_end":36406,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ W. Richard Stevens, p. 891; see also [ip7].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36411,"byte_end":36458,"line_start":306,"line_end":306,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36463,"byte_end":36466,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [ip7]: http://man7.org/linux/man-pages/man7/ip.7.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36471,"byte_end":36528,"line_start":308,"line_end":308,"column_start":5,"column_end":62}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36533,"byte_end":36596,"line_start":309,"line_end":309,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36601,"byte_end":36604,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36609,"byte_end":36623,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36628,"byte_end":36631,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36636,"byte_end":36643,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36648,"byte_end":36675,"line_start":314,"line_end":314,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36680,"byte_end":36712,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36717,"byte_end":36720,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(0, 0, 0, 0), 32)?.is_unspecified());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36725,"byte_end":36804,"line_start":317,"line_end":317,"column_start":5,"column_end":84}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36809,"byte_end":36855,"line_start":318,"line_end":318,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":36860,"byte_end":36867,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37563,"byte_end":37574,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"is_loopback","qualname":"<Ipv4Network>::is_loopback","value":"pub fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this network is inside loopback address range (127.0.0.0/8).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this network is inside loopback address range (127.0.0.0/8).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37000,"byte_end":37084,"line_start":324,"line_end":324,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37089,"byte_end":37092,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 1122].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37097,"byte_end":37145,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37150,"byte_end":37153,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 1122]: https://tools.ietf.org/html/rfc1122","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37158,"byte_end":37214,"line_start":328,"line_end":328,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37219,"byte_end":37282,"line_start":329,"line_end":329,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37287,"byte_end":37290,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37295,"byte_end":37309,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37314,"byte_end":37317,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37322,"byte_end":37329,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37334,"byte_end":37361,"line_start":334,"line_end":334,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37366,"byte_end":37398,"line_start":335,"line_end":335,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37403,"byte_end":37406,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(127, 0, 0, 0), 8)?.is_loopback());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37411,"byte_end":37488,"line_start":337,"line_end":337,"column_start":5,"column_end":82}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37493,"byte_end":37539,"line_start":338,"line_end":338,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37544,"byte_end":37551,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38235,"byte_end":38247,"line_start":360,"line_end":360,"column_start":12,"column_end":24},"name":"is_broadcast","qualname":"<Ipv4Network>::is_broadcast","value":"pub fn is_broadcast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a broadcast network (255.255.255.255/32).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a broadcast network (255.255.255.255/32).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37646,"byte_end":37719,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37724,"byte_end":37727,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ A broadcast address has all octets set to 255 as defined in [IETF RFC 919].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37732,"byte_end":37811,"line_start":346,"line_end":346,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37816,"byte_end":37819,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 919]: https://tools.ietf.org/html/rfc919","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37824,"byte_end":37878,"line_start":348,"line_end":348,"column_start":5,"column_end":59}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37883,"byte_end":37946,"line_start":349,"line_end":349,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37951,"byte_end":37954,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37959,"byte_end":37973,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37978,"byte_end":37981,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37986,"byte_end":37993,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":37998,"byte_end":38025,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38030,"byte_end":38062,"line_start":355,"line_end":355,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38067,"byte_end":38070,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(255, 255, 255, 255), 32)?.is_broadcast());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38075,"byte_end":38160,"line_start":357,"line_end":357,"column_start":5,"column_end":90}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38165,"byte_end":38211,"line_start":358,"line_end":358,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38216,"byte_end":38223,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38990,"byte_end":39000,"line_start":384,"line_end":384,"column_start":12,"column_end":22},"name":"is_private","qualname":"<Ipv4Network>::is_private","value":"pub fn is_private(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this whole network range is inside private address ranges.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this whole network range is inside private address ranges.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38320,"byte_end":38402,"line_start":364,"line_end":364,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38407,"byte_end":38410,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ The private address ranges are defined in [IETF RFC 1918] and include:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38415,"byte_end":38489,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38494,"byte_end":38497,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/  - 10.0.0.0/8","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38502,"byte_end":38519,"line_start":368,"line_end":368,"column_start":5,"column_end":22}},{"value":"/  - 172.16.0.0/12","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38524,"byte_end":38544,"line_start":369,"line_end":369,"column_start":5,"column_end":25}},{"value":"/  - 192.168.0.0/16","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38549,"byte_end":38570,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38575,"byte_end":38578,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 1918]: https://tools.ietf.org/html/rfc1918","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38583,"byte_end":38639,"line_start":372,"line_end":372,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38644,"byte_end":38707,"line_start":373,"line_end":373,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38712,"byte_end":38715,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38720,"byte_end":38734,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38739,"byte_end":38742,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38747,"byte_end":38754,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38759,"byte_end":38786,"line_start":378,"line_end":378,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38791,"byte_end":38823,"line_start":379,"line_end":379,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38828,"byte_end":38831,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(192, 168, 1, 0), 24)?.is_private());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38836,"byte_end":38915,"line_start":381,"line_end":381,"column_start":5,"column_end":84}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38920,"byte_end":38966,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":38971,"byte_end":38978,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39973,"byte_end":40001,"line_start":410,"line_end":410,"column_start":12,"column_end":40},"name":"is_ietf_protocol_assignments","qualname":"<Ipv4Network>::is_ietf_protocol_assignments","value":"pub fn is_ietf_protocol_assignments(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this whole network is inside IETF Protocol Assignments range (192.0.0.0/24).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this whole network is inside IETF Protocol Assignments range (192.0.0.0/24).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39338,"byte_end":39438,"line_start":394,"line_end":394,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39443,"byte_end":39446,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 6890, Section 2.1].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39451,"byte_end":39512,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39517,"byte_end":39520,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 6890, Section 2.1]: https://tools.ietf.org/html/rfc6890#section-2.1","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39525,"byte_end":39606,"line_start":398,"line_end":398,"column_start":5,"column_end":86}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39611,"byte_end":39674,"line_start":399,"line_end":399,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39679,"byte_end":39682,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39687,"byte_end":39701,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39706,"byte_end":39709,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39714,"byte_end":39721,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39726,"byte_end":39753,"line_start":404,"line_end":404,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39758,"byte_end":39790,"line_start":405,"line_end":405,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39795,"byte_end":39798,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(192, 0, 0, 0), 24)?.is_ietf_protocol_assignments());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39803,"byte_end":39898,"line_start":407,"line_end":407,"column_start":5,"column_end":100}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39903,"byte_end":39949,"line_start":408,"line_end":408,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":39954,"byte_end":39961,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40748,"byte_end":40771,"line_start":431,"line_end":431,"column_start":12,"column_end":35},"name":"is_shared_address_space","qualname":"<Ipv4Network>::is_shared_address_space","value":"pub fn is_shared_address_space(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this whole network is inside Shared Address Space (100.64.0.0/10).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this whole network is inside Shared Address Space (100.64.0.0/10).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40165,"byte_end":40255,"line_start":415,"line_end":415,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40260,"byte_end":40263,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 6598].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40268,"byte_end":40316,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40321,"byte_end":40324,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 6598]: https://tools.ietf.org/html/rfc6598","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40329,"byte_end":40385,"line_start":419,"line_end":419,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40390,"byte_end":40453,"line_start":420,"line_end":420,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40458,"byte_end":40461,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40466,"byte_end":40480,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40485,"byte_end":40488,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40493,"byte_end":40500,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40505,"byte_end":40532,"line_start":425,"line_end":425,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40537,"byte_end":40569,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40574,"byte_end":40577,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(100, 64, 0, 0), 10)?.is_shared_address_space());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40582,"byte_end":40673,"line_start":428,"line_end":428,"column_start":5,"column_end":96}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40678,"byte_end":40724,"line_start":429,"line_end":429,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40729,"byte_end":40736,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41470,"byte_end":41483,"line_start":452,"line_end":452,"column_start":12,"column_end":25},"name":"is_link_local","qualname":"<Ipv4Network>::is_link_local","value":"pub fn is_link_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the network is is inside link-local range (169.254.0.0/16).","sig":null,"attributes":[{"value":"/ Returns [`true`] if the network is is inside link-local range (169.254.0.0/16).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40903,"byte_end":40986,"line_start":436,"line_end":436,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40991,"byte_end":40994,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 3927].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":40999,"byte_end":41047,"line_start":438,"line_end":438,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41052,"byte_end":41055,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 3927]: https://tools.ietf.org/html/rfc3927","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41060,"byte_end":41116,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41121,"byte_end":41184,"line_start":441,"line_end":441,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41189,"byte_end":41192,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41197,"byte_end":41211,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41216,"byte_end":41219,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41224,"byte_end":41231,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41236,"byte_end":41263,"line_start":446,"line_end":446,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41268,"byte_end":41300,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41305,"byte_end":41308,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(169, 254, 1, 0), 24)?.is_link_local());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41313,"byte_end":41395,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41400,"byte_end":41446,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41451,"byte_end":41458,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42230,"byte_end":42242,"line_start":473,"line_end":473,"column_start":12,"column_end":24},"name":"is_multicast","qualname":"<Ipv4Network>::is_multicast","value":"pub fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this whole network is inside multicast address range (224.0.0.0/4).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this whole network is inside multicast address range (224.0.0.0/4).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41579,"byte_end":41670,"line_start":456,"line_end":456,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41675,"byte_end":41678,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Multicast network addresses have a most significant octet between 224 and 239,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41683,"byte_end":41765,"line_start":458,"line_end":458,"column_start":5,"column_end":87}},{"value":"/ and is defined by [IETF RFC 5771].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41770,"byte_end":41808,"line_start":459,"line_end":459,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41813,"byte_end":41816,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 5771]: https://tools.ietf.org/html/rfc5771","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41821,"byte_end":41877,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41882,"byte_end":41945,"line_start":462,"line_end":462,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41950,"byte_end":41953,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41958,"byte_end":41972,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41977,"byte_end":41980,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41985,"byte_end":41992,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":41997,"byte_end":42024,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42029,"byte_end":42061,"line_start":468,"line_end":468,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42066,"byte_end":42069,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(224, 168, 1, 0), 24)?.is_multicast());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42074,"byte_end":42155,"line_start":470,"line_end":470,"column_start":5,"column_end":86}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42160,"byte_end":42206,"line_start":471,"line_end":471,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42211,"byte_end":42218,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42928,"byte_end":42943,"line_start":493,"line_end":493,"column_start":12,"column_end":27},"name":"is_benchmarking","qualname":"<Ipv4Network>::is_benchmarking","value":"pub fn is_benchmarking(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this whole network is inside benchmarking address range (198.18.0.0/15).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this whole network is inside benchmarking address range (198.18.0.0/15).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42347,"byte_end":42443,"line_start":477,"line_end":477,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42448,"byte_end":42451,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 2544].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42456,"byte_end":42504,"line_start":479,"line_end":479,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42509,"byte_end":42512,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 2544]: https://tools.ietf.org/html/rfc2544","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42517,"byte_end":42573,"line_start":481,"line_end":481,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42578,"byte_end":42641,"line_start":482,"line_end":482,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42646,"byte_end":42649,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42654,"byte_end":42668,"line_start":484,"line_end":484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42673,"byte_end":42676,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42681,"byte_end":42688,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42693,"byte_end":42720,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42725,"byte_end":42757,"line_start":488,"line_end":488,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42762,"byte_end":42765,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(198, 19, 1, 0), 24)?.is_benchmarking());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42770,"byte_end":42853,"line_start":490,"line_end":490,"column_start":5,"column_end":88}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42858,"byte_end":42904,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":42909,"byte_end":42916,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43910,"byte_end":43921,"line_start":518,"line_end":518,"column_start":12,"column_end":23},"name":"is_reserved","qualname":"<Ipv4Network>::is_reserved","value":"pub fn is_reserved(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this whole network is inside reserved address range (240.0.0.0/4), except\n broadcast address (255.255.255.255/32).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this whole network is inside reserved address range (240.0.0.0/4), except","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43117,"byte_end":43214,"line_start":499,"line_end":499,"column_start":5,"column_end":102}},{"value":"/ broadcast address (255.255.255.255/32).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43219,"byte_end":43262,"line_start":500,"line_end":500,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43267,"byte_end":43270,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Reserved network addresses have a most significant octet between 240 and 255,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43275,"byte_end":43356,"line_start":502,"line_end":502,"column_start":5,"column_end":86}},{"value":"/ and is defined by [IETF RFC 1112].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43361,"byte_end":43399,"line_start":503,"line_end":503,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43404,"byte_end":43407,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 1112]: https://tools.ietf.org/html/rfc1112","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43412,"byte_end":43468,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43473,"byte_end":43536,"line_start":506,"line_end":506,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43541,"byte_end":43544,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43549,"byte_end":43563,"line_start":508,"line_end":508,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43568,"byte_end":43571,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43576,"byte_end":43583,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43588,"byte_end":43615,"line_start":511,"line_end":511,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43620,"byte_end":43652,"line_start":512,"line_end":512,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43657,"byte_end":43660,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(240, 168, 1, 0), 24)?.is_reserved());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43665,"byte_end":43745,"line_start":514,"line_end":514,"column_start":5,"column_end":85}},{"value":"/ assert!(!Ipv4Network::new(Ipv4Addr::new(255, 255, 255, 255), 32)?.is_reserved());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43750,"byte_end":43835,"line_start":515,"line_end":515,"column_start":5,"column_end":90}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43840,"byte_end":43886,"line_start":516,"line_end":516,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":43891,"byte_end":43898,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44764,"byte_end":44780,"line_start":543,"line_end":543,"column_start":12,"column_end":28},"name":"is_documentation","qualname":"<Ipv4Network>::is_documentation","value":"pub fn is_documentation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this network is in a range designated for documentation.","sig":null,"attributes":[{"value":"/ Returns [`true`] if this network is in a range designated for documentation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44087,"byte_end":44167,"line_start":523,"line_end":523,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44172,"byte_end":44175,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This is defined in [IETF RFC 5737]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44180,"byte_end":44219,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44224,"byte_end":44227,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ - 192.0.2.0/24 (TEST-NET-1)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44232,"byte_end":44263,"line_start":527,"line_end":527,"column_start":5,"column_end":36}},{"value":"/ - 198.51.100.0/24 (TEST-NET-2)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44268,"byte_end":44302,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/ - 203.0.113.0/24 (TEST-NET-3)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44307,"byte_end":44340,"line_start":529,"line_end":529,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44345,"byte_end":44348,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 5737]: https://tools.ietf.org/html/rfc5737","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44353,"byte_end":44409,"line_start":531,"line_end":531,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44414,"byte_end":44477,"line_start":532,"line_end":532,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44482,"byte_end":44485,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44490,"byte_end":44504,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44509,"byte_end":44512,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44517,"byte_end":44524,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44529,"byte_end":44556,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44561,"byte_end":44593,"line_start":538,"line_end":538,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44598,"byte_end":44601,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(192, 0, 2, 0), 24)?.is_documentation());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44606,"byte_end":44689,"line_start":540,"line_end":540,"column_start":5,"column_end":88}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44694,"byte_end":44740,"line_start":541,"line_end":541,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44745,"byte_end":44752,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46519,"byte_end":46528,"line_start":580,"line_end":580,"column_start":12,"column_end":21},"name":"is_global","qualname":"<Ipv4Network>::is_global","value":"pub fn is_global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the network appears to be globally routable.\n See [IANA IPv4 Special-Purpose Address Registry][ipv4-sr].","sig":null,"attributes":[{"value":"/ Returns [`true`] if the network appears to be globally routable.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44879,"byte_end":44947,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/ See [IANA IPv4 Special-Purpose Address Registry][ipv4-sr].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":44952,"byte_end":45014,"line_start":548,"line_end":548,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45019,"byte_end":45022,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ The following return [`false`]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45027,"byte_end":45062,"line_start":550,"line_end":550,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45067,"byte_end":45070,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ - local identification (0.0.0.0/8)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45075,"byte_end":45113,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/ - private address (10.0.0.0/8, 172.16.0.0/12 and 192.168.0.0/16)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45118,"byte_end":45186,"line_start":553,"line_end":553,"column_start":5,"column_end":73}},{"value":"/ - Shared Address Space (100.64.0.0/10)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45191,"byte_end":45233,"line_start":554,"line_end":554,"column_start":5,"column_end":47}},{"value":"/ - the loopback address (127.0.0.0/8)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45238,"byte_end":45278,"line_start":555,"line_end":555,"column_start":5,"column_end":45}},{"value":"/ - the link-local address (169.254.0.0/16)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45283,"byte_end":45328,"line_start":556,"line_end":556,"column_start":5,"column_end":50}},{"value":"/ - IETF Protocol Assignments\t(192.0.0.0/24, except 192.0.0.9/32 and 192.0.0.10/32)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45333,"byte_end":45418,"line_start":557,"line_end":557,"column_start":5,"column_end":90}},{"value":"/ - the broadcast address (255.255.255.255/32)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45423,"byte_end":45471,"line_start":558,"line_end":558,"column_start":5,"column_end":53}},{"value":"/ - test addresses used for documentation (192.0.2.0/24, 198.51.100.0/24 and 203.0.113.0/24)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45476,"byte_end":45570,"line_start":559,"line_end":559,"column_start":5,"column_end":99}},{"value":"/ - benchmarking (198.18.0.0/15)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45575,"byte_end":45609,"line_start":560,"line_end":560,"column_start":5,"column_end":39}},{"value":"/ - reserved range (240.0.0.0/4)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45614,"byte_end":45648,"line_start":561,"line_end":561,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45653,"byte_end":45656,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ [ipv4-sr]: https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45661,"byte_end":45768,"line_start":563,"line_end":563,"column_start":5,"column_end":112}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45773,"byte_end":45836,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/ [`false`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45841,"byte_end":45905,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45910,"byte_end":45913,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45918,"byte_end":45932,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45937,"byte_end":45940,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45945,"byte_end":45952,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45957,"byte_end":45984,"line_start":570,"line_end":570,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":45989,"byte_end":46021,"line_start":571,"line_end":571,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46026,"byte_end":46029,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ipv4Network::new(Ipv4Addr::new(10, 254, 0, 0), 16)?.is_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46034,"byte_end":46112,"line_start":573,"line_end":573,"column_start":5,"column_end":83}},{"value":"/ assert!(!Ipv4Network::new(Ipv4Addr::new(192, 168, 10, 65), 32)?.is_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46117,"byte_end":46198,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/ assert!(!Ipv4Network::new(Ipv4Addr::new(172, 16, 10, 65), 32)?.is_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46203,"byte_end":46283,"line_start":575,"line_end":575,"column_start":5,"column_end":85}},{"value":"/ assert!(!Ipv4Network::new(Ipv4Addr::new(0, 0, 0, 0), 32)?.is_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46288,"byte_end":46363,"line_start":576,"line_end":576,"column_start":5,"column_end":80}},{"value":"/ assert!(Ipv4Network::new(Ipv4Addr::new(80, 9, 12, 3), 32)?.is_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46368,"byte_end":46444,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46449,"byte_end":46495,"line_start":578,"line_end":578,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":46500,"byte_end":46507,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":48084,"byte_end":48107,"line_start":619,"line_end":619,"column_start":12,"column_end":35},"name":"summarize_address_range","qualname":"<Ipv4Network>::summarize_address_range","value":"pub fn summarize_address_range(Ipv4Addr, Ipv4Addr) -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return a vector of the summarized network range given the first and last IPv4 addresses.\n Implementation of this method was inspired by Python [`ipaddress.summarize_address_range`]\n method. If first IP address is bigger than last, empty vector is returned.","sig":null,"attributes":[{"value":"/ Return a vector of the summarized network range given the first and last IPv4 addresses.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47223,"byte_end":47315,"line_start":599,"line_end":599,"column_start":5,"column_end":97}},{"value":"/ Implementation of this method was inspired by Python [`ipaddress.summarize_address_range`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47320,"byte_end":47414,"line_start":600,"line_end":600,"column_start":5,"column_end":99}},{"value":"/ method. If first IP address is bigger than last, empty vector is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47419,"byte_end":47497,"line_start":601,"line_end":601,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47502,"byte_end":47505,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ [`ipaddress.summarize_address_range`]: https://docs.python.org/3/library/ipaddress.html#ipaddress.summarize_address_range","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47510,"byte_end":47635,"line_start":603,"line_end":603,"column_start":5,"column_end":130}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47640,"byte_end":47643,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47648,"byte_end":47662,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47667,"byte_end":47670,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47675,"byte_end":47682,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47687,"byte_end":47714,"line_start":608,"line_end":608,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47719,"byte_end":47751,"line_start":609,"line_end":609,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47756,"byte_end":47759,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ let ranges = Ipv4Network::summarize_address_range(","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47764,"byte_end":47818,"line_start":611,"line_end":611,"column_start":5,"column_end":59}},{"value":"/     Ipv4Addr::new(10, 254, 0, 0),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47823,"byte_end":47860,"line_start":612,"line_end":612,"column_start":5,"column_end":42}},{"value":"/     Ipv4Addr::new(10, 255, 255, 255),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47865,"byte_end":47906,"line_start":613,"line_end":613,"column_start":5,"column_end":46}},{"value":"/ );","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47911,"byte_end":47917,"line_start":614,"line_end":614,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47922,"byte_end":47925,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Ipv4Network::new(Ipv4Addr::new(10, 254, 0, 0), 15)?, ranges[0]);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":47930,"byte_end":48009,"line_start":616,"line_end":616,"column_start":5,"column_end":84}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":48014,"byte_end":48060,"line_start":617,"line_end":617,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":48065,"byte_end":48072,"line_start":618,"line_end":618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49792,"byte_end":49810,"line_start":672,"line_end":672,"column_start":12,"column_end":30},"name":"collapse_addresses","qualname":"<Ipv4Network>::collapse_addresses","value":"pub fn collapse_addresses(&[Self]) -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of the collapsed Ipv4Networks.","sig":null,"attributes":[{"value":"/ Return an iterator of the collapsed Ipv4Networks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49015,"byte_end":49068,"line_start":652,"line_end":652,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49073,"byte_end":49076,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ Implementation of this method was inspired by Python [`ipaddress.collapse_addresses`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49081,"byte_end":49170,"line_start":654,"line_end":654,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49175,"byte_end":49178,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ [`ipaddress.collapse_addresses`]: https://docs.python.org/3/library/ipaddress.html#ipaddress.collapse_addresses","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49183,"byte_end":49298,"line_start":656,"line_end":656,"column_start":5,"column_end":120}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49303,"byte_end":49306,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49311,"byte_end":49325,"line_start":658,"line_end":658,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49330,"byte_end":49333,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49338,"byte_end":49345,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49350,"byte_end":49377,"line_start":661,"line_end":661,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49382,"byte_end":49414,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49419,"byte_end":49422,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let collapsed = Ipv4Network::collapse_addresses(&[","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49427,"byte_end":49481,"line_start":664,"line_end":664,"column_start":5,"column_end":59}},{"value":"/     Ipv4Network::new(Ipv4Addr::new(192, 0, 2, 0), 25)?,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49486,"byte_end":49545,"line_start":665,"line_end":665,"column_start":5,"column_end":64}},{"value":"/     Ipv4Network::new(Ipv4Addr::new(192, 0, 2, 128), 25)?,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49550,"byte_end":49611,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/ ]);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49616,"byte_end":49623,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49628,"byte_end":49631,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Ipv4Network::new(Ipv4Addr::new(192, 0, 2, 0), 24)?, collapsed[0]);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49636,"byte_end":49717,"line_start":669,"line_end":669,"column_start":5,"column_end":86}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49722,"byte_end":49768,"line_start":670,"line_end":670,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":49773,"byte_end":49780,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51451,"byte_end":51468,"line_start":718,"line_end":718,"column_start":12,"column_end":29},"name":"from_str_truncate","qualname":"<Ipv4Network>::from_str_truncate","value":"pub fn from_str_truncate(&str) -> Result<Self, IpNetworkParseError>","parent":null,"children":[],"decl_id":null,"docs":" Converts string in format X.X.X.X/Y (CIDR notation) to `Ipv4Network`, but truncating host bits.","sig":null,"attributes":[{"value":"/ Converts string in format X.X.X.X/Y (CIDR notation) to `Ipv4Network`, but truncating host bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":50943,"byte_end":51042,"line_start":705,"line_end":705,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51047,"byte_end":51050,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51055,"byte_end":51069,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51074,"byte_end":51077,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51082,"byte_end":51089,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51094,"byte_end":51121,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv4Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51126,"byte_end":51158,"line_start":711,"line_end":711,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51163,"byte_end":51166,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv4Network::from_str_truncate(\"192.168.1.255/24\")?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51171,"byte_end":51244,"line_start":713,"line_end":713,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(ip_network.network_address(), Ipv4Addr::new(192, 168, 1, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51249,"byte_end":51325,"line_start":714,"line_end":714,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(ip_network.netmask(), 24);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51330,"byte_end":51371,"line_start":715,"line_end":715,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkParseError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51376,"byte_end":51427,"line_start":716,"line_end":716,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51432,"byte_end":51439,"line_start":717,"line_end":717,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":394},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71824,"byte_end":71838,"line_start":14,"line_end":14,"column_start":5,"column_end":19},"name":"InterfaceLocal","qualname":"::ipv6_network::Ipv6MulticastScope::InterfaceLocal","value":"Ipv6MulticastScope::InterfaceLocal","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":396},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71844,"byte_end":71853,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"LinkLocal","qualname":"::ipv6_network::Ipv6MulticastScope::LinkLocal","value":"Ipv6MulticastScope::LinkLocal","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":398},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71859,"byte_end":71869,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"RealmLocal","qualname":"::ipv6_network::Ipv6MulticastScope::RealmLocal","value":"Ipv6MulticastScope::RealmLocal","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":400},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71875,"byte_end":71885,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"AdminLocal","qualname":"::ipv6_network::Ipv6MulticastScope::AdminLocal","value":"Ipv6MulticastScope::AdminLocal","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":402},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71891,"byte_end":71900,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"name":"SiteLocal","qualname":"::ipv6_network::Ipv6MulticastScope::SiteLocal","value":"Ipv6MulticastScope::SiteLocal","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":404},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71906,"byte_end":71923,"line_start":19,"line_end":19,"column_start":5,"column_end":22},"name":"OrganizationLocal","qualname":"::ipv6_network::Ipv6MulticastScope::OrganizationLocal","value":"Ipv6MulticastScope::OrganizationLocal","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":406},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71929,"byte_end":71935,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Global","qualname":"::ipv6_network::Ipv6MulticastScope::Global","value":"Ipv6MulticastScope::Global","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":393},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71799,"byte_end":71817,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"name":"Ipv6MulticastScope","qualname":"::ipv6_network::Ipv6MulticastScope","value":"pub enum Ipv6MulticastScope {\n    InterfaceLocal,\n    LinkLocal,\n    RealmLocal,\n    AdminLocal,\n    SiteLocal,\n    OrganizationLocal,\n    Global,\n}","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406}],"decl_id":null,"docs":" IPv6 Multicast Address Scopes.\n","sig":null,"attributes":[{"value":"/ IPv6 Multicast Address Scopes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71704,"byte_end":71738,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72020,"byte_end":72031,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"Ipv6Network","qualname":"::ipv6_network::Ipv6Network","value":"Ipv6Network {  }","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"decl_id":null,"docs":" IPv6 Network.\n","sig":null,"attributes":[{"value":"/ IPv6 Network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":71940,"byte_end":71957,"line_start":23,"line_end":23,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":228},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72177,"byte_end":72183,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::ipv6_network::Ipv6Network::LENGTH","value":"u8","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" IPv6 address length in bits.\n","sig":null,"attributes":[{"value":"/ IPv6 address length in bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72130,"byte_end":72162,"line_start":31,"line_end":31,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":229},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72280,"byte_end":72293,"line_start":35,"line_end":35,"column_start":15,"column_end":28},"name":"DEFAULT_ROUTE","qualname":"::ipv6_network::Ipv6Network::DEFAULT_ROUTE","value":"Self","parent":{"krate":0,"index":227},"children":[],"decl_id":null,"docs":" Default route that contains all IP addresses, IP network ::/0\n","sig":null,"attributes":[{"value":"/ Default route that contains all IP addresses, IP network ::/0","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72200,"byte_end":72265,"line_start":34,"line_end":34,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73103,"byte_end":73106,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6Network>::new","value":"pub fn new(Ipv6Addr, u8) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `Ipv6Network` based on [`Ipv6Addr`] and `netmask`.","sig":null,"attributes":[{"value":"/ Constructs new `Ipv6Network` based on [`Ipv6Addr`] and `netmask`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72389,"byte_end":72458,"line_start":40,"line_end":40,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72463,"byte_end":72466,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Returns error if netmask is bigger than 128 or if host bits are set in `network_address`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72471,"byte_end":72564,"line_start":42,"line_end":42,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72569,"byte_end":72572,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ [`Ipv6Addr`]: https://doc.rust-lang.org/std/net/struct.Ipv6Addr.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72577,"byte_end":72649,"line_start":44,"line_end":44,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72654,"byte_end":72657,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72662,"byte_end":72676,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72681,"byte_end":72684,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72689,"byte_end":72696,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72701,"byte_end":72728,"line_start":49,"line_end":49,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72733,"byte_end":72765,"line_start":50,"line_end":50,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72770,"byte_end":72773,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let ip = Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72778,"byte_end":72838,"line_start":52,"line_end":52,"column_start":5,"column_end":65}},{"value":"/ let ip_network = Ipv6Network::new(ip, 32)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72843,"byte_end":72890,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(ip_network.network_address(), ip);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72895,"byte_end":72944,"line_start":54,"line_end":54,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(ip_network.netmask(), 32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72949,"byte_end":72990,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72995,"byte_end":73041,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73046,"byte_end":73053,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73058,"byte_end":73091,"line_start":58,"line_end":58,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74286,"byte_end":74298,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"new_truncate","qualname":"<Ipv6Network>::new_truncate","value":"pub fn new_truncate(Ipv6Addr, u8) -> Result<Self, IpNetworkError>","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `Ipv6Network` based on [`Ipv6Addr`] and `netmask` with truncating host bits\n from given `network_address`.","sig":null,"attributes":[{"value":"/ Constructs new `Ipv6Network` based on [`Ipv6Addr`] and `netmask` with truncating host bits","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73539,"byte_end":73633,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ from given `network_address`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73638,"byte_end":73671,"line_start":75,"line_end":75,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73676,"byte_end":73679,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Returns error if netmask is bigger than 128.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73684,"byte_end":73732,"line_start":77,"line_end":77,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73737,"byte_end":73740,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`Ipv6Addr`]: https://doc.rust-lang.org/std/net/struct.Ipv6Addr.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73745,"byte_end":73817,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73822,"byte_end":73825,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73830,"byte_end":73844,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73849,"byte_end":73852,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73857,"byte_end":73864,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73869,"byte_end":73896,"line_start":84,"line_end":84,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73901,"byte_end":73933,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73938,"byte_end":73941,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let ip = Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 1, 0, 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":73946,"byte_end":74006,"line_start":87,"line_end":87,"column_start":5,"column_end":65}},{"value":"/ let ip_network = Ipv6Network::new_truncate(ip, 32)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74011,"byte_end":74067,"line_start":88,"line_end":88,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(ip_network.network_address(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74072,"byte_end":74165,"line_start":89,"line_end":89,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(ip_network.netmask(), 32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74170,"byte_end":74211,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74216,"byte_end":74262,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74267,"byte_end":74274,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75181,"byte_end":75196,"line_start":121,"line_end":121,"column_start":12,"column_end":27},"name":"network_address","qualname":"<Ipv6Network>::network_address","value":"pub fn network_address(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns network IP address (first address in range).","sig":null,"attributes":[{"value":"/ Returns network IP address (first address in range).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74741,"byte_end":74797,"line_start":107,"line_end":107,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74802,"byte_end":74805,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74810,"byte_end":74824,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74829,"byte_end":74832,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74837,"byte_end":74844,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74849,"byte_end":74876,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74881,"byte_end":74913,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74918,"byte_end":74921,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ let ip = Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74926,"byte_end":74986,"line_start":115,"line_end":115,"column_start":5,"column_end":65}},{"value":"/ let ip_network = Ipv6Network::new(ip, 32)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":74991,"byte_end":75038,"line_start":116,"line_end":116,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(ip_network.network_address(), ip);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75043,"byte_end":75092,"line_start":117,"line_end":117,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75097,"byte_end":75143,"line_start":118,"line_end":118,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75148,"byte_end":75155,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75160,"byte_end":75169,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75777,"byte_end":75789,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"last_address","qualname":"<Ipv6Network>::last_address","value":"pub fn last_address(&Self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns last IP address in range. Similar as `broadcast_address` for IPv4.","sig":null,"attributes":[{"value":"/ Returns last IP address in range. Similar as `broadcast_address` for IPv4.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75258,"byte_end":75336,"line_start":125,"line_end":125,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75341,"byte_end":75344,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75349,"byte_end":75363,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75368,"byte_end":75371,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75376,"byte_end":75383,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75388,"byte_end":75415,"line_start":130,"line_end":130,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75420,"byte_end":75452,"line_start":131,"line_end":131,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75457,"byte_end":75460,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let ip = Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75465,"byte_end":75525,"line_start":133,"line_end":133,"column_start":5,"column_end":65}},{"value":"/ let ip_network = Ipv6Network::new(ip, 32)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75530,"byte_end":75577,"line_start":134,"line_end":134,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(ip_network.last_address(), Ipv6Addr::new(0x2001, 0xdb8, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75582,"byte_end":75702,"line_start":135,"line_end":135,"column_start":5,"column_end":125}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75707,"byte_end":75753,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75758,"byte_end":75765,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76321,"byte_end":76328,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"netmask","qualname":"<Ipv6Network>::netmask","value":"pub fn netmask(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns network mask.","sig":null,"attributes":[{"value":"/ Returns network mask.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75920,"byte_end":75945,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75950,"byte_end":75953,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75958,"byte_end":75972,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75977,"byte_end":75980,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75985,"byte_end":75992,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":75997,"byte_end":76024,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76029,"byte_end":76061,"line_start":148,"line_end":148,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76066,"byte_end":76069,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let ip = Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76074,"byte_end":76134,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/ let ip_network = Ipv6Network::new(ip, 32)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76139,"byte_end":76186,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(ip_network.netmask(), 32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76191,"byte_end":76232,"line_start":152,"line_end":152,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76237,"byte_end":76283,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76288,"byte_end":76295,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76300,"byte_end":76309,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77063,"byte_end":77071,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv6Network>::contains","value":"pub fn contains(&Self, Ipv6Addr) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if given [`IPv6Addr`] is inside this network.","sig":null,"attributes":[{"value":"/ Returns [`true`] if given [`IPv6Addr`] is inside this network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76376,"byte_end":76442,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76447,"byte_end":76450,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76455,"byte_end":76518,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/ [`Ipv6Addr`]: https://doc.rust-lang.org/std/net/struct.Ipv6Addr.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76523,"byte_end":76595,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76600,"byte_end":76603,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76608,"byte_end":76622,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76627,"byte_end":76630,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76635,"byte_end":76642,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76647,"byte_end":76674,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76679,"byte_end":76711,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76716,"byte_end":76719,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 64)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76724,"byte_end":76815,"line_start":171,"line_end":171,"column_start":5,"column_end":96}},{"value":"/ assert!(ip_network.contains(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 1)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76820,"byte_end":76901,"line_start":172,"line_end":172,"column_start":5,"column_end":86}},{"value":"/ assert!(!ip_network.contains(Ipv6Addr::new(0x2001, 0xdb9, 0, 0, 0, 0, 0, 0)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76906,"byte_end":76988,"line_start":173,"line_end":173,"column_start":5,"column_end":87}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":76993,"byte_end":77039,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77044,"byte_end":77051,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77764,"byte_end":77772,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"supernet","qualname":"<Ipv6Network>::supernet","value":"pub fn supernet(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns network with smaller netmask by one. If netmask is already zero, `None` will be returned.","sig":null,"attributes":[{"value":"/ Returns network with smaller netmask by one. If netmask is already zero, `None` will be returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77254,"byte_end":77355,"line_start":181,"line_end":181,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77360,"byte_end":77363,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77368,"byte_end":77382,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77387,"byte_end":77390,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77395,"byte_end":77402,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77407,"byte_end":77434,"line_start":186,"line_end":186,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77439,"byte_end":77471,"line_start":187,"line_end":187,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77476,"byte_end":77479,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let network = Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 32)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77484,"byte_end":77572,"line_start":189,"line_end":189,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(network.supernet(), Some(Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 31)?));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77577,"byte_end":77689,"line_start":190,"line_end":190,"column_start":5,"column_end":117}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77694,"byte_end":77740,"line_start":191,"line_end":191,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77745,"byte_end":77752,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78693,"byte_end":78700,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"subnets","qualname":"<Ipv6Network>::subnets","value":"pub fn subnets(&Self) -> iterator::Ipv6NetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ipv6NetworkIterator` over networks with netmask bigger one.\n If netmask is already 128, empty iterator will be returned.","sig":null,"attributes":[{"value":"/ Returns `Ipv6NetworkIterator` over networks with netmask bigger one.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":77970,"byte_end":78042,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ If netmask is already 128, empty iterator will be returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78047,"byte_end":78110,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78115,"byte_end":78118,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78123,"byte_end":78137,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78142,"byte_end":78145,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78150,"byte_end":78157,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78162,"byte_end":78189,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78194,"byte_end":78226,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78231,"byte_end":78234,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 32)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78239,"byte_end":78330,"line_start":210,"line_end":210,"column_start":5,"column_end":96}},{"value":"/ let mut iterator = ip_network.subnets();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78335,"byte_end":78379,"line_start":211,"line_end":211,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(iterator.next().unwrap(), Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 33)?);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78384,"byte_end":78496,"line_start":212,"line_end":212,"column_start":5,"column_end":117}},{"value":"/ assert_eq!(iterator.last().unwrap(), Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0x8000, 0, 0, 0, 0, 0), 33)?);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78501,"byte_end":78618,"line_start":213,"line_end":213,"column_start":5,"column_end":122}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78623,"byte_end":78669,"line_start":214,"line_end":214,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78674,"byte_end":78681,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80009,"byte_end":80028,"line_start":244,"line_end":244,"column_start":12,"column_end":31},"name":"subnets_with_prefix","qualname":"<Ipv6Network>::subnets_with_prefix","value":"pub fn subnets_with_prefix(&Self, u8) -> iterator::Ipv6NetworkIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ipv6NetworkIterator` over networks with defined netmask. Because [`len()`] method\n returns `usize` and number of networks can be bigger than `usize`, you can use `real_len()` method\n to get exact number of networks.","sig":null,"attributes":[{"value":"/ Returns `Ipv6NetworkIterator` over networks with defined netmask. Because [`len()`] method","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78892,"byte_end":78986,"line_start":221,"line_end":221,"column_start":5,"column_end":99}},{"value":"/ returns `usize` and number of networks can be bigger than `usize`, you can use `real_len()` method","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":78991,"byte_end":79093,"line_start":222,"line_end":222,"column_start":5,"column_end":107}},{"value":"/ to get exact number of networks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79098,"byte_end":79134,"line_start":223,"line_end":223,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79139,"byte_end":79142,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`len()`]: https://doc.rust-lang.org/std/iter/trait.ExactSizeIterator.html#method.len","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79147,"byte_end":79236,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79241,"byte_end":79244,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79249,"byte_end":79261,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79266,"byte_end":79269,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This method panics when prefix is bigger than 128 or when prefix is lower or equal than netmask.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79274,"byte_end":79374,"line_start":229,"line_end":229,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79379,"byte_end":79382,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79387,"byte_end":79401,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79406,"byte_end":79409,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79414,"byte_end":79421,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79426,"byte_end":79453,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79458,"byte_end":79490,"line_start":235,"line_end":235,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79495,"byte_end":79498,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let network = Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 32)?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79503,"byte_end":79591,"line_start":237,"line_end":237,"column_start":5,"column_end":93}},{"value":"/ let mut iterator = network.subnets_with_prefix(33);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79596,"byte_end":79651,"line_start":238,"line_end":238,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(2, iterator.real_len());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79656,"byte_end":79695,"line_start":239,"line_end":239,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(iterator.next().unwrap(), Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 33)?);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79700,"byte_end":79812,"line_start":240,"line_end":240,"column_start":5,"column_end":117}},{"value":"/ assert_eq!(iterator.last().unwrap(), Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0x8000, 0, 0, 0, 0, 0), 33)?);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79817,"byte_end":79934,"line_start":241,"line_end":241,"column_start":5,"column_end":122}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79939,"byte_end":79985,"line_start":242,"line_end":242,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":79990,"byte_end":79997,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80616,"byte_end":80632,"line_start":261,"line_end":261,"column_start":12,"column_end":28},"name":"is_default_route","qualname":"<Ipv6Network>::is_default_route","value":"pub fn is_default_route(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] for the default route network (::/0), that contains all IPv6 addresses.","sig":null,"attributes":[{"value":"/ Returns [`true`] for the default route network (::/0), that contains all IPv6 addresses.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80152,"byte_end":80244,"line_start":248,"line_end":248,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80249,"byte_end":80252,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80257,"byte_end":80320,"line_start":250,"line_end":250,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80325,"byte_end":80328,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80333,"byte_end":80347,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80352,"byte_end":80355,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80360,"byte_end":80367,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80372,"byte_end":80399,"line_start":255,"line_end":255,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80404,"byte_end":80436,"line_start":256,"line_end":256,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80441,"byte_end":80444,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0), 0)?.is_default_route());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80449,"byte_end":80541,"line_start":258,"line_end":258,"column_start":5,"column_end":97}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80546,"byte_end":80592,"line_start":259,"line_end":259,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80597,"byte_end":80604,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81361,"byte_end":81375,"line_start":282,"line_end":282,"column_start":12,"column_end":26},"name":"is_unspecified","qualname":"<Ipv6Network>::is_unspecified","value":"pub fn is_unspecified(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] for the special 'unspecified' network (::/128).","sig":null,"attributes":[{"value":"/ Returns [`true`] for the special 'unspecified' network (::/128).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80687,"byte_end":80755,"line_start":265,"line_end":265,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80760,"byte_end":80763,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 4291].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80768,"byte_end":80816,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80821,"byte_end":80824,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80829,"byte_end":80885,"line_start":269,"line_end":269,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80890,"byte_end":80953,"line_start":270,"line_end":270,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80958,"byte_end":80961,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80966,"byte_end":80980,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80985,"byte_end":80988,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":80993,"byte_end":81000,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81005,"byte_end":81032,"line_start":275,"line_end":275,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81037,"byte_end":81069,"line_start":276,"line_end":276,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81074,"byte_end":81077,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_unspecified());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81082,"byte_end":81189,"line_start":278,"line_end":278,"column_start":5,"column_end":112}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0), 128)?.is_unspecified());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81194,"byte_end":81286,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81291,"byte_end":81337,"line_start":280,"line_end":280,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81342,"byte_end":81349,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82145,"byte_end":82156,"line_start":303,"line_end":303,"column_start":12,"column_end":23},"name":"is_loopback","qualname":"<Ipv6Network>::is_loopback","value":"pub fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a loopback network (::1/128).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a loopback network (::1/128).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81482,"byte_end":81543,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81548,"byte_end":81551,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 4291].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81556,"byte_end":81604,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81609,"byte_end":81612,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81617,"byte_end":81673,"line_start":290,"line_end":290,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81678,"byte_end":81741,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81746,"byte_end":81749,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81754,"byte_end":81768,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81773,"byte_end":81776,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81781,"byte_end":81788,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81793,"byte_end":81820,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81825,"byte_end":81857,"line_start":297,"line_end":297,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81862,"byte_end":81865,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0x1), 128)?.is_loopback());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81870,"byte_end":81961,"line_start":299,"line_end":299,"column_start":5,"column_end":96}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_loopback());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":81966,"byte_end":82070,"line_start":300,"line_end":300,"column_start":5,"column_end":109}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82075,"byte_end":82121,"line_start":301,"line_end":301,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82126,"byte_end":82133,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83177,"byte_end":83186,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"is_global","qualname":"<Ipv6Network>::is_global","value":"pub fn is_global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the address appears to be globally routable.","sig":null,"attributes":[{"value":"/ Returns [`true`] if the address appears to be globally routable.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82228,"byte_end":82296,"line_start":307,"line_end":307,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82301,"byte_end":82304,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ The following return [`false`]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82309,"byte_end":82344,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82349,"byte_end":82352,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ - the loopback network","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82357,"byte_end":82383,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ - link-local, site-local, and unique local unicast networks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82388,"byte_end":82451,"line_start":312,"line_end":312,"column_start":5,"column_end":68}},{"value":"/ - interface-, link-, realm-, admin- and site-local multicast networks","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82456,"byte_end":82529,"line_start":313,"line_end":313,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82534,"byte_end":82537,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82542,"byte_end":82605,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"/ [`false`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82610,"byte_end":82674,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82679,"byte_end":82682,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82687,"byte_end":82701,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82706,"byte_end":82709,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82714,"byte_end":82721,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82726,"byte_end":82753,"line_start":321,"line_end":321,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82758,"byte_end":82790,"line_start":322,"line_end":322,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82795,"byte_end":82798,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82803,"byte_end":82904,"line_start":324,"line_end":324,"column_start":5,"column_end":106}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0x1), 128)?.is_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":82909,"byte_end":82999,"line_start":325,"line_end":325,"column_start":5,"column_end":95}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0, 0, 0x1c9, 0, 0, 0xafc8, 0, 0x1), 128)?.is_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83004,"byte_end":83102,"line_start":326,"line_end":326,"column_start":5,"column_end":103}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83107,"byte_end":83153,"line_start":327,"line_end":327,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83158,"byte_end":83165,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84074,"byte_end":84089,"line_start":354,"line_end":354,"column_start":12,"column_end":27},"name":"is_unique_local","qualname":"<Ipv6Network>::is_unique_local","value":"pub fn is_unique_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a part of unique local network (fc00::/7).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a part of unique local network (fc00::/7).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83388,"byte_end":83462,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83467,"byte_end":83470,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 4193].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83475,"byte_end":83523,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83528,"byte_end":83531,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4193]: https://tools.ietf.org/html/rfc4193","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83536,"byte_end":83592,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83597,"byte_end":83660,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83665,"byte_end":83668,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83673,"byte_end":83687,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83692,"byte_end":83695,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83700,"byte_end":83707,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83712,"byte_end":83739,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83744,"byte_end":83776,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83781,"byte_end":83784,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0xfc02, 0, 0, 0, 0, 0, 0, 0), 16)?.is_unique_local());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83789,"byte_end":83886,"line_start":350,"line_end":350,"column_start":5,"column_end":102}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_unique_local());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":83891,"byte_end":83999,"line_start":351,"line_end":351,"column_start":5,"column_end":113}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84004,"byte_end":84050,"line_start":352,"line_end":352,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84055,"byte_end":84062,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84909,"byte_end":84930,"line_start":375,"line_end":375,"column_start":12,"column_end":33},"name":"is_unicast_link_local","qualname":"<Ipv6Network>::is_unicast_link_local","value":"pub fn is_unicast_link_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the network is part of unicast and link-local (fe80::/10).","sig":null,"attributes":[{"value":"/ Returns [`true`] if the network is part of unicast and link-local (fe80::/10).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84203,"byte_end":84285,"line_start":358,"line_end":358,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84290,"byte_end":84293,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 4291].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84298,"byte_end":84346,"line_start":360,"line_end":360,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84351,"byte_end":84354,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84359,"byte_end":84415,"line_start":362,"line_end":362,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84420,"byte_end":84483,"line_start":363,"line_end":363,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84488,"byte_end":84491,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84496,"byte_end":84510,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84515,"byte_end":84518,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84523,"byte_end":84530,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84535,"byte_end":84562,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84567,"byte_end":84599,"line_start":369,"line_end":369,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84604,"byte_end":84607,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0xfe8a, 0, 0, 0, 0, 0, 0, 0), 16)?.is_unicast_link_local());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84612,"byte_end":84715,"line_start":371,"line_end":371,"column_start":5,"column_end":108}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_unicast_link_local());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84720,"byte_end":84834,"line_start":372,"line_end":372,"column_start":5,"column_end":119}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84839,"byte_end":84885,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":84890,"byte_end":84897,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85631,"byte_end":85652,"line_start":393,"line_end":393,"column_start":12,"column_end":33},"name":"is_unicast_site_local","qualname":"<Ipv6Network>::is_unicast_site_local","value":"pub fn is_unicast_site_local(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a deprecated unicast site-local network (fec0::/10).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a deprecated unicast site-local network (fec0::/10).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85045,"byte_end":85129,"line_start":379,"line_end":379,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85134,"byte_end":85137,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85142,"byte_end":85205,"line_start":381,"line_end":381,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85210,"byte_end":85213,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85218,"byte_end":85232,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85237,"byte_end":85240,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85245,"byte_end":85252,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85257,"byte_end":85284,"line_start":386,"line_end":386,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85289,"byte_end":85321,"line_start":387,"line_end":387,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85326,"byte_end":85329,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0xfec2, 0, 0, 0, 0, 0, 0, 0), 16)?.is_unicast_site_local());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85334,"byte_end":85437,"line_start":389,"line_end":389,"column_start":5,"column_end":108}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_unicast_site_local());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85442,"byte_end":85556,"line_start":390,"line_end":390,"column_start":5,"column_end":119}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85561,"byte_end":85607,"line_start":391,"line_end":391,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85612,"byte_end":85619,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86478,"byte_end":86494,"line_start":414,"line_end":414,"column_start":12,"column_end":28},"name":"is_documentation","qualname":"<Ipv6Network>::is_documentation","value":"pub fn is_documentation(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a part of network reserved for documentation (2001:db8::/32).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a part of network reserved for documentation (2001:db8::/32).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85767,"byte_end":85860,"line_start":397,"line_end":397,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85865,"byte_end":85868,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ This property is defined in [IETF RFC 3849].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85873,"byte_end":85921,"line_start":399,"line_end":399,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85926,"byte_end":85929,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 3849]: https://tools.ietf.org/html/rfc3849","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85934,"byte_end":85990,"line_start":401,"line_end":401,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":85995,"byte_end":86058,"line_start":402,"line_end":402,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86063,"byte_end":86066,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86071,"byte_end":86085,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86090,"byte_end":86093,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86098,"byte_end":86105,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86110,"byte_end":86137,"line_start":407,"line_end":407,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86142,"byte_end":86174,"line_start":408,"line_end":408,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86179,"byte_end":86182,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 32)?.is_documentation());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86187,"byte_end":86289,"line_start":410,"line_end":410,"column_start":5,"column_end":107}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_documentation());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86294,"byte_end":86403,"line_start":411,"line_end":411,"column_start":5,"column_end":114}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86408,"byte_end":86454,"line_start":412,"line_end":412,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86459,"byte_end":86466,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87583,"byte_end":87600,"line_start":443,"line_end":443,"column_start":12,"column_end":29},"name":"is_unicast_global","qualname":"<Ipv6Network>::is_unicast_global","value":"pub fn is_unicast_global(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if the network is a globally routable unicast network.","sig":null,"attributes":[{"value":"/ Returns [`true`] if the network is a globally routable unicast network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86655,"byte_end":86730,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86735,"byte_end":86738,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ The following return [`false`]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86743,"byte_end":86778,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86783,"byte_end":86786,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ - the loopback network","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86791,"byte_end":86817,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/ - the link-local network","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86822,"byte_end":86850,"line_start":424,"line_end":424,"column_start":5,"column_end":33}},{"value":"/ - the (deprecated) site-local network","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86855,"byte_end":86896,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/ - unique local network","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86901,"byte_end":86927,"line_start":426,"line_end":426,"column_start":5,"column_end":31}},{"value":"/ - the unspecified network","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86932,"byte_end":86961,"line_start":427,"line_end":427,"column_start":5,"column_end":34}},{"value":"/ - the network range reserved for documentation","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":86966,"byte_end":87016,"line_start":428,"line_end":428,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87021,"byte_end":87024,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87029,"byte_end":87092,"line_start":430,"line_end":430,"column_start":5,"column_end":68}},{"value":"/ [`false`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87097,"byte_end":87161,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87166,"byte_end":87169,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87174,"byte_end":87188,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87193,"byte_end":87196,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87201,"byte_end":87208,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87213,"byte_end":87240,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87245,"byte_end":87277,"line_start":437,"line_end":437,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87282,"byte_end":87285,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0), 32)?.is_unicast_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87290,"byte_end":87394,"line_start":439,"line_end":439,"column_start":5,"column_end":109}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_unicast_global());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87399,"byte_end":87508,"line_start":440,"line_end":440,"column_start":5,"column_end":114}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87513,"byte_end":87559,"line_start":441,"line_end":441,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87564,"byte_end":87571,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88576,"byte_end":88588,"line_start":470,"line_end":470,"column_start":12,"column_end":24},"name":"is_multicast","qualname":"<Ipv6Network>::is_multicast","value":"pub fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns [`true`] if this is a part of multicast network (ff00::/8).","sig":null,"attributes":[{"value":"/ Returns [`true`] if this is a part of multicast network (ff00::/8).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87900,"byte_end":87971,"line_start":453,"line_end":453,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87976,"byte_end":87979,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This property is defined by [IETF RFC 4291].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":87984,"byte_end":88032,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88037,"byte_end":88040,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88045,"byte_end":88101,"line_start":457,"line_end":457,"column_start":5,"column_end":61}},{"value":"/ [`true`]: https://doc.rust-lang.org/std/primitive.bool.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88106,"byte_end":88169,"line_start":458,"line_end":458,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88174,"byte_end":88177,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88182,"byte_end":88196,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88201,"byte_end":88204,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88209,"byte_end":88216,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88221,"byte_end":88248,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88253,"byte_end":88285,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88290,"byte_end":88293,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ assert!(Ipv6Network::new(Ipv6Addr::new(0xff00, 0, 0, 0, 0, 0, 0, 0), 8)?.is_multicast());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88298,"byte_end":88391,"line_start":466,"line_end":466,"column_start":5,"column_end":98}},{"value":"/ assert!(!Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.is_multicast());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88396,"byte_end":88501,"line_start":467,"line_end":467,"column_start":5,"column_end":110}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88506,"byte_end":88552,"line_start":468,"line_end":468,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88557,"byte_end":88564,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":89379,"byte_end":89394,"line_start":491,"line_end":491,"column_start":12,"column_end":27},"name":"multicast_scope","qualname":"<Ipv6Network>::multicast_scope","value":"pub fn multicast_scope(&Self) -> Option<Ipv6MulticastScope>","parent":null,"children":[],"decl_id":null,"docs":" Returns the network's multicast scope if the network is multicast.","sig":null,"attributes":[{"value":"/ Returns the network's multicast scope if the network is multicast.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88661,"byte_end":88731,"line_start":474,"line_end":474,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88736,"byte_end":88739,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ These scopes are defined in [IETF RFC 7346].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88744,"byte_end":88792,"line_start":476,"line_end":476,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88797,"byte_end":88800,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ [IETF RFC 7346]: https://tools.ietf.org/html/rfc7346","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88805,"byte_end":88861,"line_start":478,"line_end":478,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88866,"byte_end":88869,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88874,"byte_end":88888,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88893,"byte_end":88896,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88901,"byte_end":88908,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88913,"byte_end":88940,"line_start":483,"line_end":483,"column_start":5,"column_end":32}},{"value":"/ use ip_network::{Ipv6Network, Ipv6MulticastScope};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":88945,"byte_end":88999,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":89004,"byte_end":89007,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Ipv6Network::new(Ipv6Addr::new(0xff0e, 0, 0, 0, 0, 0, 0, 0), 32)?.multicast_scope(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":89012,"byte_end":89111,"line_start":486,"line_end":486,"column_start":5,"column_end":104}},{"value":"/                              Some(Ipv6MulticastScope::Global));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":89116,"byte_end":89183,"line_start":487,"line_end":487,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Ipv6Network::new(Ipv6Addr::new(0, 0, 0, 0, 0, 0xffff, 0xc00a, 0x2ff), 128)?.multicast_scope(), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":89188,"byte_end":89304,"line_start":488,"line_end":488,"column_start":5,"column_end":121}},{"value":"/ # Ok::<(), ip_network::IpNetworkError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":89309,"byte_end":89355,"line_start":489,"line_end":489,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":89360,"byte_end":89367,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90590,"byte_end":90607,"line_start":521,"line_end":521,"column_start":12,"column_end":29},"name":"from_str_truncate","qualname":"<Ipv6Network>::from_str_truncate","value":"pub fn from_str_truncate(&str) -> Result<Self, IpNetworkParseError>","parent":null,"children":[],"decl_id":null,"docs":" Converts string in format X:X::X/Y (CIDR notation) to `Ipv6Network`, but truncating host bits.","sig":null,"attributes":[{"value":"/ Converts string in format X:X::X/Y (CIDR notation) to `Ipv6Network`, but truncating host bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90068,"byte_end":90166,"line_start":508,"line_end":508,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90171,"byte_end":90174,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90179,"byte_end":90193,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90198,"byte_end":90201,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90206,"byte_end":90213,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90218,"byte_end":90245,"line_start":513,"line_end":513,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90250,"byte_end":90282,"line_start":514,"line_end":514,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90287,"byte_end":90290,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let ip_network = Ipv6Network::from_str_truncate(\"2001:db8::1/32\")?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90295,"byte_end":90366,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(ip_network.network_address(), Ipv6Addr::new(0x2001, 0xdb8, 0, 0, 0, 0, 0, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90371,"byte_end":90464,"line_start":517,"line_end":517,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(ip_network.netmask(), 32);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90469,"byte_end":90510,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), ip_network::IpNetworkParseError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90515,"byte_end":90566,"line_start":519,"line_end":519,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":90571,"byte_end":90578,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91881,"byte_end":91899,"line_start":554,"line_end":554,"column_start":12,"column_end":30},"name":"collapse_addresses","qualname":"<Ipv6Network>::collapse_addresses","value":"pub fn collapse_addresses(&[Self]) -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator of the collapsed Ipv6Networks.","sig":null,"attributes":[{"value":"/ Return an iterator of the collapsed Ipv6Networks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91114,"byte_end":91167,"line_start":533,"line_end":533,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91172,"byte_end":91175,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Implementation of this method was inspired by Python [`ipaddress.collapse_addresses`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91180,"byte_end":91269,"line_start":535,"line_end":535,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91274,"byte_end":91277,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ [`ipaddress.collapse_addresses`]: https://docs.python.org/3/library/ipaddress.html#ipaddress.collapse_addresses","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91282,"byte_end":91397,"line_start":537,"line_end":537,"column_start":5,"column_end":120}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91402,"byte_end":91405,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91410,"byte_end":91424,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91429,"byte_end":91432,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91437,"byte_end":91444,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv6Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91449,"byte_end":91476,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/ use ip_network::Ipv6Network;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91481,"byte_end":91513,"line_start":543,"line_end":543,"column_start":5,"column_end":37}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91518,"byte_end":91544,"line_start":544,"line_end":544,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91549,"byte_end":91552,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let collapsed = Ipv6Network::collapse_addresses(&[","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91557,"byte_end":91611,"line_start":546,"line_end":546,"column_start":5,"column_end":59}},{"value":"/     Ipv6Network::from_str(\"2001::/120\")?,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91616,"byte_end":91661,"line_start":547,"line_end":547,"column_start":5,"column_end":50}},{"value":"/     Ipv6Network::from_str(\"2001::/96\")?,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91666,"byte_end":91710,"line_start":548,"line_end":548,"column_start":5,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91715,"byte_end":91722,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91727,"byte_end":91730,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Ipv6Network::from_str(\"2001::/96\")?, collapsed[0]);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91735,"byte_end":91801,"line_start":551,"line_end":551,"column_start":5,"column_end":71}},{"value":"/ # Ok::<(), ip_network::IpNetworkParseError>(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91806,"byte_end":91857,"line_start":552,"line_end":552,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":91862,"byte_end":91869,"line_start":553,"line_end":553,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":268},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterator","qualname":"::iterator","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":325}],"decl_id":null,"docs":" `Ipv4RangeIterator`, `Ipv4NetworkIterator`, and `Ipv6NetworkIterator`.\n","sig":null,"attributes":[{"value":"/ `Ipv4RangeIterator`, `Ipv4NetworkIterator`, and `Ipv6NetworkIterator`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1245,"byte_end":1319,"line_start":38,"line_end":38,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":287},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103428,"byte_end":103445,"line_start":15,"line_end":15,"column_start":12,"column_end":29},"name":"Ipv4RangeIterator","qualname":"::iterator::Ipv4RangeIterator","value":"Ipv4RangeIterator {  }","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"decl_id":null,"docs":" IPv4 range iterator.\n","sig":null,"attributes":[{"value":"/ IPv4 range iterator.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103392,"byte_end":103416,"line_start":14,"line_end":14,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104273,"byte_end":104276,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4RangeIterator>::new","value":"pub fn new(Ipv4Addr, Ipv4Addr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `Ipv4RangeIterator` for given range, both `from` and `to` address are inclusive.","sig":null,"attributes":[{"value":"/ Constructs new `Ipv4RangeIterator` for given range, both `from` and `to` address are inclusive.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103530,"byte_end":103629,"line_start":22,"line_end":22,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103634,"byte_end":103637,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103642,"byte_end":103654,"line_start":24,"line_end":24,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103659,"byte_end":103662,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `to` address is bigger or same than `from` address.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103667,"byte_end":103727,"line_start":26,"line_end":26,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103732,"byte_end":103735,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103740,"byte_end":103754,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103759,"byte_end":103762,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103767,"byte_end":103774,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use std::net::Ipv4Addr;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103779,"byte_end":103806,"line_start":31,"line_end":31,"column_start":5,"column_end":32}},{"value":"/ use ip_network::iterator::Ipv4RangeIterator;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103811,"byte_end":103859,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103864,"byte_end":103867,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let mut iterator = Ipv4RangeIterator::new(","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103872,"byte_end":103918,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/     Ipv4Addr::new(192, 168, 2, 0),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103923,"byte_end":103961,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/     Ipv4Addr::new(192, 168, 2, 255)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103966,"byte_end":104005,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104010,"byte_end":104016,"line_start":37,"line_end":37,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(iterator.next().unwrap(), Ipv4Addr::new(192, 168, 2, 0));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104021,"byte_end":104093,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(iterator.next().unwrap(), Ipv4Addr::new(192, 168, 2, 1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104098,"byte_end":104170,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(iterator.last().unwrap(), Ipv4Addr::new(192, 168, 2, 255));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104175,"byte_end":104249,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104254,"byte_end":104261,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104658,"byte_end":104663,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"hosts","qualname":"<Ipv4RangeIterator>::hosts","value":"pub fn hosts(Ipv4Network) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `Ipv4RangeIterator` that iterates host (without network and broadcast address)\n IPs in Ipv4Network.\n","sig":null,"attributes":[{"value":"/ Constructs new `Ipv4RangeIterator` that iterates host (without network and broadcast address)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104521,"byte_end":104618,"line_start":53,"line_end":53,"column_start":5,"column_end":102}},{"value":"/ IPs in Ipv4Network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":104623,"byte_end":104646,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":105963,"byte_end":105982,"line_start":102,"line_end":102,"column_start":12,"column_end":31},"name":"Ipv4NetworkIterator","qualname":"::iterator::Ipv4NetworkIterator","value":"Ipv4NetworkIterator {  }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" Iterates over new created IPv4 network from given network.\n","sig":null,"attributes":[{"value":"/ Iterates over new created IPv4 network from given network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":105889,"byte_end":105951,"line_start":101,"line_end":101,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106460,"byte_end":106463,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4NetworkIterator>::new","value":"pub fn new(Ipv4Network, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `Ipv4NetworkIterator`, that iterates over networks based on `network` and\n `new_netmask`. If network has already netmask 32 or when is the same as `new_netmask`, empty\n iterator is returned.","sig":null,"attributes":[{"value":"/ Constructs new `Ipv4NetworkIterator`, that iterates over networks based on `network` and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106090,"byte_end":106182,"line_start":110,"line_end":110,"column_start":5,"column_end":97}},{"value":"/ `new_netmask`. If network has already netmask 32 or when is the same as `new_netmask`, empty","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106187,"byte_end":106283,"line_start":111,"line_end":111,"column_start":5,"column_end":101}},{"value":"/ iterator is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106288,"byte_end":106313,"line_start":112,"line_end":112,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106318,"byte_end":106321,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106326,"byte_end":106338,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106343,"byte_end":106346,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ When `new_netmask` is smaller than `network` netmask or when `net_netmask` is bigger than 32.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106351,"byte_end":106448,"line_start":116,"line_end":116,"column_start":5,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108221,"byte_end":108240,"line_start":183,"line_end":183,"column_start":12,"column_end":31},"name":"Ipv6NetworkIterator","qualname":"::iterator::Ipv6NetworkIterator","value":"Ipv6NetworkIterator {  }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"decl_id":null,"docs":" Iterates over new created IPv6 network from given network.\n","sig":null,"attributes":[{"value":"/ Iterates over new created IPv6 network from given network.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108147,"byte_end":108209,"line_start":182,"line_end":182,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108722,"byte_end":108725,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6NetworkIterator>::new","value":"pub fn new(Ipv6Network, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs new `Ipv6NetworkIterator`, that iterates over networks based on `network` and\n `new_netmask`. If network has already netmask 128 or when is the same as `new_netmask`, empty\n iterator is returned.","sig":null,"attributes":[{"value":"/ Constructs new `Ipv6NetworkIterator`, that iterates over networks based on `network` and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108350,"byte_end":108442,"line_start":191,"line_end":191,"column_start":5,"column_end":97}},{"value":"/ `new_netmask`. If network has already netmask 128 or when is the same as `new_netmask`, empty","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108447,"byte_end":108544,"line_start":192,"line_end":192,"column_start":5,"column_end":102}},{"value":"/ iterator is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108549,"byte_end":108574,"line_start":193,"line_end":193,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108579,"byte_end":108582,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108587,"byte_end":108599,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108604,"byte_end":108607,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ When `new_netmask` is smaller than `network` netmask or when `net_netmask` is bigger than 128.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108612,"byte_end":108710,"line_start":197,"line_end":197,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":109559,"byte_end":109567,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"real_len","qualname":"<Ipv6NetworkIterator>::real_len","value":"pub fn real_len(&Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":438},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1895,"byte_end":1907,"line_start":58,"line_end":58,"column_start":5,"column_end":17},"name":"NetmaskError","qualname":"::IpNetworkError::NetmaskError","value":"IpNetworkError::NetmaskError(u8)","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Network mask is bigger than possible for given IP version (32 for IPv4, 128 for IPv6).\n","sig":null,"attributes":[{"value":"/ Network mask is bigger than possible for given IP version (32 for IPv4, 128 for IPv6).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1800,"byte_end":1890,"line_start":57,"line_end":57,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":441},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1972,"byte_end":1983,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"HostBitsSet","qualname":"::IpNetworkError::HostBitsSet","value":"IpNetworkError::HostBitsSet","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Host bits are set in given network IP address.\n","sig":null,"attributes":[{"value":"/ Host bits are set in given network IP address.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1917,"byte_end":1967,"line_start":59,"line_end":59,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":437},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1779,"byte_end":1793,"line_start":56,"line_end":56,"column_start":10,"column_end":24},"name":"IpNetworkError","qualname":"::IpNetworkError","value":"pub enum IpNetworkError { NetmaskError(u8), HostBitsSet, }","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":441}],"decl_id":null,"docs":" Errors when creating new IPv4 or IPv6 networks.\n","sig":null,"attributes":[{"value":"/ Errors when creating new IPv4 or IPv6 networks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1690,"byte_end":1741,"line_start":54,"line_end":54,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":450},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2540,"byte_end":2560,"line_start":79,"line_end":79,"column_start":5,"column_end":25},"name":"InvalidNetmaskFormat","qualname":"::IpNetworkParseError::InvalidNetmaskFormat","value":"IpNetworkParseError::InvalidNetmaskFormat","parent":{"krate":0,"index":449},"children":[],"decl_id":null,"docs":" Network mask is not valid integer between 0 and 255.\n","sig":null,"attributes":[{"value":"/ Network mask is not valid integer between 0 and 255.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2479,"byte_end":2535,"line_start":78,"line_end":78,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":452},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2620,"byte_end":2638,"line_start":81,"line_end":81,"column_start":5,"column_end":23},"name":"InvalidFormatError","qualname":"::IpNetworkParseError::InvalidFormatError","value":"IpNetworkParseError::InvalidFormatError","parent":{"krate":0,"index":449},"children":[],"decl_id":null,"docs":" Network address has invalid format (not X/Y).\n","sig":null,"attributes":[{"value":"/ Network address has invalid format (not X/Y).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2566,"byte_end":2615,"line_start":80,"line_end":80,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":454},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2694,"byte_end":2708,"line_start":83,"line_end":83,"column_start":5,"column_end":19},"name":"AddrParseError","qualname":"::IpNetworkParseError::AddrParseError","value":"IpNetworkParseError::AddrParseError","parent":{"krate":0,"index":449},"children":[],"decl_id":null,"docs":" Invalid IP address syntax (IPv4 or IPv6).\n","sig":null,"attributes":[{"value":"/ Invalid IP address syntax (IPv4 or IPv6).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2644,"byte_end":2689,"line_start":82,"line_end":82,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":456},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2769,"byte_end":2783,"line_start":85,"line_end":85,"column_start":5,"column_end":19},"name":"IpNetworkError","qualname":"::IpNetworkParseError::IpNetworkError","value":"IpNetworkParseError::IpNetworkError(IpNetworkError)","parent":{"krate":0,"index":449},"children":[],"decl_id":null,"docs":" Error when creating new IPv4 or IPv6 networks.\n","sig":null,"attributes":[{"value":"/ Error when creating new IPv4 or IPv6 networks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2714,"byte_end":2764,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":449},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2453,"byte_end":2472,"line_start":77,"line_end":77,"column_start":10,"column_end":29},"name":"IpNetworkParseError","qualname":"::IpNetworkParseError","value":"pub enum IpNetworkParseError {\n    InvalidNetmaskFormat,\n    InvalidFormatError,\n    AddrParseError,\n    IpNetworkError(IpNetworkError),\n}","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456}],"decl_id":null,"docs":" Errors from IPv4 or IPv6 network parsing.\n","sig":null,"attributes":[{"value":"/ Errors from IPv4 or IPv6 network parsing.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2370,"byte_end":2415,"line_start":75,"line_end":75,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5772,"byte_end":5781,"line_start":16,"line_end":16,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":13696,"byte_end":13705,"line_start":232,"line_end":232,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":14404,"byte_end":14413,"line_start":253,"line_end":253,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":15458,"byte_end":15467,"line_start":281,"line_end":281,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":15658,"byte_end":15667,"line_start":289,"line_end":289,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":15857,"byte_end":15866,"line_start":297,"line_end":297,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16170,"byte_end":16179,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16307,"byte_end":16316,"line_start":314,"line_end":314,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16449,"byte_end":16458,"line_start":321,"line_end":321,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16666,"byte_end":16675,"line_start":330,"line_end":330,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16881,"byte_end":16892,"line_start":339,"line_end":339,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":17096,"byte_end":17107,"line_start":348,"line_end":348,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":17314,"byte_end":17323,"line_start":357,"line_end":357,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":17579,"byte_end":17590,"line_start":366,"line_end":366,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":17843,"byte_end":17852,"line_start":375,"line_end":375,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":18105,"byte_end":18116,"line_start":384,"line_end":384,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26340,"byte_end":26351,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51995,"byte_end":52006,"line_start":731,"line_end":731,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":52530,"byte_end":52541,"line_start":748,"line_end":748,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":53618,"byte_end":53629,"line_start":778,"line_end":778,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":53865,"byte_end":53876,"line_start":789,"line_end":789,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":54051,"byte_end":54062,"line_start":796,"line_end":796,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":54219,"byte_end":54230,"line_start":803,"line_end":803,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72112,"byte_end":72123,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":93042,"byte_end":93053,"line_start":588,"line_end":588,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":93625,"byte_end":93636,"line_start":606,"line_end":606,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":94728,"byte_end":94739,"line_start":636,"line_end":636,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":94976,"byte_end":94987,"line_start":647,"line_end":647,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":95162,"byte_end":95173,"line_start":654,"line_end":654,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103506,"byte_end":103523,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":105173,"byte_end":105190,"line_start":71,"line_end":71,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":105867,"byte_end":105884,"line_start":99,"line_end":99,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106064,"byte_end":106083,"line_start":109,"line_end":109,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":107296,"byte_end":107315,"line_start":149,"line_end":149,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108123,"byte_end":108142,"line_start":180,"line_end":180,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108324,"byte_end":108343,"line_start":190,"line_end":190,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":109738,"byte_end":109757,"line_start":238,"line_end":238,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":110657,"byte_end":110676,"line_start":271,"line_end":271,"column_start":28,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2003,"byte_end":2017,"line_start":63,"line_end":63,"column_start":16,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2044,"byte_end":2058,"line_start":65,"line_end":65,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2819,"byte_end":2838,"line_start":88,"line_end":88,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":3081,"byte_end":3100,"line_start":97,"line_end":97,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":1328,"byte_end":1336,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":268}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":5772,"byte_end":5781,"line_start":16,"line_end":16,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":13696,"byte_end":13705,"line_start":232,"line_end":232,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":14404,"byte_end":14413,"line_start":253,"line_end":253,"column_start":18,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":11983}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":15458,"byte_end":15467,"line_start":281,"line_end":281,"column_start":25,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":15658,"byte_end":15667,"line_start":289,"line_end":289,"column_start":25,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":15857,"byte_end":15866,"line_start":297,"line_end":297,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16170,"byte_end":16179,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16307,"byte_end":16316,"line_start":314,"line_end":314,"column_start":28,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16449,"byte_end":16458,"line_start":321,"line_end":321,"column_start":33,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16666,"byte_end":16675,"line_start":330,"line_end":330,"column_start":33,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":16881,"byte_end":16892,"line_start":339,"line_end":339,"column_start":31,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":17096,"byte_end":17107,"line_start":348,"line_end":348,"column_start":31,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":17314,"byte_end":17323,"line_start":357,"line_end":357,"column_start":34,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":17579,"byte_end":17590,"line_start":366,"line_end":366,"column_start":32,"column_end":43},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":17843,"byte_end":17852,"line_start":375,"line_end":375,"column_start":34,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":352},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ip_network.rs","byte_start":18105,"byte_end":18116,"line_start":384,"line_end":384,"column_start":32,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":26340,"byte_end":26351,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":51995,"byte_end":52006,"line_start":731,"line_end":731,"column_start":23,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":52530,"byte_end":52541,"line_start":748,"line_end":748,"column_start":18,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":11983}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":53618,"byte_end":53629,"line_start":778,"line_end":778,"column_start":25,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":53865,"byte_end":53876,"line_start":789,"line_end":789,"column_start":20,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":54051,"byte_end":54062,"line_start":796,"line_end":796,"column_start":15,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":9620}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv4_network.rs","byte_start":54219,"byte_end":54230,"line_start":803,"line_end":803,"column_start":23,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":378},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":72112,"byte_end":72123,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":93042,"byte_end":93053,"line_start":588,"line_end":588,"column_start":23,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":93625,"byte_end":93636,"line_start":606,"line_end":606,"column_start":18,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":11983}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":94728,"byte_end":94739,"line_start":636,"line_end":636,"column_start":25,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":94976,"byte_end":94987,"line_start":647,"line_end":647,"column_start":20,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/ipv6_network.rs","byte_start":95162,"byte_end":95173,"line_start":654,"line_end":654,"column_start":15,"column_end":26},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":9620}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":103506,"byte_end":103523,"line_start":21,"line_end":21,"column_start":6,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":105173,"byte_end":105190,"line_start":71,"line_end":71,"column_start":19,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":105867,"byte_end":105884,"line_start":99,"line_end":99,"column_start":28,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":287},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":106064,"byte_end":106083,"line_start":109,"line_end":109,"column_start":6,"column_end":25},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":107296,"byte_end":107315,"line_start":149,"line_end":149,"column_start":19,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108123,"byte_end":108142,"line_start":180,"line_end":180,"column_start":28,"column_end":47},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":299},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":108324,"byte_end":108343,"line_start":190,"line_end":190,"column_start":6,"column_end":25},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":109738,"byte_end":109757,"line_start":238,"line_end":238,"column_start":19,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/iterator.rs","byte_start":110657,"byte_end":110676,"line_start":271,"line_end":271,"column_start":28,"column_end":47},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":312},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2003,"byte_end":2017,"line_start":63,"line_end":63,"column_start":16,"column_end":30},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2044,"byte_end":2058,"line_start":65,"line_end":65,"column_start":23,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":2819,"byte_end":2838,"line_start":88,"line_end":88,"column_start":16,"column_end":35},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":449},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/ip_network-0.4.0/src/lib.rs","byte_start":3081,"byte_end":3100,"line_start":97,"line_end":97,"column_start":23,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":449},"to":{"krate":2,"index":9420}}]}