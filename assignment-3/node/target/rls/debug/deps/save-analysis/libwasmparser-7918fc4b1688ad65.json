{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0","program":"/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","wasmparser","--edition=2018","/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=7918fc4b1688ad65","-C","extra-filename=-7918fc4b1688ad65","--out-dir","/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps","-L","dependency=/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps/libwasmparser-7918fc4b1688ad65.rmeta"},"prelude":{"crate_id":{"name":"wasmparser","disambiguator":[3886485175197413363,0]},"crate_root":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src","external_crates":[{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[731825893227783439,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17620493357780722015,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17104879904101875706,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16830480400437399750,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7171606794823467103,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1962125835969742563,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9581088599378972321,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[813795769934850431,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17725418628365393926,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5893038469516244934,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17002347431842942188,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3247696082052491306,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1250632192672038569,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6011250054333313481,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[13264462261958304631,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[11374198430379246765,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[9483954524752636596,0]}}],"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":600,"byte_end":1465,"line_start":16,"line_end":42,"column_start":1,"column_end":15}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2279},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":1131,"byte_end":1143,"line_start":26,"line_end":26,"column_start":31,"column_end":43},"alias_span":null,"name":"BinaryReader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2257},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":1175,"byte_end":1180,"line_start":27,"line_end":27,"column_start":31,"column_end":36},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":1216,"byte_end":1217,"line_start":29,"line_end":29,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"WasmFuncType, WasmModuleResources","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":1242,"byte_end":1243,"line_start":30,"line_end":30,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"Payload, Parser","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":1272,"byte_end":1273,"line_start":31,"line_end":31,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"SectionCode, Operator, ExternalKind, BinaryReaderError, TagType, ExportType, Type, NameType, LinkingType, Result, GlobalType, ModuleType, ImportSectionEntryType, TableType, RelocType, MemoryType, Naming, FuncType, TypeDef, InstanceType","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":1299,"byte_end":1300,"line_start":32,"line_end":32,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"InstanceSectionReader, DataKind, SectionIteratorLimited, ElementKind, GlobalSectionReader, FunctionSectionReader, InitExpr, AliasSectionReader, DataSectionReader, Instance, SectionWithLimitedItems, ElementItem, TableSectionReader, TypeSectionReader, ExportSectionReader, FunctionBody, TagSectionReader, SectionReader, Alias, MemorySectionReader, ImportSectionReader, ElementSectionReader, Import","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":1328,"byte_end":1329,"line_start":33,"line_end":33,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"WasmFeatures","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":600,"byte_end":1465,"line_start":16,"line_end":42,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":202},{"krate":0,"index":226},{"krate":0,"index":346},{"krate":0,"index":492},{"krate":0,"index":666},{"krate":0,"index":698},{"krate":0,"index":1905}],"decl_id":null,"docs":" A simple event-driven library for parsing WebAssembly binary files\n (or streams).","sig":null,"attributes":[{"value":"/ A simple event-driven library for parsing WebAssembly binary files","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":600,"byte_end":670,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ (or streams).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":671,"byte_end":688,"line_start":17,"line_end":17,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":689,"byte_end":692,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The parser library reports events as they happend and only stores","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":693,"byte_end":762,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ parsing information for a brief period of time, making it very fast","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":763,"byte_end":834,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ and memory-efficient. The event-driven model, however, has some drawbacks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":835,"byte_end":913,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ If you need random access to the entire WebAssembly data-structure,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":914,"byte_end":985,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ this is not the right library for you. You could however, build such","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":986,"byte_end":1058,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ a data-structure using this library.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/lib.rs","byte_start":1059,"byte_end":1099,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":2975,"byte_end":2980,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"Range","qualname":"::binary_reader::Range","value":"Range { start, end }","parent":null,"children":[{"krate":0,"index":2258},{"krate":0,"index":2259}],"decl_id":null,"docs":" Bytecode range in the WebAssembly module.\n","sig":null,"attributes":[{"value":"/ Bytecode range in the WebAssembly module.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":2850,"byte_end":2895,"line_start":43,"line_end":43,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3029,"byte_end":3034,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"start","qualname":"::binary_reader::Range::start","value":"usize","parent":{"krate":0,"index":2257},"children":[],"decl_id":null,"docs":" The start bound of the range.\n","sig":null,"attributes":[{"value":"/ The start bound of the range.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":2987,"byte_end":3020,"line_start":46,"line_end":46,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3087,"byte_end":3090,"line_start":49,"line_end":49,"column_start":9,"column_end":12},"name":"end","qualname":"::binary_reader::Range::end","value":"usize","parent":{"krate":0,"index":2257},"children":[],"decl_id":null,"docs":" The end bound of the range.\n","sig":null,"attributes":[{"value":"/ The end bound of the range.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3047,"byte_end":3078,"line_start":48,"line_end":48,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3239,"byte_end":3242,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Range>::new","value":"pub fn new(usize, usize) -> Range","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new instance of `Range`.","sig":null,"attributes":[{"value":"/ Constructs a new instance of `Range`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3119,"byte_end":3160,"line_start":53,"line_end":53,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3165,"byte_end":3168,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3173,"byte_end":3185,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/ If `start` is greater than `end`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3190,"byte_end":3227,"line_start":56,"line_end":56,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3429,"byte_end":3434,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"slice","qualname":"<Range>::slice","value":"pub fn slice<'a>(&Self, &'a [u8]) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a new slice between `start` and `end - 1` from `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new slice between `start` and `end - 1` from `data`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3351,"byte_end":3417,"line_start":62,"line_end":62,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3623,"byte_end":3635,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"BinaryReader","qualname":"::binary_reader::BinaryReader","value":"BinaryReader {  }","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":2284}],"decl_id":null,"docs":" A binary reader of the WebAssembly structures and types.\n","sig":null,"attributes":[{"value":"/ A binary reader of the WebAssembly structures and types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3521,"byte_end":3581,"line_start":68,"line_end":68,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4147,"byte_end":4150,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<BinaryReader>::new","value":"pub fn new(&[u8]) -> BinaryReader","parent":null,"children":[],"decl_id":null,"docs":" Constructs `BinaryReader` type.","sig":null,"attributes":[{"value":"/ Constructs `BinaryReader` type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3807,"byte_end":3842,"line_start":78,"line_end":78,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3847,"byte_end":3850,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3855,"byte_end":3869,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3874,"byte_end":3881,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ let fn_body = &vec![0x41, 0x00, 0x10, 0x00, 0x0B];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3886,"byte_end":3940,"line_start":82,"line_end":82,"column_start":5,"column_end":59}},{"value":"/ let mut reader = wasmparser::BinaryReader::new(fn_body);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3945,"byte_end":4005,"line_start":83,"line_end":83,"column_start":5,"column_end":65}},{"value":"/ while !reader.eof() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4010,"byte_end":4035,"line_start":84,"line_end":84,"column_start":5,"column_end":30}},{"value":"/     let op = reader.read_operator();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4040,"byte_end":4080,"line_start":85,"line_end":85,"column_start":5,"column_end":45}},{"value":"/     println!(\"{:?}\", op)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4085,"byte_end":4113,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4118,"byte_end":4123,"line_start":87,"line_end":87,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4128,"byte_end":4135,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4421,"byte_end":4436,"line_start":99,"line_end":99,"column_start":12,"column_end":27},"name":"new_with_offset","qualname":"<BinaryReader>::new_with_offset","value":"pub fn new_with_offset(&[u8], usize) -> BinaryReader","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BinaryReader` with an explicit starting offset.\n","sig":null,"attributes":[{"value":"/ Constructs a `BinaryReader` with an explicit starting offset.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4344,"byte_end":4409,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4658,"byte_end":4675,"line_start":108,"line_end":108,"column_start":12,"column_end":29},"name":"original_position","qualname":"<BinaryReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4757,"byte_end":4771,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"allow_memarg64","qualname":"<BinaryReader>::allow_memarg64","value":"pub fn allow_memarg64(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4928,"byte_end":4933,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"name":"range","qualname":"<BinaryReader>::range","value":"pub fn range(&Self) -> Range","parent":null,"children":[],"decl_id":null,"docs":" Returns a range from the starting offset to the end of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a range from the starting offset to the end of the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":4846,"byte_end":4916,"line_start":116,"line_end":116,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":6606,"byte_end":6615,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"read_type","qualname":"<BinaryReader>::read_type","value":"pub fn read_type(&mut Self) -> Result<Type>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":17970,"byte_end":17973,"line_start":490,"line_end":490,"column_start":12,"column_end":15},"name":"eof","qualname":"<BinaryReader>::eof","value":"pub fn eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the `BinaryReader` has reached the end of the file.\n","sig":null,"attributes":[{"value":"/ Returns whether the `BinaryReader` has reached the end of the file.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":17887,"byte_end":17958,"line_start":489,"line_end":489,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18107,"byte_end":18123,"line_start":495,"line_end":495,"column_start":12,"column_end":28},"name":"current_position","qualname":"<BinaryReader>::current_position","value":"pub fn current_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `BinaryReader`'s current position.\n","sig":null,"attributes":[{"value":"/ Returns the `BinaryReader`'s current position.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18045,"byte_end":18095,"line_start":494,"line_end":494,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18251,"byte_end":18266,"line_start":500,"line_end":500,"column_start":12,"column_end":27},"name":"bytes_remaining","qualname":"<BinaryReader>::bytes_remaining","value":"pub fn bytes_remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes remaining in the `BinaryReader`.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes remaining in the `BinaryReader`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18175,"byte_end":18239,"line_start":499,"line_end":499,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18558,"byte_end":18568,"line_start":509,"line_end":509,"column_start":12,"column_end":22},"name":"read_bytes","qualname":"<BinaryReader>::read_bytes","value":"pub fn read_bytes(&mut Self, usize) -> Result<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` `size` bytes, and returns a slice from the\n current position of `size` length.","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` `size` bytes, and returns a slice from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18338,"byte_end":18412,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ current position of `size` length.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18417,"byte_end":18455,"line_start":505,"line_end":505,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18460,"byte_end":18463,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18468,"byte_end":18480,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/ If `size` exceeds the remaining length in `BinaryReader`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18485,"byte_end":18546,"line_start":508,"line_end":508,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18931,"byte_end":18939,"line_start":519,"line_end":519,"column_start":12,"column_end":20},"name":"read_u32","qualname":"<BinaryReader>::read_u32","value":"pub fn read_u32(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` four bytes and returns a `u32`.\n # Errors\n If `BinaryReader` has less than four bytes remaining.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` four bytes and returns a `u32`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18777,"byte_end":18840,"line_start":516,"line_end":516,"column_start":5,"column_end":68}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18845,"byte_end":18857,"line_start":517,"line_end":517,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than four bytes remaining.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":18862,"byte_end":18919,"line_start":518,"line_end":518,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19378,"byte_end":19386,"line_start":533,"line_end":533,"column_start":12,"column_end":20},"name":"read_u64","qualname":"<BinaryReader>::read_u64","value":"pub fn read_u64(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` eight bytes and returns a `u64`.\n # Errors\n If `BinaryReader` has less than eight bytes remaining.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` eight bytes and returns a `u64`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19222,"byte_end":19286,"line_start":530,"line_end":530,"column_start":5,"column_end":69}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19291,"byte_end":19303,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than eight bytes remaining.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19308,"byte_end":19366,"line_start":532,"line_end":532,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19851,"byte_end":19858,"line_start":550,"line_end":550,"column_start":12,"column_end":19},"name":"read_u8","qualname":"<BinaryReader>::read_u8","value":"pub fn read_u8(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` a single byte, and returns the data as\n a `u32`.","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` a single byte, and returns the data as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19669,"byte_end":19739,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ a `u32`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19744,"byte_end":19756,"line_start":545,"line_end":545,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19761,"byte_end":19764,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19769,"byte_end":19781,"line_start":547,"line_end":547,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19786,"byte_end":19789,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ If `BinaryReader` has no bytes remaining.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":19794,"byte_end":19839,"line_start":549,"line_end":549,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20292,"byte_end":20303,"line_start":564,"line_end":564,"column_start":12,"column_end":23},"name":"read_var_u8","qualname":"<BinaryReader>::read_var_u8","value":"pub fn read_var_u8(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to two bytes to parse a variable\n length integer as a `u8`.","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to two bytes to parse a variable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20028,"byte_end":20095,"line_start":557,"line_end":557,"column_start":5,"column_end":72}},{"value":"/ length integer as a `u8`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20100,"byte_end":20129,"line_start":558,"line_end":558,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20134,"byte_end":20137,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20142,"byte_end":20154,"line_start":560,"line_end":560,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20159,"byte_end":20162,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ If `BinaryReader` has less than one or two bytes remaining, or the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20167,"byte_end":20237,"line_start":562,"line_end":562,"column_start":5,"column_end":75}},{"value":"/ integer is larger than eight bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20242,"byte_end":20280,"line_start":563,"line_end":563,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":21028,"byte_end":21040,"line_start":588,"line_end":588,"column_start":12,"column_end":24},"name":"read_var_u32","qualname":"<BinaryReader>::read_var_u32","value":"pub fn read_var_u32(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a `u32`.","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20758,"byte_end":20826,"line_start":581,"line_end":581,"column_start":5,"column_end":73}},{"value":"/ length integer as a `u32`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20831,"byte_end":20861,"line_start":582,"line_end":582,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20866,"byte_end":20869,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20874,"byte_end":20886,"line_start":584,"line_end":584,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20891,"byte_end":20894,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20899,"byte_end":20972,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":20977,"byte_end":21016,"line_start":587,"line_end":587,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":22103,"byte_end":22115,"line_start":622,"line_end":622,"column_start":12,"column_end":24},"name":"read_var_u64","qualname":"<BinaryReader>::read_var_u64","value":"pub fn read_var_u64(&mut Self) -> Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a `u64`.","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":21832,"byte_end":21900,"line_start":615,"line_end":615,"column_start":5,"column_end":73}},{"value":"/ length integer as a `u64`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":21905,"byte_end":21935,"line_start":616,"line_end":616,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":21940,"byte_end":21943,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":21948,"byte_end":21960,"line_start":618,"line_end":618,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":21965,"byte_end":21968,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ If `BinaryReader` has less than one or up to eight bytes remaining, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":21973,"byte_end":22047,"line_start":620,"line_end":620,"column_start":5,"column_end":79}},{"value":"/ the integer is larger than 64 bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":22052,"byte_end":22091,"line_start":621,"line_end":621,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23189,"byte_end":23200,"line_start":654,"line_end":654,"column_start":12,"column_end":23},"name":"skip_var_32","qualname":"<BinaryReader>::skip_var_32","value":"pub fn skip_var_32(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes over a variable length 32\n bit integer, discarding the result.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes over a variable length 32","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":22920,"byte_end":22994,"line_start":649,"line_end":649,"column_start":5,"column_end":79}},{"value":"/ bit integer, discarding the result.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":22999,"byte_end":23038,"line_start":650,"line_end":650,"column_start":5,"column_end":44}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23043,"byte_end":23055,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23060,"byte_end":23133,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23138,"byte_end":23177,"line_start":653,"line_end":653,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23575,"byte_end":23584,"line_start":668,"line_end":668,"column_start":12,"column_end":21},"name":"skip_type","qualname":"<BinaryReader>::skip_type","value":"pub fn skip_type(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Alias method for `BinaryReader::skip_var_u32`.\n","sig":null,"attributes":[{"value":"/ Alias method for `BinaryReader::skip_var_u32`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23513,"byte_end":23563,"line_start":667,"line_end":667,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23807,"byte_end":23817,"line_start":675,"line_end":675,"column_start":12,"column_end":22},"name":"skip_bytes","qualname":"<BinaryReader>::skip_bytes","value":"pub fn skip_bytes(&mut Self, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` `len` bytes, skipping the result.\n # Errors\n If `BinaryReader` has less than `len` bytes remaining.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` `len` bytes, skipping the result.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23650,"byte_end":23715,"line_start":672,"line_end":672,"column_start":5,"column_end":70}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23720,"byte_end":23732,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than `len` bytes remaining.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23737,"byte_end":23795,"line_start":674,"line_end":674,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24274,"byte_end":24285,"line_start":687,"line_end":687,"column_start":12,"column_end":23},"name":"skip_string","qualname":"<BinaryReader>::skip_string","value":"pub fn skip_string(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` past a WebAssembly string. This method does\n not perform any utf-8 validation.\n # Errors\n If `BinaryReader` has less than four bytes, the string's length exceeds\n the remaining bytes, or the string length\n exceeds `limits::MAX_WASM_STRING_SIZE`.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` past a WebAssembly string. This method does","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":23950,"byte_end":24025,"line_start":681,"line_end":681,"column_start":5,"column_end":80}},{"value":"/ not perform any utf-8 validation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24030,"byte_end":24067,"line_start":682,"line_end":682,"column_start":5,"column_end":42}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24072,"byte_end":24084,"line_start":683,"line_end":683,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than four bytes, the string's length exceeds","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24089,"byte_end":24164,"line_start":684,"line_end":684,"column_start":5,"column_end":80}},{"value":"/ the remaining bytes, or the string length","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24169,"byte_end":24214,"line_start":685,"line_end":685,"column_start":5,"column_end":50}},{"value":"/ exceeds `limits::MAX_WASM_STRING_SIZE`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24219,"byte_end":24262,"line_start":686,"line_end":686,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":25126,"byte_end":25138,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"read_var_i32","qualname":"<BinaryReader>::read_var_i32","value":"pub fn read_var_i32(&mut Self) -> Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a `i32`.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24872,"byte_end":24940,"line_start":706,"line_end":706,"column_start":5,"column_end":73}},{"value":"/ length integer as a `i32`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24945,"byte_end":24975,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24980,"byte_end":24992,"line_start":708,"line_end":708,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":24997,"byte_end":25070,"line_start":709,"line_end":709,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":25075,"byte_end":25114,"line_start":710,"line_end":710,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":26515,"byte_end":26527,"line_start":748,"line_end":748,"column_start":12,"column_end":24},"name":"read_var_s33","qualname":"<BinaryReader>::read_var_s33","value":"pub fn read_var_s33(&mut Self) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a signed 33 bit integer, returned as a `i64`.\n # Errors\n If `BinaryReader` has less than one or up to five bytes remaining, or\n the integer is larger than 33 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":26224,"byte_end":26292,"line_start":743,"line_end":743,"column_start":5,"column_end":73}},{"value":"/ length integer as a signed 33 bit integer, returned as a `i64`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":26297,"byte_end":26364,"line_start":744,"line_end":744,"column_start":5,"column_end":72}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":26369,"byte_end":26381,"line_start":745,"line_end":745,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to five bytes remaining, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":26386,"byte_end":26459,"line_start":746,"line_end":746,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 33 bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":26464,"byte_end":26503,"line_start":747,"line_end":747,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":27899,"byte_end":27911,"line_start":785,"line_end":785,"column_start":12,"column_end":24},"name":"read_var_i64","qualname":"<BinaryReader>::read_var_i64","value":"pub fn read_var_i64(&mut Self) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to eight bytes to parse a variable\n length integer as a 64 bit integer, returned as a `i64`.\n # Errors\n If `BinaryReader` has less than one or up to eight bytes remaining, or\n the integer is larger than 64 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to eight bytes to parse a variable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":27613,"byte_end":27682,"line_start":780,"line_end":780,"column_start":5,"column_end":74}},{"value":"/ length integer as a 64 bit integer, returned as a `i64`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":27687,"byte_end":27747,"line_start":781,"line_end":781,"column_start":5,"column_end":65}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":27752,"byte_end":27764,"line_start":782,"line_end":782,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to eight bytes remaining, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":27769,"byte_end":27843,"line_start":783,"line_end":783,"column_start":5,"column_end":79}},{"value":"/ the integer is larger than 64 bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":27848,"byte_end":27887,"line_start":784,"line_end":784,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29109,"byte_end":29117,"line_start":816,"line_end":816,"column_start":12,"column_end":20},"name":"read_f32","qualname":"<BinaryReader>::read_f32","value":"pub fn read_f32(&mut Self) -> Result<Ieee32>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a 32 bit floating point integer, returned as `Ieee32`.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":28809,"byte_end":28877,"line_start":811,"line_end":811,"column_start":5,"column_end":73}},{"value":"/ length integer as a 32 bit floating point integer, returned as `Ieee32`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":28882,"byte_end":28958,"line_start":812,"line_end":812,"column_start":5,"column_end":81}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":28963,"byte_end":28975,"line_start":813,"line_end":813,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":28980,"byte_end":29053,"line_start":814,"line_end":814,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29058,"byte_end":29097,"line_start":815,"line_end":815,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29524,"byte_end":29532,"line_start":826,"line_end":826,"column_start":12,"column_end":20},"name":"read_f64","qualname":"<BinaryReader>::read_f64","value":"pub fn read_f64(&mut Self) -> Result<Ieee64>","parent":null,"children":[],"decl_id":null,"docs":" Advances the `BinaryReader` up to four bytes to parse a variable\n length integer as a 32 bit floating point integer, returned as `Ieee32`.\n # Errors\n If `BinaryReader` has less than one or up to four bytes remaining, or\n the integer is larger than 32 bits.\n","sig":null,"attributes":[{"value":"/ Advances the `BinaryReader` up to four bytes to parse a variable","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29224,"byte_end":29292,"line_start":821,"line_end":821,"column_start":5,"column_end":73}},{"value":"/ length integer as a 32 bit floating point integer, returned as `Ieee32`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29297,"byte_end":29373,"line_start":822,"line_end":822,"column_start":5,"column_end":81}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29378,"byte_end":29390,"line_start":823,"line_end":823,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than one or up to four bytes remaining, or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29395,"byte_end":29468,"line_start":824,"line_end":824,"column_start":5,"column_end":78}},{"value":"/ the integer is larger than 32 bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29473,"byte_end":29512,"line_start":825,"line_end":825,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29946,"byte_end":29957,"line_start":836,"line_end":836,"column_start":12,"column_end":23},"name":"read_string","qualname":"<BinaryReader>::read_string","value":"pub fn read_string(&mut Self) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Reads a WebAssembly string from the module.\n # Errors\n If `BinaryReader` has less than up to four bytes remaining, the string's\n length exceeds the remaining bytes, the string's length exceeds\n `limits::MAX_WASM_STRING_SIZE`, or the string contains invalid utf-8.\n","sig":null,"attributes":[{"value":"/ Reads a WebAssembly string from the module.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29639,"byte_end":29686,"line_start":831,"line_end":831,"column_start":5,"column_end":52}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29691,"byte_end":29703,"line_start":832,"line_end":832,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less than up to four bytes remaining, the string's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29708,"byte_end":29784,"line_start":833,"line_end":833,"column_start":5,"column_end":81}},{"value":"/ length exceeds the remaining bytes, the string's length exceeds","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29789,"byte_end":29856,"line_start":834,"line_end":834,"column_start":5,"column_end":72}},{"value":"/ `limits::MAX_WASM_STRING_SIZE`, or the string contains invalid utf-8.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":29861,"byte_end":29934,"line_start":835,"line_end":835,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":39902,"byte_end":39915,"line_start":1094,"line_end":1094,"column_start":12,"column_end":25},"name":"read_operator","qualname":"<BinaryReader>::read_operator","value":"pub fn read_operator(&mut Self) -> Result<Operator>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next available `Operator`.\n # Errors\n If `BinaryReader` has less bytes remaining than required to parse\n the `Operator`.\n","sig":null,"attributes":[{"value":"/ Reads the next available `Operator`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":39735,"byte_end":39775,"line_start":1090,"line_end":1090,"column_start":5,"column_end":45}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":39780,"byte_end":39792,"line_start":1091,"line_end":1091,"column_start":5,"column_end":17}},{"value":"/ If `BinaryReader` has less bytes remaining than required to parse","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":39797,"byte_end":39866,"line_start":1092,"line_end":1092,"column_start":5,"column_end":74}},{"value":"/ the `Operator`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":39871,"byte_end":39890,"line_start":1093,"line_end":1093,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71501,"byte_end":71504,"line_start":1936,"line_end":1936,"column_start":12,"column_end":15},"name":"len","qualname":"<BrTable>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of `br_table` entries, not including the default\n label\n","sig":null,"attributes":[{"value":"/ Returns the number of `br_table` entries, not including the default","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71404,"byte_end":71475,"line_start":1934,"line_end":1934,"column_start":5,"column_end":76}},{"value":"/ label","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71480,"byte_end":71489,"line_start":1935,"line_end":1935,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71642,"byte_end":71650,"line_start":1941,"line_end":1941,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BrTable>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `BrTable` doesn't have any labels apart from the default one.\n","sig":null,"attributes":[{"value":"/ Returns whether `BrTable` doesn't have any labels apart from the default one.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71549,"byte_end":71630,"line_start":1940,"line_end":1940,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71777,"byte_end":71784,"line_start":1946,"line_end":1946,"column_start":12,"column_end":19},"name":"default","qualname":"<BrTable>::default","value":"pub fn default(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the default target of this `br_table` instruction.\n","sig":null,"attributes":[{"value":"/ Returns the default target of this `br_table` instruction.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71703,"byte_end":71765,"line_start":1945,"line_end":1945,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72553,"byte_end":72560,"line_start":1968,"line_end":1968,"column_start":12,"column_end":19},"name":"targets","qualname":"<BrTable>::targets","value":"pub fn targets<'b>(&'b Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of targets that this `br_table` instruction will be\n jumping to.","sig":null,"attributes":[{"value":"/ Returns the list of targets that this `br_table` instruction will be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71833,"byte_end":71905,"line_start":1950,"line_end":1950,"column_start":5,"column_end":77}},{"value":"/ jumping to.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71910,"byte_end":71925,"line_start":1951,"line_end":1951,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71930,"byte_end":71933,"line_start":1952,"line_end":1952,"column_start":5,"column_end":8}},{"value":"/ This method will return an iterator which parses each target of this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71938,"byte_end":72010,"line_start":1953,"line_end":1953,"column_start":5,"column_end":77}},{"value":"/ `br_table` except the default target. The returned iterator will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72015,"byte_end":72083,"line_start":1954,"line_end":1954,"column_start":5,"column_end":73}},{"value":"/ yield `self.len()` elements.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72088,"byte_end":72120,"line_start":1955,"line_end":1955,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72125,"byte_end":72128,"line_start":1956,"line_end":1956,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72133,"byte_end":72147,"line_start":1957,"line_end":1957,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72152,"byte_end":72155,"line_start":1958,"line_end":1958,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72160,"byte_end":72171,"line_start":1959,"line_end":1959,"column_start":5,"column_end":16}},{"value":"/ let buf = [0x0e, 0x02, 0x01, 0x02, 0x00];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72176,"byte_end":72221,"line_start":1960,"line_end":1960,"column_start":5,"column_end":50}},{"value":"/ let mut reader = wasmparser::BinaryReader::new(&buf);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72226,"byte_end":72283,"line_start":1961,"line_end":1961,"column_start":5,"column_end":62}},{"value":"/ let op = reader.read_operator().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72288,"byte_end":72333,"line_start":1962,"line_end":1962,"column_start":5,"column_end":50}},{"value":"/ if let wasmparser::Operator::BrTable { table } = op {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72338,"byte_end":72395,"line_start":1963,"line_end":1963,"column_start":5,"column_end":62}},{"value":"/     let targets = table.targets().collect::<Result<Vec<_>, _>>().unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72400,"byte_end":72478,"line_start":1964,"line_end":1964,"column_start":5,"column_end":83}},{"value":"/     assert_eq!(targets, [1, 2]);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72483,"byte_end":72519,"line_start":1965,"line_end":1965,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72524,"byte_end":72529,"line_start":1966,"line_end":1966,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":72534,"byte_end":72541,"line_start":1967,"line_end":1967,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":246},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76159,"byte_end":76171,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"WasmFuncType","qualname":"::module_resources::WasmFuncType","value":"WasmFuncType","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" Types that qualify as Wasm function types for validation purposes.\n","sig":null,"attributes":[{"value":"/ Types that qualify as Wasm function types for validation purposes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76078,"byte_end":76148,"line_start":19,"line_end":19,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76224,"byte_end":76234,"line_start":22,"line_end":22,"column_start":8,"column_end":18},"name":"len_inputs","qualname":"::module_resources::WasmFuncType::len_inputs","value":"pub fn len_inputs(&Self) -> usize","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Returns the number of input types.\n","sig":null,"attributes":[{"value":"/ Returns the number of input types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76178,"byte_end":76216,"line_start":21,"line_end":21,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76303,"byte_end":76314,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"len_outputs","qualname":"::module_resources::WasmFuncType::len_outputs","value":"pub fn len_outputs(&Self) -> usize","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Returns the number of output types.\n","sig":null,"attributes":[{"value":"/ Returns the number of output types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76256,"byte_end":76295,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76563,"byte_end":76571,"line_start":31,"line_end":31,"column_start":8,"column_end":16},"name":"input_at","qualname":"::module_resources::WasmFuncType::input_at","value":"pub fn input_at(&Self, u32) -> Option<Type>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Returns the type at given index if any.","sig":null,"attributes":[{"value":"/ Returns the type at given index if any.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76336,"byte_end":76379,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76384,"byte_end":76387,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76392,"byte_end":76402,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76407,"byte_end":76410,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The returned type may be wrapped by the user crate and thus","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76415,"byte_end":76478,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/ the actually returned type only has to be comparable to a Wasm type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76483,"byte_end":76555,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76836,"byte_end":76845,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"output_at","qualname":"::module_resources::WasmFuncType::output_at","value":"pub fn output_at(&Self, u32) -> Option<Type>","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Returns the type at given index if any.","sig":null,"attributes":[{"value":"/ Returns the type at given index if any.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76609,"byte_end":76652,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76657,"byte_end":76660,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76665,"byte_end":76675,"line_start":34,"line_end":34,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76680,"byte_end":76683,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The returned type may be wrapped by the user crate and thus","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76688,"byte_end":76751,"line_start":36,"line_end":36,"column_start":5,"column_end":68}},{"value":"/ the actually returned type only has to be comparable to a Wasm type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76756,"byte_end":76828,"line_start":37,"line_end":37,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76938,"byte_end":76944,"line_start":41,"line_end":41,"column_start":8,"column_end":14},"name":"inputs","qualname":"::module_resources::WasmFuncType::inputs","value":"pub fn inputs(&Self) -> WasmFuncTypeInputs<, Self> where Self: Sized","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Returns the list of inputs as an iterator.\n","sig":null,"attributes":[{"value":"/ Returns the list of inputs as an iterator.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":76884,"byte_end":76930,"line_start":40,"line_end":40,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":77203,"byte_end":77210,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"outputs","qualname":"::module_resources::WasmFuncType::outputs","value":"pub fn outputs(&Self) -> WasmFuncTypeOutputs<, Self> where Self: Sized","parent":{"krate":0,"index":246},"children":[],"decl_id":null,"docs":" Returns the list of outputs as an iterator.\n","sig":null,"attributes":[{"value":"/ Returns the list of outputs as an iterator.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":77148,"byte_end":77195,"line_start":51,"line_end":51,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":259},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":77868,"byte_end":77886,"line_start":82,"line_end":82,"column_start":12,"column_end":30},"name":"WasmFuncTypeInputs","qualname":"::module_resources::WasmFuncTypeInputs","value":"WasmFuncTypeInputs {  }","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263}],"decl_id":null,"docs":" Iterator over the inputs of a Wasm function type.\n","sig":null,"attributes":[{"value":"/ Iterator over the inputs of a Wasm function type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":77803,"byte_end":77856,"line_start":81,"line_end":81,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79065,"byte_end":79084,"line_start":136,"line_end":136,"column_start":12,"column_end":31},"name":"WasmFuncTypeOutputs","qualname":"::module_resources::WasmFuncTypeOutputs","value":"WasmFuncTypeOutputs {  }","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"decl_id":null,"docs":" Iterator over the outputs of a Wasm function type.\n","sig":null,"attributes":[{"value":"/ Iterator over the outputs of a Wasm function type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78999,"byte_end":79053,"line_start":135,"line_end":135,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":303},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80589,"byte_end":80608,"line_start":197,"line_end":197,"column_start":11,"column_end":30},"name":"WasmModuleResources","qualname":"::module_resources::WasmModuleResources","value":"WasmModuleResources","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":" Types  that qualify as Wasm valiation database.","sig":null,"attributes":[{"value":"/ Types  that qualify as Wasm valiation database.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80205,"byte_end":80256,"line_start":189,"line_end":189,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80257,"byte_end":80260,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80261,"byte_end":80271,"line_start":191,"line_end":191,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80272,"byte_end":80275,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ The `wasmparser` crate provides a builtin validation framework but allows","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80276,"byte_end":80353,"line_start":193,"line_end":193,"column_start":1,"column_end":78}},{"value":"/ users of this crate to also feed the parsed Wasm into their own data","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80354,"byte_end":80426,"line_start":194,"line_end":194,"column_start":1,"column_end":73}},{"value":"/ structure while parsing and also validate at the same time without","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80427,"byte_end":80497,"line_start":195,"line_end":195,"column_start":1,"column_end":71}},{"value":"/ the need of an additional parsing or validation step or copying data around.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80498,"byte_end":80578,"line_start":196,"line_end":196,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":304},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80667,"byte_end":80675,"line_start":199,"line_end":199,"column_start":10,"column_end":18},"name":"FuncType","qualname":"::module_resources::WasmModuleResources::FuncType","value":"type FuncType: WasmFuncType;","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" The function type used for validation.\n","sig":null,"attributes":[{"value":"/ The function type used for validation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80615,"byte_end":80657,"line_start":198,"line_end":198,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80748,"byte_end":80756,"line_start":202,"line_end":202,"column_start":8,"column_end":16},"name":"table_at","qualname":"::module_resources::WasmModuleResources::table_at","value":"pub fn table_at(&Self, u32) -> Option<TableType>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the table at given index if any.\n","sig":null,"attributes":[{"value":"/ Returns the table at given index if any.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80696,"byte_end":80740,"line_start":201,"line_end":201,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80852,"byte_end":80861,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"memory_at","qualname":"::module_resources::WasmModuleResources::memory_at","value":"pub fn memory_at(&Self, u32) -> Option<MemoryType>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the linear memory at given index.\n","sig":null,"attributes":[{"value":"/ Returns the linear memory at given index.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80799,"byte_end":80844,"line_start":203,"line_end":203,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80948,"byte_end":80954,"line_start":206,"line_end":206,"column_start":8,"column_end":14},"name":"tag_at","qualname":"::module_resources::WasmModuleResources::tag_at","value":"pub fn tag_at(&Self, u32) -> Option<&Self::FuncType>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the tag at given index.\n","sig":null,"attributes":[{"value":"/ Returns the tag at given index.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":80905,"byte_end":80940,"line_start":205,"line_end":205,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81058,"byte_end":81067,"line_start":208,"line_end":208,"column_start":8,"column_end":17},"name":"global_at","qualname":"::module_resources::WasmModuleResources::global_at","value":"pub fn global_at(&Self, u32) -> Option<GlobalType>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the global variable at given index.\n","sig":null,"attributes":[{"value":"/ Returns the global variable at given index.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81003,"byte_end":81050,"line_start":207,"line_end":207,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81183,"byte_end":81195,"line_start":210,"line_end":210,"column_start":8,"column_end":20},"name":"func_type_at","qualname":"::module_resources::WasmModuleResources::func_type_at","value":"pub fn func_type_at(&Self, u32) -> Option<&Self::FuncType>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the `FuncType` associated with the given type index.\n","sig":null,"attributes":[{"value":"/ Returns the `FuncType` associated with the given type index.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81111,"byte_end":81175,"line_start":209,"line_end":209,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81326,"byte_end":81342,"line_start":212,"line_end":212,"column_start":8,"column_end":24},"name":"type_of_function","qualname":"::module_resources::WasmModuleResources::type_of_function","value":"pub fn type_of_function(&Self, u32) -> Option<&Self::FuncType>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the `FuncType` associated with the given function index.\n","sig":null,"attributes":[{"value":"/ Returns the `FuncType` associated with the given function index.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81250,"byte_end":81318,"line_start":211,"line_end":211,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81453,"byte_end":81468,"line_start":214,"line_end":214,"column_start":8,"column_end":23},"name":"element_type_at","qualname":"::module_resources::WasmModuleResources::element_type_at","value":"pub fn element_type_at(&Self, u32) -> Option<Type>","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the element type at the given index.\n","sig":null,"attributes":[{"value":"/ Returns the element type at the given index.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81397,"byte_end":81445,"line_start":213,"line_end":213,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81550,"byte_end":81563,"line_start":217,"line_end":217,"column_start":8,"column_end":21},"name":"element_count","qualname":"::module_resources::WasmModuleResources::element_count","value":"pub fn element_count(&Self) -> u32","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the number of elements.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81507,"byte_end":81542,"line_start":216,"line_end":216,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81648,"byte_end":81658,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"data_count","qualname":"::module_resources::WasmModuleResources::data_count","value":"pub fn data_count(&Self) -> u32","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the number of bytes in the Wasm data section.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes in the Wasm data section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81583,"byte_end":81640,"line_start":218,"line_end":218,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81809,"byte_end":81831,"line_start":222,"line_end":222,"column_start":8,"column_end":30},"name":"is_function_referenced","qualname":"::module_resources::WasmModuleResources::is_function_referenced","value":"pub fn is_function_referenced(&Self, u32) -> bool","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns whether the function index is referenced in the module anywhere\n outside of the start/function sections.\n","sig":null,"attributes":[{"value":"/ Returns whether the function index is referenced in the module anywhere","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81678,"byte_end":81753,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ outside of the start/function sections.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":81758,"byte_end":81801,"line_start":221,"line_end":221,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171005,"byte_end":171011,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319}],"decl_id":null,"docs":" An incremental parser of a binary WebAssembly module.","sig":null,"attributes":[{"value":"/ An incremental parser of a binary WebAssembly module.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170456,"byte_end":170513,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170514,"byte_end":170517,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type is intended to be used to incrementally parse a WebAssembly module","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170518,"byte_end":170598,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ as bytes become available for the module. This can also be used to parse","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170599,"byte_end":170675,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ modules that are already entirely resident within memory.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170676,"byte_end":170737,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170738,"byte_end":170741,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This primary function for a parser is the [`Parser::parse`] function which","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170742,"byte_end":170820,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ will incrementally consume input. You can also use the [`Parser::parse_all`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170821,"byte_end":170901,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ function to parse a module that is entirely resident in memory.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":170902,"byte_end":170969,"line_start":19,"line_end":19,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171812,"byte_end":171824,"line_start":46,"line_end":46,"column_start":5,"column_end":17},"name":"NeedMoreData","qualname":"::parser::Chunk::NeedMoreData","value":"Chunk::NeedMoreData(u64)","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" This can be returned at any time and indicates that more data is needed\n to proceed with parsing. Zero bytes were consumed from the input to\n [`Parser::parse`]. The `usize` value here is a hint as to how many more\n bytes are needed to continue parsing.\n","sig":null,"attributes":[{"value":"/ This can be returned at any time and indicates that more data is needed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171530,"byte_end":171605,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ to proceed with parsing. Zero bytes were consumed from the input to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171610,"byte_end":171681,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ [`Parser::parse`]. The `usize` value here is a hint as to how many more","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171686,"byte_end":171761,"line_start":44,"line_end":44,"column_start":5,"column_end":80}},{"value":"/ bytes are needed to continue parsing.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171766,"byte_end":171807,"line_start":45,"line_end":45,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171877,"byte_end":171883,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"Parsed","qualname":"::parser::Chunk::Parsed","value":"Chunk::Parsed { consumed, payload }","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" A chunk was successfully parsed.\n","sig":null,"attributes":[{"value":"/ A chunk was successfully parsed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171836,"byte_end":171872,"line_start":48,"line_end":48,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171514,"byte_end":171519,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Chunk","qualname":"::parser::Chunk","value":"pub enum Chunk<'a> {\n    NeedMoreData(u64),\n    Parsed {\n        consumed: usize,\n        payload: Payload,\n    },\n}","parent":null,"children":[{"krate":0,"index":2341},{"krate":0,"index":2344}],"decl_id":null,"docs":" A successful return payload from [`Parser::parse`].","sig":null,"attributes":[{"value":"/ A successful return payload from [`Parser::parse`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171235,"byte_end":171290,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171291,"byte_end":171294,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ On success one of two possible values can be returned, either that more data","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171295,"byte_end":171375,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ is needed to continue parsing or a chunk of the input was parsed, indicating","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171376,"byte_end":171456,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ how much of it was parsed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":171457,"byte_end":171487,"line_start":39,"line_end":39,"column_start":1,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":560},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173529,"byte_end":173536,"line_start":82,"line_end":82,"column_start":5,"column_end":12},"name":"Version","qualname":"::parser::Payload::Version","value":"Payload::Version { num, range }","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Indicates the header of a WebAssembly binary.","sig":null,"attributes":[{"value":"/ Indicates the header of a WebAssembly binary.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173359,"byte_end":173408,"line_start":78,"line_end":78,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173413,"byte_end":173416,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This header also indicates the version number that was parsed, which is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173421,"byte_end":173496,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ currently always 1.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173501,"byte_end":173524,"line_start":81,"line_end":81,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173927,"byte_end":173938,"line_start":93,"line_end":93,"column_start":5,"column_end":16},"name":"TypeSection","qualname":"::parser::Payload::TypeSection","value":"Payload::TypeSection(crate::TypeSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A type section was received, and the provided reader can be used to\n parse the contents of the type section.\n","sig":null,"attributes":[{"value":"/ A type section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173803,"byte_end":173874,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ parse the contents of the type section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173879,"byte_end":173922,"line_start":92,"line_end":92,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":566},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174102,"byte_end":174115,"line_start":96,"line_end":96,"column_start":5,"column_end":18},"name":"ImportSection","qualname":"::parser::Payload::ImportSection","value":"Payload::ImportSection(crate::ImportSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A import section was received, and the provided reader can be used to\n parse the contents of the import section.\n","sig":null,"attributes":[{"value":"/ A import section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173974,"byte_end":174047,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the import section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174052,"byte_end":174097,"line_start":95,"line_end":95,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174280,"byte_end":174292,"line_start":99,"line_end":99,"column_start":5,"column_end":17},"name":"AliasSection","qualname":"::parser::Payload::AliasSection","value":"Payload::AliasSection(crate::AliasSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" An alias section was received, and the provided reader can be used to\n parse the contents of the alias section.\n","sig":null,"attributes":[{"value":"/ An alias section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174153,"byte_end":174226,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the alias section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174231,"byte_end":174275,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174462,"byte_end":174477,"line_start":102,"line_end":102,"column_start":5,"column_end":20},"name":"InstanceSection","qualname":"::parser::Payload::InstanceSection","value":"Payload::InstanceSection(crate::InstanceSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" An instance section was received, and the provided reader can be used to\n parse the contents of the instance section.\n","sig":null,"attributes":[{"value":"/ An instance section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174329,"byte_end":174405,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ parse the contents of the instance section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174410,"byte_end":174457,"line_start":101,"line_end":101,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174649,"byte_end":174664,"line_start":105,"line_end":105,"column_start":5,"column_end":20},"name":"FunctionSection","qualname":"::parser::Payload::FunctionSection","value":"Payload::FunctionSection(crate::FunctionSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A function section was received, and the provided reader can be used to\n parse the contents of the function section.\n","sig":null,"attributes":[{"value":"/ A function section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174517,"byte_end":174592,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/ parse the contents of the function section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174597,"byte_end":174644,"line_start":104,"line_end":104,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":578},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174830,"byte_end":174842,"line_start":108,"line_end":108,"column_start":5,"column_end":17},"name":"TableSection","qualname":"::parser::Payload::TableSection","value":"Payload::TableSection(crate::TableSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A table section was received, and the provided reader can be used to\n parse the contents of the table section.\n","sig":null,"attributes":[{"value":"/ A table section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174704,"byte_end":174776,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/ parse the contents of the table section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174781,"byte_end":174825,"line_start":107,"line_end":107,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":581},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175007,"byte_end":175020,"line_start":111,"line_end":111,"column_start":5,"column_end":18},"name":"MemorySection","qualname":"::parser::Payload::MemorySection","value":"Payload::MemorySection(crate::MemorySectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A memory section was received, and the provided reader can be used to\n parse the contents of the memory section.\n","sig":null,"attributes":[{"value":"/ A memory section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174879,"byte_end":174952,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the memory section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":174957,"byte_end":175002,"line_start":110,"line_end":110,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":584},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175181,"byte_end":175191,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"TagSection","qualname":"::parser::Payload::TagSection","value":"Payload::TagSection(crate::TagSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" An tag section was received, and the provided reader can be used to\n parse the contents of the tag section.\n","sig":null,"attributes":[{"value":"/ An tag section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175058,"byte_end":175129,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ parse the contents of the tag section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175134,"byte_end":175176,"line_start":113,"line_end":113,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175354,"byte_end":175367,"line_start":117,"line_end":117,"column_start":5,"column_end":18},"name":"GlobalSection","qualname":"::parser::Payload::GlobalSection","value":"Payload::GlobalSection(crate::GlobalSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A global section was received, and the provided reader can be used to\n parse the contents of the global section.\n","sig":null,"attributes":[{"value":"/ A global section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175226,"byte_end":175299,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ parse the contents of the global section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175304,"byte_end":175349,"line_start":116,"line_end":116,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":590},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175534,"byte_end":175547,"line_start":120,"line_end":120,"column_start":5,"column_end":18},"name":"ExportSection","qualname":"::parser::Payload::ExportSection","value":"Payload::ExportSection(crate::ExportSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" An export section was received, and the provided reader can be used to\n parse the contents of the export section.\n","sig":null,"attributes":[{"value":"/ An export section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175405,"byte_end":175479,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ parse the contents of the export section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175484,"byte_end":175529,"line_start":119,"line_end":119,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":593},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175686,"byte_end":175698,"line_start":123,"line_end":123,"column_start":5,"column_end":17},"name":"StartSection","qualname":"::parser::Payload::StartSection","value":"Payload::StartSection { func, range }","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A start section was received, and the `u32` here is the index of the\n start function.\n","sig":null,"attributes":[{"value":"/ A start section was received, and the `u32` here is the index of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175585,"byte_end":175657,"line_start":121,"line_end":121,"column_start":5,"column_end":77}},{"value":"/ start function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175662,"byte_end":175681,"line_start":122,"line_end":122,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":596},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176058,"byte_end":176072,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"ElementSection","qualname":"::parser::Payload::ElementSection","value":"Payload::ElementSection(crate::ElementSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" An element section was received, and the provided reader can be used to\n parse the contents of the element section.\n","sig":null,"attributes":[{"value":"/ An element section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":175927,"byte_end":176002,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ parse the contents of the element section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176007,"byte_end":176053,"line_start":131,"line_end":131,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":599},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176224,"byte_end":176240,"line_start":135,"line_end":135,"column_start":5,"column_end":21},"name":"DataCountSection","qualname":"::parser::Payload::DataCountSection","value":"Payload::DataCountSection { count, range }","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A data count section was received, and the `u32` here is the contents of\n the data count section.\n","sig":null,"attributes":[{"value":"/ A data count section was received, and the `u32` here is the contents of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176111,"byte_end":176187,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ the data count section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176192,"byte_end":176219,"line_start":134,"line_end":134,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":602},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176599,"byte_end":176610,"line_start":144,"line_end":144,"column_start":5,"column_end":16},"name":"DataSection","qualname":"::parser::Payload::DataSection","value":"Payload::DataSection(crate::DataSectionReader)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A data section was received, and the provided reader can be used to\n parse the contents of the data section.\n","sig":null,"attributes":[{"value":"/ A data section was received, and the provided reader can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176475,"byte_end":176546,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ parse the contents of the data section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176551,"byte_end":176594,"line_start":143,"line_end":143,"column_start":5,"column_end":48}}]},{"kind":"StructVariant","id":{"krate":0,"index":605},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176682,"byte_end":176695,"line_start":146,"line_end":146,"column_start":5,"column_end":18},"name":"CustomSection","qualname":"::parser::Payload::CustomSection","value":"Payload::CustomSection { name, data_offset, data, range }","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" A custom section was found.\n","sig":null,"attributes":[{"value":"/ A custom section was found.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":176646,"byte_end":176677,"line_start":145,"line_end":145,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":610},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177929,"byte_end":177945,"line_start":171,"line_end":171,"column_start":5,"column_end":21},"name":"CodeSectionStart","qualname":"::parser::Payload::CodeSectionStart","value":"Payload::CodeSectionStart { count, range, size }","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Indicator of the start of the code section.","sig":null,"attributes":[{"value":"/ Indicator of the start of the code section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177266,"byte_end":177313,"line_start":160,"line_end":160,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177318,"byte_end":177321,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This entry is returned whenever the code section starts. The `count`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177326,"byte_end":177398,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/ field indicates how many entries are in this code section. After","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177403,"byte_end":177471,"line_start":163,"line_end":163,"column_start":5,"column_end":73}},{"value":"/ receiving this start marker you're guaranteed that the next `count`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177476,"byte_end":177547,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ items will be either `CodeSectionEntry` or an error will be returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177552,"byte_end":177625,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177630,"byte_end":177633,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This, unlike other sections, is intended to be used for streaming the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177638,"byte_end":177711,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ contents of the code section. The code section is not required to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177716,"byte_end":177788,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/ fully resident in memory when we parse it. Instead a [`Parser`] is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177793,"byte_end":177863,"line_start":169,"line_end":169,"column_start":5,"column_end":75}},{"value":"/ capable of parsing piece-by-piece of a code section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":177868,"byte_end":177924,"line_start":170,"line_end":170,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":614},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178939,"byte_end":178955,"line_start":192,"line_end":192,"column_start":5,"column_end":21},"name":"CodeSectionEntry","qualname":"::parser::Payload::CodeSectionEntry","value":"Payload::CodeSectionEntry(crate::FunctionBody)","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" An entry of the code section, a function, was parsed.","sig":null,"attributes":[{"value":"/ An entry of the code section, a function, was parsed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178486,"byte_end":178543,"line_start":185,"line_end":185,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178548,"byte_end":178551,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This entry indicates that a function was successfully received from the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178556,"byte_end":178631,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ code section, and the payload here is the window into the original input","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178636,"byte_end":178712,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ where the function resides. Note that the function itself has not been","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178717,"byte_end":178791,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"/ parsed, it's only been outlined. You'll need to process the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178796,"byte_end":178859,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"/ `FunctionBody` provided to test whether it parses and/or is valid.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178864,"byte_end":178934,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"StructVariant","id":{"krate":0,"index":617},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179229,"byte_end":179247,"line_start":199,"line_end":199,"column_start":5,"column_end":23},"name":"ModuleSectionStart","qualname":"::parser::Payload::ModuleSectionStart","value":"Payload::ModuleSectionStart { count, range, size }","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" Indicator of the start of the module code section.","sig":null,"attributes":[{"value":"/ Indicator of the start of the module code section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":178987,"byte_end":179041,"line_start":194,"line_end":194,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179046,"byte_end":179049,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This behaves the same as the `CodeSectionStart` payload being returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179054,"byte_end":179129,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ You're guaranteed the next `count` items will be of type","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179134,"byte_end":179194,"line_start":197,"line_end":197,"column_start":5,"column_end":65}},{"value":"/ `ModuleSectionEntry`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179199,"byte_end":179224,"line_start":198,"line_end":198,"column_start":5,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":621},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180259,"byte_end":180277,"line_start":220,"line_end":220,"column_start":5,"column_end":23},"name":"ModuleSectionEntry","qualname":"::parser::Payload::ModuleSectionEntry","value":"Payload::ModuleSectionEntry { parser, range }","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" An entry of the module code section, a module, was parsed.","sig":null,"attributes":[{"value":"/ An entry of the module code section, a module, was parsed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179591,"byte_end":179653,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179658,"byte_end":179661,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This variant is special in that it returns a sub-`Parser`. Upon","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179666,"byte_end":179733,"line_start":211,"line_end":211,"column_start":5,"column_end":72}},{"value":"/ receiving a `ModuleSectionEntry` it is expected that the returned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179738,"byte_end":179807,"line_start":212,"line_end":212,"column_start":5,"column_end":74}},{"value":"/ `Parser` will be used instead of the parent `Parser` until the parse has","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179812,"byte_end":179888,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ finished. You'll need to feed data into the `Parser` returned until it","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179893,"byte_end":179967,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ returns `Payload::End`. After that you'll switch back to the parent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":179972,"byte_end":180043,"line_start":215,"line_end":215,"column_start":5,"column_end":76}},{"value":"/ parser to resume parsing the rest of the module code section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180048,"byte_end":180113,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180118,"byte_end":180121,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Note that binaries will not be parsed correctly if you feed the data for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180126,"byte_end":180202,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ a nested module into the parent [`Parser`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180207,"byte_end":180254,"line_start":219,"line_end":219,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":624},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180905,"byte_end":180919,"line_start":235,"line_end":235,"column_start":5,"column_end":19},"name":"UnknownSection","qualname":"::parser::Payload::UnknownSection","value":"Payload::UnknownSection { id, contents, range }","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" An unknown section was found.","sig":null,"attributes":[{"value":"/ An unknown section was found.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180605,"byte_end":180638,"line_start":229,"line_end":229,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180643,"byte_end":180646,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This variant is returned for all unknown sections in a wasm file. This","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180651,"byte_end":180725,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ likely wants to be interpreted as an error by consumers of the parser,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180730,"byte_end":180804,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ but this can also be used to parse sections unknown to wasmparser at","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180809,"byte_end":180881,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ this time.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":180886,"byte_end":180900,"line_start":234,"line_end":234,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":628},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181288,"byte_end":181291,"line_start":246,"line_end":246,"column_start":5,"column_end":8},"name":"End","qualname":"::parser::Payload::End","value":"Payload::End","parent":{"krate":0,"index":558},"children":[],"decl_id":null,"docs":" The end of the WebAssembly module was reached.\n","sig":null,"attributes":[{"value":"/ The end of the WebAssembly module was reached.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181233,"byte_end":181283,"line_start":245,"line_end":245,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":558},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173341,"byte_end":173348,"line_start":77,"line_end":77,"column_start":10,"column_end":17},"name":"Payload","qualname":"::parser::Payload","value":"pub enum Payload<'a> {\n    Version {\n        num: u32,\n        range: Range,\n    },\n    TypeSection(crate::TypeSectionReader),\n    ImportSection(crate::ImportSectionReader),\n    AliasSection(crate::AliasSectionReader),\n    InstanceSection(crate::InstanceSectionReader),\n    FunctionSection(crate::FunctionSectionReader),\n    TableSection(crate::TableSectionReader),\n    MemorySection(crate::MemorySectionReader),\n    TagSection(crate::TagSectionReader),\n    GlobalSection(crate::GlobalSectionReader),\n    ExportSection(crate::ExportSectionReader),\n    StartSection {\n        func: u32,\n        range: Range,\n    },\n    ElementSection(crate::ElementSectionReader),\n    DataCountSection {\n        count: u32,\n        range: Range,\n    },\n    DataSection(crate::DataSectionReader),\n    CustomSection {\n        name: &'a str,\n        data_offset: usize,\n        data: &'a [u8],\n        range: Range,\n    },\n    CodeSectionStart {\n        count: u32,\n        range: Range,\n        size: u32,\n    },\n    CodeSectionEntry(crate::FunctionBody),\n    ModuleSectionStart {\n        count: u32,\n        range: Range,\n        size: u32,\n    },\n    ModuleSectionEntry {\n        parser: Parser,\n        range: Range,\n    },\n    UnknownSection {\n        id: u8,\n        contents: &'a [u8],\n        range: Range,\n    },\n    End,\n}","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":610},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":628}],"decl_id":null,"docs":" Values that can be parsed from a wasm module.","sig":null,"attributes":[{"value":"/ Values that can be parsed from a wasm module.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172115,"byte_end":172164,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172165,"byte_end":172168,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This enumeration is all possible chunks of pieces that can be parsed by a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172169,"byte_end":172246,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/ [`Parser`] from a binary WebAssembly module. Note that for many sections the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172247,"byte_end":172327,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ entire section is parsed all at once, whereas other functions, like the code","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172328,"byte_end":172408,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ section, are parsed incrementally. This is a distinction where some","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172409,"byte_end":172480,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ sections, like the type section, are required to be fully resident in memory","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172481,"byte_end":172561,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ (fully downloaded) before proceeding. Other sections, like the code section,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172562,"byte_end":172642,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/ can be processed in a streaming fashion where each function is extracted","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172643,"byte_end":172719,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ individually so it can possibly be shipped to another thread while you wait","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172720,"byte_end":172799,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ for more functions to get downloaded.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172800,"byte_end":172841,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172842,"byte_end":172845,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note that payloads, when returned, do not indicate that the wasm module is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172846,"byte_end":172924,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ valid. For example when you receive a `Payload::TypeSection` the type","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172925,"byte_end":172998,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ section itself has not yet actually been parsed. The reader returned will be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":172999,"byte_end":173079,"line_start":72,"line_end":72,"column_start":1,"column_end":81}},{"value":"/ able to parse it, but you'll have to actually iterate the reader to do the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173080,"byte_end":173158,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ full parse. Each payload returned is intended to be a *window* into the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173159,"byte_end":173234,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ original `data` passed to [`Parser::parse`] which can be further processed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173235,"byte_end":173313,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"/ if necessary.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":173314,"byte_end":173331,"line_start":76,"line_end":76,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181521,"byte_end":181524,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new(u64) -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Creates a new module parser.","sig":null,"attributes":[{"value":"/ Creates a new module parser.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181314,"byte_end":181346,"line_start":250,"line_end":250,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181351,"byte_end":181354,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Reports errors and ranges relative to `offset` provided, where `offset`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181359,"byte_end":181434,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"/ is some logical offset within the input stream that we're parsing.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181439,"byte_end":181509,"line_start":253,"line_end":253,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":188110,"byte_end":188115,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse<'a>(&mut Self, &'a [u8], bool) -> Result<Chunk>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to parse a chunk of data.","sig":null,"attributes":[{"value":"/ Attempts to parse a chunk of data.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181688,"byte_end":181726,"line_start":262,"line_end":262,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181731,"byte_end":181734,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method will attempt to parse the next incremental portion of a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181739,"byte_end":181810,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/ WebAssembly binary. Data available for the module is provided as `data`,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181815,"byte_end":181891,"line_start":265,"line_end":265,"column_start":5,"column_end":81}},{"value":"/ and the data can be incomplete if more data has yet to arrive for the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181896,"byte_end":181969,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ module. The `eof` flag indicates whether `data` represents all possible","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181974,"byte_end":182049,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ data for the module and no more data will ever be received.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182054,"byte_end":182117,"line_start":268,"line_end":268,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182122,"byte_end":182125,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ There are two ways parsing can succeed with this method:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182130,"byte_end":182190,"line_start":270,"line_end":270,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182195,"byte_end":182198,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ * `Chunk::NeedMoreData` - this indicates that there is not enough bytes","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182203,"byte_end":182278,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/   in `data` to parse a chunk of this module. The caller needs to wait","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182283,"byte_end":182356,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/   for more data to be available in this situation before calling this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182361,"byte_end":182434,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/   method again. It is guaranteed that this is only returned if `eof` is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182439,"byte_end":182514,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/   `false`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182519,"byte_end":182533,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182538,"byte_end":182541,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ * `Chunk::Parsed` - this indicates that a chunk of the input was","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182546,"byte_end":182614,"line_start":278,"line_end":278,"column_start":5,"column_end":73}},{"value":"/   successfully parsed. The payload is available in this variant of what","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182619,"byte_end":182694,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/   was parsed, and this also indicates how many bytes of `data` was","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182699,"byte_end":182769,"line_start":280,"line_end":280,"column_start":5,"column_end":75}},{"value":"/   consumed. It's expected that the caller will not provide these bytes","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182774,"byte_end":182848,"line_start":281,"line_end":281,"column_start":5,"column_end":79}},{"value":"/   back to the [`Parser`] again.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182853,"byte_end":182888,"line_start":282,"line_end":282,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182893,"byte_end":182896,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Note that all `Chunk` return values are connected, with a lifetime, to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182901,"byte_end":182975,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ the input buffer. Each parsed chunk borrows the input buffer and is a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":182980,"byte_end":183053,"line_start":285,"line_end":285,"column_start":5,"column_end":78}},{"value":"/ view into it for successfully parsed chunks.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183058,"byte_end":183106,"line_start":286,"line_end":286,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183111,"byte_end":183114,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ It is expected that you'll call this method until `Payload::End` is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183119,"byte_end":183190,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/ reached, at which point you're guaranteed that the module has completely","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183195,"byte_end":183271,"line_start":289,"line_end":289,"column_start":5,"column_end":81}},{"value":"/ parsed. Note that complete parsing, for the top-level wasm module,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183276,"byte_end":183346,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ implies that `data` is empty and `eof` is `true`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183351,"byte_end":183404,"line_start":291,"line_end":291,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183409,"byte_end":183412,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183417,"byte_end":183429,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183434,"byte_end":183437,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Parse errors are returned as an `Err`. Errors can happen when the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183442,"byte_end":183511,"line_start":295,"line_end":295,"column_start":5,"column_end":74}},{"value":"/ structure of the module is unexpected, or if sections are too large for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183516,"byte_end":183591,"line_start":296,"line_end":296,"column_start":5,"column_end":80}},{"value":"/ example. Note that errors are not returned for malformed *contents* of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183596,"byte_end":183670,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ sections here. Sections are generally not individually parsed and each","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183675,"byte_end":183749,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ returned [`Payload`] needs to be iterated over further to detect all","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183754,"byte_end":183826,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ errors.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183831,"byte_end":183842,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183847,"byte_end":183850,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183855,"byte_end":183869,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183874,"byte_end":183877,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ An example of reading a wasm file from a stream (`std::io::Read`) and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183882,"byte_end":183955,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ incrementally parsing it.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183960,"byte_end":183989,"line_start":305,"line_end":305,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":183994,"byte_end":183997,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184002,"byte_end":184009,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184014,"byte_end":184036,"line_start":308,"line_end":308,"column_start":5,"column_end":27}},{"value":"/ use anyhow::Result;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184041,"byte_end":184064,"line_start":309,"line_end":309,"column_start":5,"column_end":28}},{"value":"/ use wasmparser::{Parser, Chunk, Payload::*};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184069,"byte_end":184117,"line_start":310,"line_end":310,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184122,"byte_end":184125,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ fn parse(mut reader: impl Read) -> Result<()> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184130,"byte_end":184181,"line_start":312,"line_end":312,"column_start":5,"column_end":56}},{"value":"/     let mut buf = Vec::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184186,"byte_end":184219,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/     let mut parser = Parser::new(0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184224,"byte_end":184264,"line_start":314,"line_end":314,"column_start":5,"column_end":45}},{"value":"/     let mut eof = false;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184269,"byte_end":184297,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/     let mut stack = Vec::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184302,"byte_end":184337,"line_start":316,"line_end":316,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184342,"byte_end":184345,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184350,"byte_end":184364,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/         let (payload, consumed) = match parser.parse(&buf, eof)? {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184369,"byte_end":184439,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/             Chunk::NeedMoreData(hint) => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184444,"byte_end":184490,"line_start":320,"line_end":320,"column_start":5,"column_end":51}},{"value":"/                 assert!(!eof); // otherwise an error would be returned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184495,"byte_end":184569,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184574,"byte_end":184577,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/                 // Use the hint to preallocate more space, then read","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184582,"byte_end":184654,"line_start":323,"line_end":323,"column_start":5,"column_end":77}},{"value":"/                 // some more data into our buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184659,"byte_end":184713,"line_start":324,"line_end":324,"column_start":5,"column_end":59}},{"value":"/                 //","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184718,"byte_end":184740,"line_start":325,"line_end":325,"column_start":5,"column_end":27}},{"value":"/                 // Note that the buffer management here is not ideal,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184745,"byte_end":184818,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/                 // but it's compact enough to fit in an example!","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184823,"byte_end":184891,"line_start":327,"line_end":327,"column_start":5,"column_end":73}},{"value":"/                 let len = buf.len();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184896,"byte_end":184936,"line_start":328,"line_end":328,"column_start":5,"column_end":45}},{"value":"/                 buf.extend((0..hint).map(|_| 0u8));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":184941,"byte_end":184996,"line_start":329,"line_end":329,"column_start":5,"column_end":60}},{"value":"/                 let n = reader.read(&mut buf[len..])?;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185001,"byte_end":185059,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/                 buf.truncate(len + n);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185064,"byte_end":185106,"line_start":331,"line_end":331,"column_start":5,"column_end":47}},{"value":"/                 eof = n == 0;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185111,"byte_end":185144,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/                 continue;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185149,"byte_end":185178,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185183,"byte_end":185200,"line_start":334,"line_end":334,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185205,"byte_end":185208,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/             Chunk::Parsed { consumed, payload } => (payload, consumed),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185213,"byte_end":185288,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/         };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185293,"byte_end":185307,"line_start":337,"line_end":337,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185312,"byte_end":185315,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/         match payload {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185320,"byte_end":185347,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/             // Each of these would be handled individually as necessary","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185352,"byte_end":185427,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/             Version { .. } => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185432,"byte_end":185479,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/             TypeSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185484,"byte_end":185531,"line_start":342,"line_end":342,"column_start":5,"column_end":52}},{"value":"/             ImportSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185536,"byte_end":185585,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/             AliasSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185590,"byte_end":185638,"line_start":344,"line_end":344,"column_start":5,"column_end":53}},{"value":"/             InstanceSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185643,"byte_end":185694,"line_start":345,"line_end":345,"column_start":5,"column_end":56}},{"value":"/             FunctionSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185699,"byte_end":185750,"line_start":346,"line_end":346,"column_start":5,"column_end":56}},{"value":"/             TableSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185755,"byte_end":185803,"line_start":347,"line_end":347,"column_start":5,"column_end":53}},{"value":"/             MemorySection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185808,"byte_end":185857,"line_start":348,"line_end":348,"column_start":5,"column_end":54}},{"value":"/             TagSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185862,"byte_end":185908,"line_start":349,"line_end":349,"column_start":5,"column_end":51}},{"value":"/             GlobalSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185913,"byte_end":185962,"line_start":350,"line_end":350,"column_start":5,"column_end":54}},{"value":"/             ExportSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":185967,"byte_end":186016,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/             StartSection { .. } => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186021,"byte_end":186073,"line_start":352,"line_end":352,"column_start":5,"column_end":57}},{"value":"/             ElementSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186078,"byte_end":186128,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/             DataCountSection { .. } => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186133,"byte_end":186189,"line_start":354,"line_end":354,"column_start":5,"column_end":61}},{"value":"/             DataSection(_) => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186194,"byte_end":186241,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186246,"byte_end":186249,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/             // Here we know how many functions we'll be receiving as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186254,"byte_end":186326,"line_start":357,"line_end":357,"column_start":5,"column_end":77}},{"value":"/             // `CodeSectionEntry`, so we can prepare for that, and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186331,"byte_end":186401,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/             // afterwards we can parse and handle each function","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186406,"byte_end":186473,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/             // individually.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186478,"byte_end":186510,"line_start":360,"line_end":360,"column_start":5,"column_end":37}},{"value":"/             CodeSectionStart { .. } => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186515,"byte_end":186571,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/             CodeSectionEntry(body) => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186576,"byte_end":186619,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/                 // here we can iterate over `body` to parse the function","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186624,"byte_end":186700,"line_start":363,"line_end":363,"column_start":5,"column_end":81}},{"value":"/                 // and its locals","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186705,"byte_end":186742,"line_start":364,"line_end":364,"column_start":5,"column_end":42}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186747,"byte_end":186764,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186769,"byte_end":186772,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/             // When parsing nested modules we need to switch which","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186777,"byte_end":186847,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/             // `Parser` we're using.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186852,"byte_end":186892,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/             ModuleSectionStart { .. } => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186897,"byte_end":186955,"line_start":369,"line_end":369,"column_start":5,"column_end":63}},{"value":"/             ModuleSectionEntry { parser: subparser, .. } => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":186960,"byte_end":187025,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/                 stack.push(parser);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187030,"byte_end":187069,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/                 parser = subparser;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187074,"byte_end":187113,"line_start":372,"line_end":372,"column_start":5,"column_end":44}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187118,"byte_end":187135,"line_start":373,"line_end":373,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187140,"byte_end":187143,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/             CustomSection { name, .. } => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187148,"byte_end":187207,"line_start":375,"line_end":375,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187212,"byte_end":187215,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/             // most likely you'd return an error here","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187220,"byte_end":187277,"line_start":377,"line_end":377,"column_start":5,"column_end":62}},{"value":"/             UnknownSection { id, .. } => { /* ... */ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187282,"byte_end":187340,"line_start":378,"line_end":378,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187345,"byte_end":187348,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/             // Once we've reached the end of a module we either resume","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187353,"byte_end":187427,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/             // at the parent module or we break out of the loop because","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187432,"byte_end":187507,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/             // we're done.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187512,"byte_end":187542,"line_start":382,"line_end":382,"column_start":5,"column_end":35}},{"value":"/             End => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187547,"byte_end":187571,"line_start":383,"line_end":383,"column_start":5,"column_end":29}},{"value":"/                 if let Some(parent_parser) = stack.pop() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187576,"byte_end":187638,"line_start":384,"line_end":384,"column_start":5,"column_end":67}},{"value":"/                     parser = parent_parser;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187643,"byte_end":187690,"line_start":385,"line_end":385,"column_start":5,"column_end":52}},{"value":"/                 } else {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187695,"byte_end":187723,"line_start":386,"line_end":386,"column_start":5,"column_end":33}},{"value":"/                     break;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187728,"byte_end":187758,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/                 }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187763,"byte_end":187784,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187789,"byte_end":187806,"line_start":389,"line_end":389,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187811,"byte_end":187824,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187829,"byte_end":187832,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/         // once we're done processing the payload we can forget the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187837,"byte_end":187908,"line_start":392,"line_end":392,"column_start":5,"column_end":76}},{"value":"/         // original.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187913,"byte_end":187937,"line_start":393,"line_end":393,"column_start":5,"column_end":29}},{"value":"/         buf.drain(..consumed);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187942,"byte_end":187976,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187981,"byte_end":187990,"line_start":395,"line_end":395,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":187995,"byte_end":187998,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":188003,"byte_end":188017,"line_start":397,"line_end":397,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":188022,"byte_end":188027,"line_start":398,"line_end":398,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":188032,"byte_end":188035,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # parse(&b\"\\0asm\\x01\\0\\0\\0\"[..]).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":188040,"byte_end":188086,"line_start":400,"line_end":400,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":188091,"byte_end":188098,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201610,"byte_end":201619,"line_start":693,"line_end":693,"column_start":12,"column_end":21},"name":"parse_all","qualname":"<Parser>::parse_all","value":"pub fn parse_all<'a>(Self, &'a [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Convenience function that can be used to parse a module entirely\n resident in memory.","sig":null,"attributes":[{"value":"/ Convenience function that can be used to parse a module entirely","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201089,"byte_end":201157,"line_start":683,"line_end":683,"column_start":5,"column_end":73}},{"value":"/ resident in memory.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201162,"byte_end":201185,"line_start":684,"line_end":684,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201190,"byte_end":201193,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ This function will parse the `data` provided as a WebAssembly module,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201198,"byte_end":201271,"line_start":686,"line_end":686,"column_start":5,"column_end":78}},{"value":"/ assuming that `data` represents the entire WebAssembly module.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201276,"byte_end":201342,"line_start":687,"line_end":687,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201347,"byte_end":201350,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ Note that when this function yields `ModuleSectionEntry`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201355,"byte_end":201415,"line_start":689,"line_end":689,"column_start":5,"column_end":65}},{"value":"/ no action needs to be taken with the returned parser. The parser will be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201420,"byte_end":201496,"line_start":690,"line_end":690,"column_start":5,"column_end":81}},{"value":"/ automatically switched to internally and more payloads will continue to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201501,"byte_end":201576,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ get returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":201581,"byte_end":201598,"line_start":692,"line_end":692,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205476,"byte_end":205488,"line_start":797,"line_end":797,"column_start":12,"column_end":24},"name":"skip_section","qualname":"<Parser>::skip_section","value":"pub fn skip_section(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Skip parsing the code or module code section entirely.","sig":null,"attributes":[{"value":"/ Skip parsing the code or module code section entirely.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203273,"byte_end":203331,"line_start":743,"line_end":743,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203336,"byte_end":203339,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ This function can be used to indicate, after receiving","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203344,"byte_end":203402,"line_start":745,"line_end":745,"column_start":5,"column_end":63}},{"value":"/ `CodeSectionStart` or `ModuleSectionStart`, that the section","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203407,"byte_end":203471,"line_start":746,"line_end":746,"column_start":5,"column_end":69}},{"value":"/ will not be parsed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203476,"byte_end":203499,"line_start":747,"line_end":747,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203504,"byte_end":203507,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ The caller will be responsible for skipping `size` bytes (found in the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203512,"byte_end":203586,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ `CodeSectionStart` or `ModuleSectionStart` payload). Bytes should","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203591,"byte_end":203660,"line_start":750,"line_end":750,"column_start":5,"column_end":74}},{"value":"/ only be fed into `parse` after the `size` bytes have been skipped.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203665,"byte_end":203735,"line_start":751,"line_end":751,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203740,"byte_end":203743,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203748,"byte_end":203760,"line_start":753,"line_end":753,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203765,"byte_end":203768,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the parser is not in a state where it's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203773,"byte_end":203844,"line_start":755,"line_end":755,"column_start":5,"column_end":76}},{"value":"/ parsing the code or module code section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203849,"byte_end":203893,"line_start":756,"line_end":756,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203898,"byte_end":203901,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203906,"byte_end":203920,"line_start":758,"line_end":758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203925,"byte_end":203928,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203933,"byte_end":203940,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::{Result, Parser, Chunk, Range, SectionReader, Payload::*};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":203945,"byte_end":204023,"line_start":761,"line_end":761,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204028,"byte_end":204031,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ fn objdump_headers(mut wasm: &[u8]) -> Result<()> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204036,"byte_end":204091,"line_start":763,"line_end":763,"column_start":5,"column_end":60}},{"value":"/     let mut parser = Parser::new(0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204096,"byte_end":204136,"line_start":764,"line_end":764,"column_start":5,"column_end":45}},{"value":"/     loop {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204141,"byte_end":204155,"line_start":765,"line_end":765,"column_start":5,"column_end":19}},{"value":"/         let payload = match parser.parse(wasm, true)? {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204160,"byte_end":204219,"line_start":766,"line_end":766,"column_start":5,"column_end":64}},{"value":"/             Chunk::Parsed { consumed, payload } => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204224,"byte_end":204280,"line_start":767,"line_end":767,"column_start":5,"column_end":61}},{"value":"/                 wasm = &wasm[consumed..];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204285,"byte_end":204330,"line_start":768,"line_end":768,"column_start":5,"column_end":50}},{"value":"/                 payload","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204335,"byte_end":204362,"line_start":769,"line_end":769,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204367,"byte_end":204384,"line_start":770,"line_end":770,"column_start":5,"column_end":22}},{"value":"/             // this state isn't possible with `eof = true`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204389,"byte_end":204451,"line_start":771,"line_end":771,"column_start":5,"column_end":67}},{"value":"/             Chunk::NeedMoreData(_) => unreachable!(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204456,"byte_end":204513,"line_start":772,"line_end":772,"column_start":5,"column_end":62}},{"value":"/         };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204518,"byte_end":204532,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/         match payload {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204537,"byte_end":204564,"line_start":774,"line_end":774,"column_start":5,"column_end":32}},{"value":"/             TypeSection(s) => print_range(\"type section\", &s.range()),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204569,"byte_end":204643,"line_start":775,"line_end":775,"column_start":5,"column_end":79}},{"value":"/             ImportSection(s) => print_range(\"import section\", &s.range()),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204648,"byte_end":204726,"line_start":776,"line_end":776,"column_start":5,"column_end":83}},{"value":"/             // .. other sections","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204731,"byte_end":204767,"line_start":777,"line_end":777,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204772,"byte_end":204775,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/             // Print the range of the code section we see, but don't","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204780,"byte_end":204852,"line_start":779,"line_end":779,"column_start":5,"column_end":77}},{"value":"/             // actually iterate over each individual function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204857,"byte_end":204923,"line_start":780,"line_end":780,"column_start":5,"column_end":71}},{"value":"/             CodeSectionStart { range, size, .. } => {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204928,"byte_end":204985,"line_start":781,"line_end":781,"column_start":5,"column_end":62}},{"value":"/                 print_range(\"code section\", &range);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":204990,"byte_end":205046,"line_start":782,"line_end":782,"column_start":5,"column_end":61}},{"value":"/                 parser.skip_section();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205051,"byte_end":205093,"line_start":783,"line_end":783,"column_start":5,"column_end":47}},{"value":"/                 wasm = &wasm[size as usize..];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205098,"byte_end":205148,"line_start":784,"line_end":784,"column_start":5,"column_end":55}},{"value":"/             }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205153,"byte_end":205170,"line_start":785,"line_end":785,"column_start":5,"column_end":22}},{"value":"/             End => break,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205175,"byte_end":205204,"line_start":786,"line_end":786,"column_start":5,"column_end":34}},{"value":"/             _ => {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205209,"byte_end":205232,"line_start":787,"line_end":787,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205237,"byte_end":205250,"line_start":788,"line_end":788,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205255,"byte_end":205264,"line_start":789,"line_end":789,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205269,"byte_end":205283,"line_start":790,"line_end":790,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205288,"byte_end":205293,"line_start":791,"line_end":791,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205298,"byte_end":205301,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ fn print_range(section: &str, range: &Range) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205306,"byte_end":205356,"line_start":793,"line_end":793,"column_start":5,"column_end":55}},{"value":"/     println!(\"{:>40}: {:#010x} - {:#010x}\", section, range.start, range.end);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205361,"byte_end":205442,"line_start":794,"line_end":794,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205447,"byte_end":205452,"line_start":795,"line_end":795,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":205457,"byte_end":205464,"line_start":796,"line_end":796,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":225461,"byte_end":225478,"line_start":21,"line_end":21,"column_start":12,"column_end":29},"name":"BinaryReaderError","qualname":"::primitives::BinaryReaderError","value":"BinaryReaderError {  }","parent":null,"children":[{"krate":0,"index":2351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":676},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":225886,"byte_end":225892,"line_start":35,"line_end":35,"column_start":10,"column_end":16},"name":"Result","qualname":"::primitives::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":226904,"byte_end":226911,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"message","qualname":"<BinaryReaderError>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get this error's message.\n","sig":null,"attributes":[{"value":"/ Get this error's message.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":226863,"byte_end":226892,"line_start":71,"line_end":71,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227046,"byte_end":227052,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"offset","qualname":"<BinaryReaderError>::offset","value":"pub fn offset(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the offset within the Wasm binary where the error occured.\n","sig":null,"attributes":[{"value":"/ Get the offset within the Wasm binary where the error occured.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":226968,"byte_end":227034,"line_start":76,"line_end":76,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227201,"byte_end":227208,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::primitives::CustomSectionKind::Unknown","value":"CustomSectionKind::Unknown","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227214,"byte_end":227218,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Name","qualname":"::primitives::CustomSectionKind::Name","value":"CustomSectionKind::Name","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227224,"byte_end":227233,"line_start":86,"line_end":86,"column_start":5,"column_end":14},"name":"Producers","qualname":"::primitives::CustomSectionKind::Producers","value":"CustomSectionKind::Producers","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227239,"byte_end":227255,"line_start":87,"line_end":87,"column_start":5,"column_end":21},"name":"SourceMappingURL","qualname":"::primitives::CustomSectionKind::SourceMappingURL","value":"CustomSectionKind::SourceMappingURL","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227261,"byte_end":227266,"line_start":88,"line_end":88,"column_start":5,"column_end":10},"name":"Reloc","qualname":"::primitives::CustomSectionKind::Reloc","value":"CustomSectionKind::Reloc","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2375},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227272,"byte_end":227279,"line_start":89,"line_end":89,"column_start":5,"column_end":12},"name":"Linking","qualname":"::primitives::CustomSectionKind::Linking","value":"CustomSectionKind::Linking","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227177,"byte_end":227194,"line_start":83,"line_end":83,"column_start":10,"column_end":27},"name":"CustomSectionKind","qualname":"::primitives::CustomSectionKind","value":"pub enum CustomSectionKind {\n    Unknown,\n    Name,\n    Producers,\n    SourceMappingURL,\n    Reloc,\n    Linking,\n}","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2367},{"krate":0,"index":2369},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2375}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227498,"byte_end":227504,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"Custom","qualname":"::primitives::SectionCode::Custom","value":"SectionCode::Custom { name, kind }","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227574,"byte_end":227578,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Type","qualname":"::primitives::SectionCode::Type","value":"SectionCode::Type","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227625,"byte_end":227630,"line_start":102,"line_end":102,"column_start":5,"column_end":10},"name":"Alias","qualname":"::primitives::SectionCode::Alias","value":"SectionCode::Alias","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227687,"byte_end":227693,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"Import","qualname":"::primitives::SectionCode::Import","value":"SectionCode::Import","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227726,"byte_end":227732,"line_start":104,"line_end":104,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::SectionCode::Module","value":"SectionCode::Module","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227765,"byte_end":227773,"line_start":105,"line_end":105,"column_start":5,"column_end":13},"name":"Instance","qualname":"::primitives::SectionCode::Instance","value":"SectionCode::Instance","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227805,"byte_end":227813,"line_start":106,"line_end":106,"column_start":5,"column_end":13},"name":"Function","qualname":"::primitives::SectionCode::Function","value":"SectionCode::Function","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227846,"byte_end":227851,"line_start":107,"line_end":107,"column_start":5,"column_end":10},"name":"Table","qualname":"::primitives::SectionCode::Table","value":"SectionCode::Table","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227906,"byte_end":227912,"line_start":108,"line_end":108,"column_start":5,"column_end":11},"name":"Memory","qualname":"::primitives::SectionCode::Memory","value":"SectionCode::Memory","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227943,"byte_end":227949,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"Global","qualname":"::primitives::SectionCode::Global","value":"SectionCode::Global","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227982,"byte_end":227988,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"name":"Export","qualname":"::primitives::SectionCode::Export","value":"SectionCode::Export","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228009,"byte_end":228014,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Start","qualname":"::primitives::SectionCode::Start","value":"SectionCode::Start","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228055,"byte_end":228062,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Element","qualname":"::primitives::SectionCode::Element","value":"SectionCode::Element","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228091,"byte_end":228101,"line_start":113,"line_end":113,"column_start":5,"column_end":15},"name":"ModuleCode","qualname":"::primitives::SectionCode::ModuleCode","value":"SectionCode::ModuleCode","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228129,"byte_end":228133,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Code","qualname":"::primitives::SectionCode::Code","value":"SectionCode::Code","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228171,"byte_end":228175,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Data","qualname":"::primitives::SectionCode::Data","value":"SectionCode::Data","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228204,"byte_end":228213,"line_start":116,"line_end":116,"column_start":5,"column_end":14},"name":"DataCount","qualname":"::primitives::SectionCode::DataCount","value":"SectionCode::DataCount","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228254,"byte_end":228257,"line_start":117,"line_end":117,"column_start":5,"column_end":8},"name":"Tag","qualname":"::primitives::SectionCode::Tag","value":"SectionCode::Tag","parent":{"krate":0,"index":2392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227476,"byte_end":227487,"line_start":96,"line_end":96,"column_start":10,"column_end":21},"name":"SectionCode","qualname":"::primitives::SectionCode","value":"pub enum SectionCode<'a> {\n    Custom {\n        name: &'a str,\n        kind: CustomSectionKind,\n    },\n    Type,\n    Alias,\n    Import,\n    Module,\n    Instance,\n    Function,\n    Table,\n    Memory,\n    Global,\n    Export,\n    Start,\n    Element,\n    ModuleCode,\n    Code,\n    Data,\n    DataCount,\n    Tag,\n}","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":2397},{"krate":0,"index":2399},{"krate":0,"index":2401},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2421},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2427},{"krate":0,"index":2429}],"decl_id":null,"docs":" Section code as defined [here].","sig":null,"attributes":[{"value":"/ Section code as defined [here].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227284,"byte_end":227319,"line_start":92,"line_end":92,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227320,"byte_end":227323,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [here]: https://webassembly.github.io/spec/core/binary/modules.html#sections","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":227324,"byte_end":227404,"line_start":94,"line_end":94,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228469,"byte_end":228472,"line_start":125,"line_end":125,"column_start":5,"column_end":8},"name":"I32","qualname":"::primitives::Type::I32","value":"Type::I32","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228478,"byte_end":228481,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"I64","qualname":"::primitives::Type::I64","value":"Type::I64","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228487,"byte_end":228490,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"F32","qualname":"::primitives::Type::F32","value":"Type::F32","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228496,"byte_end":228499,"line_start":128,"line_end":128,"column_start":5,"column_end":8},"name":"F64","qualname":"::primitives::Type::F64","value":"Type::F64","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228505,"byte_end":228509,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"V128","qualname":"::primitives::Type::V128","value":"Type::V128","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228515,"byte_end":228522,"line_start":130,"line_end":130,"column_start":5,"column_end":12},"name":"FuncRef","qualname":"::primitives::Type::FuncRef","value":"Type::FuncRef","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228528,"byte_end":228537,"line_start":131,"line_end":131,"column_start":5,"column_end":14},"name":"ExternRef","qualname":"::primitives::Type::ExternRef","value":"Type::ExternRef","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228543,"byte_end":228549,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"ExnRef","qualname":"::primitives::Type::ExnRef","value":"Type::ExnRef","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228555,"byte_end":228559,"line_start":133,"line_end":133,"column_start":5,"column_end":9},"name":"Func","qualname":"::primitives::Type::Func","value":"Type::Func","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228565,"byte_end":228579,"line_start":134,"line_end":134,"column_start":5,"column_end":19},"name":"EmptyBlockType","qualname":"::primitives::Type::EmptyBlockType","value":"Type::EmptyBlockType","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228458,"byte_end":228462,"line_start":124,"line_end":124,"column_start":10,"column_end":14},"name":"Type","qualname":"::primitives::Type","value":"pub enum Type {\n    I32,\n    I64,\n    F32,\n    F64,\n    V128,\n    FuncRef,\n    ExternRef,\n    ExnRef,\n    Func,\n    EmptyBlockType,\n}","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2467},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2475}],"decl_id":null,"docs":" Types as defined [here].","sig":null,"attributes":[{"value":"/ Types as defined [here].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228289,"byte_end":228317,"line_start":120,"line_end":120,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228318,"byte_end":228321,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ [here]: https://webassembly.github.io/spec/core/syntax/types.html#types","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228322,"byte_end":228397,"line_start":122,"line_end":122,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228837,"byte_end":228841,"line_start":144,"line_end":144,"column_start":5,"column_end":9},"name":"Type","qualname":"::primitives::TypeOrFuncType::Type","value":"TypeOrFuncType::Type(Type)","parent":{"krate":0,"index":2491},"children":[],"decl_id":null,"docs":" A value type.","sig":null,"attributes":[{"value":"/ A value type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228703,"byte_end":228720,"line_start":140,"line_end":140,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228725,"byte_end":228728,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ When used as the type for a block, this type is the optional result","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228733,"byte_end":228804,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ type: `[] -> [t?]`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228809,"byte_end":228832,"line_start":143,"line_end":143,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228927,"byte_end":228935,"line_start":147,"line_end":147,"column_start":5,"column_end":13},"name":"FuncType","qualname":"::primitives::TypeOrFuncType::FuncType","value":"TypeOrFuncType::FuncType(u32)","parent":{"krate":0,"index":2491},"children":[],"decl_id":null,"docs":" A function type (referenced as an index into the types section).\n","sig":null,"attributes":[{"value":"/ A function type (referenced as an index into the types section).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228854,"byte_end":228922,"line_start":146,"line_end":146,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228682,"byte_end":228696,"line_start":139,"line_end":139,"column_start":10,"column_end":24},"name":"TypeOrFuncType","qualname":"::primitives::TypeOrFuncType","value":"pub enum TypeOrFuncType { Type(Type), FuncType(u32), }","parent":null,"children":[{"krate":0,"index":2492},{"krate":0,"index":2495}],"decl_id":null,"docs":" Either a value type or a function type.\n","sig":null,"attributes":[{"value":"/ Either a value type or a function type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228584,"byte_end":228627,"line_start":137,"line_end":137,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229130,"byte_end":229138,"line_start":155,"line_end":155,"column_start":5,"column_end":13},"name":"Function","qualname":"::primitives::ExternalKind::Function","value":"ExternalKind::Function","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229144,"byte_end":229149,"line_start":156,"line_end":156,"column_start":5,"column_end":10},"name":"Table","qualname":"::primitives::ExternalKind::Table","value":"ExternalKind::Table","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229155,"byte_end":229161,"line_start":157,"line_end":157,"column_start":5,"column_end":11},"name":"Memory","qualname":"::primitives::ExternalKind::Memory","value":"ExternalKind::Memory","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229167,"byte_end":229170,"line_start":158,"line_end":158,"column_start":5,"column_end":8},"name":"Tag","qualname":"::primitives::ExternalKind::Tag","value":"ExternalKind::Tag","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229176,"byte_end":229182,"line_start":159,"line_end":159,"column_start":5,"column_end":11},"name":"Global","qualname":"::primitives::ExternalKind::Global","value":"ExternalKind::Global","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229188,"byte_end":229192,"line_start":160,"line_end":160,"column_start":5,"column_end":9},"name":"Type","qualname":"::primitives::ExternalKind::Type","value":"ExternalKind::Type","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229198,"byte_end":229204,"line_start":161,"line_end":161,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::ExternalKind::Module","value":"ExternalKind::Module","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229210,"byte_end":229218,"line_start":162,"line_end":162,"column_start":5,"column_end":13},"name":"Instance","qualname":"::primitives::ExternalKind::Instance","value":"ExternalKind::Instance","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229111,"byte_end":229123,"line_start":154,"line_end":154,"column_start":10,"column_end":22},"name":"ExternalKind","qualname":"::primitives::ExternalKind","value":"pub enum ExternalKind {\n    Function,\n    Table,\n    Memory,\n    Tag,\n    Global,\n    Type,\n    Module,\n    Instance,\n}","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2513},{"krate":0,"index":2515},{"krate":0,"index":2517},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2525}],"decl_id":null,"docs":" External types as defined [here].","sig":null,"attributes":[{"value":"/ External types as defined [here].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228945,"byte_end":228982,"line_start":150,"line_end":150,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228983,"byte_end":228986,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ [here]: https://webassembly.github.io/spec/core/syntax/types.html#external-types","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":228987,"byte_end":229071,"line_start":152,"line_end":152,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229274,"byte_end":229278,"line_start":167,"line_end":167,"column_start":5,"column_end":9},"name":"Func","qualname":"::primitives::TypeDef::Func","value":"TypeDef::Func(FuncType)","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229294,"byte_end":229302,"line_start":168,"line_end":168,"column_start":5,"column_end":13},"name":"Instance","qualname":"::primitives::TypeDef::Instance","value":"TypeDef::Instance(InstanceType)","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229326,"byte_end":229332,"line_start":169,"line_end":169,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::TypeDef::Module","value":"TypeDef::Module(ModuleType)","parent":{"krate":0,"index":2532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229256,"byte_end":229263,"line_start":166,"line_end":166,"column_start":10,"column_end":17},"name":"TypeDef","qualname":"::primitives::TypeDef","value":"pub enum TypeDef<'a> {\n    Func(FuncType),\n    Instance(InstanceType),\n    Module(ModuleType),\n}","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2537},{"krate":0,"index":2540}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229409,"byte_end":229417,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"FuncType","qualname":"::primitives::FuncType","value":"FuncType { params, returns }","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229428,"byte_end":229434,"line_start":174,"line_end":174,"column_start":9,"column_end":15},"name":"params","qualname":"::primitives::FuncType::params","value":"std::boxed::Box<[primitives::Type]>","parent":{"krate":0,"index":2549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229457,"byte_end":229464,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"name":"returns","qualname":"::primitives::FuncType::returns","value":"std::boxed::Box<[primitives::Type]>","parent":{"krate":0,"index":2549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229517,"byte_end":229529,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"InstanceType","qualname":"::primitives::InstanceType","value":"InstanceType { exports }","parent":null,"children":[{"krate":0,"index":2568}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229544,"byte_end":229551,"line_start":180,"line_end":180,"column_start":9,"column_end":16},"name":"exports","qualname":"::primitives::InstanceType::exports","value":"std::boxed::Box<[primitives::ExportType<'a>]>","parent":{"krate":0,"index":2566},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229614,"byte_end":229624,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"ModuleType","qualname":"::primitives::ModuleType","value":"ModuleType { imports, exports }","parent":null,"children":[{"krate":0,"index":2577},{"krate":0,"index":2578}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229639,"byte_end":229646,"line_start":185,"line_end":185,"column_start":9,"column_end":16},"name":"imports","qualname":"::primitives::ModuleType::imports","value":"std::boxed::Box<[readers::import_section::Import<'a>]>","parent":{"krate":0,"index":2575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229682,"byte_end":229689,"line_start":186,"line_end":186,"column_start":9,"column_end":16},"name":"exports","qualname":"::primitives::ModuleType::exports","value":"std::boxed::Box<[primitives::ExportType<'a>]>","parent":{"krate":0,"index":2575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229752,"byte_end":229762,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"ExportType","qualname":"::primitives::ExportType","value":"ExportType { name, ty }","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229777,"byte_end":229781,"line_start":191,"line_end":191,"column_start":9,"column_end":13},"name":"name","qualname":"::primitives::ExportType::name","value":"&'a str","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229800,"byte_end":229802,"line_start":192,"line_end":192,"column_start":9,"column_end":11},"name":"ty","qualname":"::primitives::ExportType::ty","value":"primitives::ImportSectionEntryType","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229893,"byte_end":229902,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"TableType","qualname":"::primitives::TableType","value":"TableType { element_type, initial, maximum }","parent":null,"children":[{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229913,"byte_end":229925,"line_start":197,"line_end":197,"column_start":9,"column_end":21},"name":"element_type","qualname":"::primitives::TableType::element_type","value":"primitives::Type","parent":{"krate":0,"index":2595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229990,"byte_end":229997,"line_start":199,"line_end":199,"column_start":9,"column_end":16},"name":"initial","qualname":"::primitives::TableType::initial","value":"u32","parent":{"krate":0,"index":2595},"children":[],"decl_id":null,"docs":" Initial size of this table, in elements.\n","sig":null,"attributes":[{"value":"/ Initial size of this table, in elements.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":229937,"byte_end":229981,"line_start":198,"line_end":198,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230069,"byte_end":230076,"line_start":201,"line_end":201,"column_start":9,"column_end":16},"name":"maximum","qualname":"::primitives::TableType::maximum","value":"std::option::Option<u32>","parent":{"krate":0,"index":2595},"children":[],"decl_id":null,"docs":" Optional maximum size of the table, in elements.\n","sig":null,"attributes":[{"value":"/ Optional maximum size of the table, in elements.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230008,"byte_end":230060,"line_start":200,"line_end":200,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230156,"byte_end":230166,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"MemoryType","qualname":"::primitives::MemoryType","value":"MemoryType { memory64, shared, initial, maximum }","parent":null,"children":[{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230387,"byte_end":230395,"line_start":210,"line_end":210,"column_start":9,"column_end":17},"name":"memory64","qualname":"::primitives::MemoryType::memory64","value":"bool","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Whether or not this is a 64-bit memory, using i64 as an index. If this\n is false it's a 32-bit memory using i32 as an index.","sig":null,"attributes":[{"value":"/ Whether or not this is a 64-bit memory, using i64 as an index. If this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230173,"byte_end":230247,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ is false it's a 32-bit memory using i32 as an index.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230252,"byte_end":230308,"line_start":207,"line_end":207,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230313,"byte_end":230316,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This is part of the memory64 proposal in WebAssembly.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230321,"byte_end":230378,"line_start":209,"line_end":209,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230660,"byte_end":230666,"line_start":217,"line_end":217,"column_start":9,"column_end":15},"name":"shared","qualname":"::primitives::MemoryType::shared","value":"bool","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Whether or not this is a \"shared\" memory, indicating that it should be\n send-able across threads and the `maximum` field is always present for\n valid types.","sig":null,"attributes":[{"value":"/ Whether or not this is a \"shared\" memory, indicating that it should be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230408,"byte_end":230482,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ send-able across threads and the `maximum` field is always present for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230487,"byte_end":230561,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ valid types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230566,"byte_end":230582,"line_start":214,"line_end":214,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230587,"byte_end":230590,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This is part of the threads proposal in WebAssembly.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230595,"byte_end":230651,"line_start":216,"line_end":216,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230869,"byte_end":230876,"line_start":223,"line_end":223,"column_start":9,"column_end":16},"name":"initial","qualname":"::primitives::MemoryType::initial","value":"u64","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Initial size of this memory, in wasm pages.","sig":null,"attributes":[{"value":"/ Initial size of this memory, in wasm pages.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230679,"byte_end":230726,"line_start":219,"line_end":219,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230731,"byte_end":230734,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ For 32-bit memories (when `memory64` is `false`) this is guaranteed to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230739,"byte_end":230813,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ be at most `u32::MAX` for valid types.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230818,"byte_end":230860,"line_start":222,"line_end":222,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2618},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231173,"byte_end":231180,"line_start":230,"line_end":230,"column_start":9,"column_end":16},"name":"maximum","qualname":"::primitives::MemoryType::maximum","value":"std::option::Option<u64>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":" Optional maximum size of this memory, in wasm pages.","sig":null,"attributes":[{"value":"/ Optional maximum size of this memory, in wasm pages.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230888,"byte_end":230944,"line_start":225,"line_end":225,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230949,"byte_end":230952,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ For 32-bit memories (when `memory64` is `false`) this is guaranteed to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":230957,"byte_end":231031,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ be at most `u32::MAX` for valid types. This field is always present for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231036,"byte_end":231111,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ valid wasm memories when `shared` is `true`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231116,"byte_end":231164,"line_start":229,"line_end":229,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231254,"byte_end":231261,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"TagType","qualname":"::primitives::TagType","value":"TagType { type_index }","parent":null,"children":[{"krate":0,"index":2635}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231272,"byte_end":231282,"line_start":235,"line_end":235,"column_start":9,"column_end":19},"name":"type_index","qualname":"::primitives::TagType::type_index","value":"u32","parent":{"krate":0,"index":2634},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231321,"byte_end":231331,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"index_type","qualname":"<MemoryType>::index_type","value":"pub fn index_type(&Self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231518,"byte_end":231528,"line_start":249,"line_end":249,"column_start":12,"column_end":22},"name":"GlobalType","qualname":"::primitives::GlobalType","value":"GlobalType { content_type, mutable }","parent":null,"children":[{"krate":0,"index":2649},{"krate":0,"index":2650}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231539,"byte_end":231551,"line_start":250,"line_end":250,"column_start":9,"column_end":21},"name":"content_type","qualname":"::primitives::GlobalType::content_type","value":"primitives::Type","parent":{"krate":0,"index":2648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2650},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231567,"byte_end":231574,"line_start":251,"line_end":251,"column_start":9,"column_end":16},"name":"mutable","qualname":"::primitives::GlobalType::mutable","value":"bool","parent":{"krate":0,"index":2648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231653,"byte_end":231661,"line_start":256,"line_end":256,"column_start":5,"column_end":13},"name":"Function","qualname":"::primitives::ImportSectionEntryType::Function","value":"ImportSectionEntryType::Function(u32)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231672,"byte_end":231677,"line_start":257,"line_end":257,"column_start":5,"column_end":10},"name":"Table","qualname":"::primitives::ImportSectionEntryType::Table","value":"ImportSectionEntryType::Table(TableType)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231694,"byte_end":231700,"line_start":258,"line_end":258,"column_start":5,"column_end":11},"name":"Memory","qualname":"::primitives::ImportSectionEntryType::Memory","value":"ImportSectionEntryType::Memory(MemoryType)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231718,"byte_end":231721,"line_start":259,"line_end":259,"column_start":5,"column_end":8},"name":"Tag","qualname":"::primitives::ImportSectionEntryType::Tag","value":"ImportSectionEntryType::Tag(TagType)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231736,"byte_end":231742,"line_start":260,"line_end":260,"column_start":5,"column_end":11},"name":"Global","qualname":"::primitives::ImportSectionEntryType::Global","value":"ImportSectionEntryType::Global(GlobalType)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231760,"byte_end":231766,"line_start":261,"line_end":261,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::ImportSectionEntryType::Module","value":"ImportSectionEntryType::Module(u32)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231777,"byte_end":231785,"line_start":262,"line_end":262,"column_start":5,"column_end":13},"name":"Instance","qualname":"::primitives::ImportSectionEntryType::Instance","value":"ImportSectionEntryType::Instance(u32)","parent":{"krate":0,"index":2666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2666},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231624,"byte_end":231646,"line_start":255,"line_end":255,"column_start":10,"column_end":32},"name":"ImportSectionEntryType","qualname":"::primitives::ImportSectionEntryType","value":"pub enum ImportSectionEntryType {\n    Function(u32),\n    Table(TableType),\n    Memory(MemoryType),\n    Tag(TagType),\n    Global(GlobalType),\n    Module(u32),\n    Instance(u32),\n}","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2685}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2693},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231836,"byte_end":231851,"line_start":266,"line_end":266,"column_start":12,"column_end":27},"name":"MemoryImmediate","qualname":"::primitives::MemoryImmediate","value":"MemoryImmediate { align, offset, memory }","parent":null,"children":[{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231931,"byte_end":231936,"line_start":268,"line_end":268,"column_start":9,"column_end":14},"name":"align","qualname":"::primitives::MemoryImmediate::align","value":"u8","parent":{"krate":0,"index":2693},"children":[],"decl_id":null,"docs":" Alignment, stored as `n` where the actual alignment is `2^n`\n","sig":null,"attributes":[{"value":"/ Alignment, stored as `n` where the actual alignment is `2^n`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231858,"byte_end":231922,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232319,"byte_end":232325,"line_start":276,"line_end":276,"column_start":9,"column_end":15},"name":"offset","qualname":"::primitives::MemoryImmediate::offset","value":"u64","parent":{"krate":0,"index":2693},"children":[],"decl_id":null,"docs":" A fixed byte-offset that this memory immediate specifies.","sig":null,"attributes":[{"value":"/ A fixed byte-offset that this memory immediate specifies.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231947,"byte_end":232008,"line_start":270,"line_end":270,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232013,"byte_end":232016,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that the memory64 proposal can specify a full 64-bit byte offset","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232021,"byte_end":232094,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ while otherwise only 32-bit offsets are allowed. Once validated","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232099,"byte_end":232166,"line_start":273,"line_end":273,"column_start":5,"column_end":72}},{"value":"/ memory immediates for 32-bit memories are guaranteed to be at most","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232171,"byte_end":232241,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"/ `u32::MAX` whereas 64-bit memories can use the full 64-bits.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232246,"byte_end":232310,"line_start":275,"line_end":275,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232576,"byte_end":232582,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"name":"memory","qualname":"::primitives::MemoryImmediate::memory","value":"u32","parent":{"krate":0,"index":2693},"children":[],"decl_id":null,"docs":" The index of the memory this immediate points to.","sig":null,"attributes":[{"value":"/ The index of the memory this immediate points to.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232337,"byte_end":232390,"line_start":278,"line_end":278,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232395,"byte_end":232398,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Note that this points within the module's own memory index space, and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232403,"byte_end":232476,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ is always zero unless the multi-memory proposal of WebAssembly is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232481,"byte_end":232550,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"/ enabled.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232555,"byte_end":232567,"line_start":282,"line_end":282,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":2702},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232633,"byte_end":232639,"line_start":287,"line_end":287,"column_start":12,"column_end":18},"name":"Naming","qualname":"::primitives::Naming","value":"Naming { index, name }","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232654,"byte_end":232659,"line_start":288,"line_end":288,"column_start":9,"column_end":14},"name":"index","qualname":"::primitives::Naming::index","value":"u32","parent":{"krate":0,"index":2702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232674,"byte_end":232678,"line_start":289,"line_end":289,"column_start":9,"column_end":13},"name":"name","qualname":"::primitives::Naming::name","value":"&'a str","parent":{"krate":0,"index":2702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2715},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232746,"byte_end":232752,"line_start":294,"line_end":294,"column_start":5,"column_end":11},"name":"Module","qualname":"::primitives::NameType::Module","value":"NameType::Module","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232758,"byte_end":232766,"line_start":295,"line_end":295,"column_start":5,"column_end":13},"name":"Function","qualname":"::primitives::NameType::Function","value":"NameType::Function","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232772,"byte_end":232777,"line_start":296,"line_end":296,"column_start":5,"column_end":10},"name":"Local","qualname":"::primitives::NameType::Local","value":"NameType::Local","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232783,"byte_end":232788,"line_start":297,"line_end":297,"column_start":5,"column_end":10},"name":"Label","qualname":"::primitives::NameType::Label","value":"NameType::Label","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232794,"byte_end":232798,"line_start":298,"line_end":298,"column_start":5,"column_end":9},"name":"Type","qualname":"::primitives::NameType::Type","value":"NameType::Type","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2725},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232804,"byte_end":232809,"line_start":299,"line_end":299,"column_start":5,"column_end":10},"name":"Table","qualname":"::primitives::NameType::Table","value":"NameType::Table","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232815,"byte_end":232821,"line_start":300,"line_end":300,"column_start":5,"column_end":11},"name":"Memory","qualname":"::primitives::NameType::Memory","value":"NameType::Memory","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232827,"byte_end":232833,"line_start":301,"line_end":301,"column_start":5,"column_end":11},"name":"Global","qualname":"::primitives::NameType::Global","value":"NameType::Global","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232839,"byte_end":232846,"line_start":302,"line_end":302,"column_start":5,"column_end":12},"name":"Element","qualname":"::primitives::NameType::Element","value":"NameType::Element","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232852,"byte_end":232856,"line_start":303,"line_end":303,"column_start":5,"column_end":9},"name":"Data","qualname":"::primitives::NameType::Data","value":"NameType::Data","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2735},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232862,"byte_end":232869,"line_start":304,"line_end":304,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::primitives::NameType::Unknown","value":"NameType::Unknown(u32)","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232731,"byte_end":232739,"line_start":293,"line_end":293,"column_start":10,"column_end":18},"name":"NameType","qualname":"::primitives::NameType","value":"pub enum NameType {\n    Module,\n    Function,\n    Local,\n    Label,\n    Type,\n    Table,\n    Memory,\n    Global,\n    Element,\n    Data,\n    Unknown(u32),\n}","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":2719},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2725},{"krate":0,"index":2727},{"krate":0,"index":2729},{"krate":0,"index":2731},{"krate":0,"index":2733},{"krate":0,"index":2735}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232936,"byte_end":232948,"line_start":309,"line_end":309,"column_start":5,"column_end":17},"name":"StackPointer","qualname":"::primitives::LinkingType::StackPointer","value":"LinkingType::StackPointer(u32)","parent":{"krate":0,"index":2743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2743},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232918,"byte_end":232929,"line_start":308,"line_end":308,"column_start":10,"column_end":21},"name":"LinkingType","qualname":"::primitives::LinkingType","value":"pub enum LinkingType { StackPointer(u32), }","parent":null,"children":[{"krate":0,"index":2744}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233013,"byte_end":233029,"line_start":314,"line_end":314,"column_start":5,"column_end":21},"name":"FunctionIndexLEB","qualname":"::primitives::RelocType::FunctionIndexLEB","value":"RelocType::FunctionIndexLEB","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233035,"byte_end":233049,"line_start":315,"line_end":315,"column_start":5,"column_end":19},"name":"TableIndexSLEB","qualname":"::primitives::RelocType::TableIndexSLEB","value":"RelocType::TableIndexSLEB","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233055,"byte_end":233068,"line_start":316,"line_end":316,"column_start":5,"column_end":18},"name":"TableIndexI32","qualname":"::primitives::RelocType::TableIndexI32","value":"RelocType::TableIndexI32","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233074,"byte_end":233087,"line_start":317,"line_end":317,"column_start":5,"column_end":18},"name":"GlobalAddrLEB","qualname":"::primitives::RelocType::GlobalAddrLEB","value":"RelocType::GlobalAddrLEB","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233093,"byte_end":233107,"line_start":318,"line_end":318,"column_start":5,"column_end":19},"name":"GlobalAddrSLEB","qualname":"::primitives::RelocType::GlobalAddrSLEB","value":"RelocType::GlobalAddrSLEB","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233113,"byte_end":233126,"line_start":319,"line_end":319,"column_start":5,"column_end":18},"name":"GlobalAddrI32","qualname":"::primitives::RelocType::GlobalAddrI32","value":"RelocType::GlobalAddrI32","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233132,"byte_end":233144,"line_start":320,"line_end":320,"column_start":5,"column_end":17},"name":"TypeIndexLEB","qualname":"::primitives::RelocType::TypeIndexLEB","value":"RelocType::TypeIndexLEB","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233150,"byte_end":233164,"line_start":321,"line_end":321,"column_start":5,"column_end":19},"name":"GlobalIndexLEB","qualname":"::primitives::RelocType::GlobalIndexLEB","value":"RelocType::GlobalIndexLEB","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2752},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":232997,"byte_end":233006,"line_start":313,"line_end":313,"column_start":10,"column_end":19},"name":"RelocType","qualname":"::primitives::RelocType","value":"pub enum RelocType {\n    FunctionIndexLEB,\n    TableIndexSLEB,\n    TableIndexI32,\n    GlobalAddrLEB,\n    GlobalAddrSLEB,\n    GlobalAddrI32,\n    TypeIndexLEB,\n    GlobalIndexLEB,\n}","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765},{"krate":0,"index":2767}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233236,"byte_end":233243,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"BrTable","qualname":"::primitives::BrTable","value":"BrTable {  }","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778}],"decl_id":null,"docs":" A br_table entries representation.\n","sig":null,"attributes":[{"value":"/ A br_table entries representation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233169,"byte_end":233207,"line_start":324,"line_end":324,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233560,"byte_end":233566,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"name":"Ieee32","qualname":"::primitives::Ieee32","value":"","parent":null,"children":[],"decl_id":null,"docs":" An IEEE binary32 immediate floating point value, represented as a u32\n containing the bitpattern.","sig":null,"attributes":[{"value":"/ An IEEE binary32 immediate floating point value, represented as a u32","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233355,"byte_end":233428,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/ containing the bitpattern.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233429,"byte_end":233459,"line_start":333,"line_end":333,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233460,"byte_end":233463,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ All bit patterns are allowed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233464,"byte_end":233497,"line_start":335,"line_end":335,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233610,"byte_end":233614,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"bits","qualname":"<Ieee32>::bits","value":"pub fn bits(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233859,"byte_end":233865,"line_start":350,"line_end":350,"column_start":12,"column_end":18},"name":"Ieee64","qualname":"::primitives::Ieee64","value":"","parent":null,"children":[],"decl_id":null,"docs":" An IEEE binary64 immediate floating point value, represented as a u64\n containing the bitpattern.","sig":null,"attributes":[{"value":"/ An IEEE binary64 immediate floating point value, represented as a u64","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233654,"byte_end":233727,"line_start":345,"line_end":345,"column_start":1,"column_end":74}},{"value":"/ containing the bitpattern.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233728,"byte_end":233758,"line_start":346,"line_end":346,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233759,"byte_end":233762,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"/ All bit patterns are allowed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233763,"byte_end":233796,"line_start":348,"line_end":348,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233909,"byte_end":233913,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"bits","qualname":"<Ieee64>::bits","value":"pub fn bits(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234015,"byte_end":234019,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"name":"V128","qualname":"::primitives::V128","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234066,"byte_end":234071,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"bytes","qualname":"<V128>::bytes","value":"pub fn bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":697},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234128,"byte_end":234141,"line_start":367,"line_end":367,"column_start":10,"column_end":23},"name":"SIMDLaneIndex","qualname":"::primitives::SIMDLaneIndex","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2841},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234318,"byte_end":234329,"line_start":374,"line_end":374,"column_start":5,"column_end":16},"name":"Unreachable","qualname":"::primitives::Operator::Unreachable","value":"Operator::Unreachable","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2843},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234335,"byte_end":234338,"line_start":375,"line_end":375,"column_start":5,"column_end":8},"name":"Nop","qualname":"::primitives::Operator::Nop","value":"Operator::Nop","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2845},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234344,"byte_end":234349,"line_start":376,"line_end":376,"column_start":5,"column_end":10},"name":"Block","qualname":"::primitives::Operator::Block","value":"Operator::Block { ty }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234391,"byte_end":234395,"line_start":379,"line_end":379,"column_start":5,"column_end":9},"name":"Loop","qualname":"::primitives::Operator::Loop","value":"Operator::Loop { ty }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234437,"byte_end":234439,"line_start":382,"line_end":382,"column_start":5,"column_end":7},"name":"If","qualname":"::primitives::Operator::If","value":"Operator::If { ty }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234481,"byte_end":234485,"line_start":385,"line_end":385,"column_start":5,"column_end":9},"name":"Else","qualname":"::primitives::Operator::Else","value":"Operator::Else","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2853},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234491,"byte_end":234494,"line_start":386,"line_end":386,"column_start":5,"column_end":8},"name":"Try","qualname":"::primitives::Operator::Try","value":"Operator::Try { ty }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2855},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234536,"byte_end":234541,"line_start":389,"line_end":389,"column_start":5,"column_end":10},"name":"Catch","qualname":"::primitives::Operator::Catch","value":"Operator::Catch { index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234575,"byte_end":234580,"line_start":392,"line_end":392,"column_start":5,"column_end":10},"name":"Throw","qualname":"::primitives::Operator::Throw","value":"Operator::Throw { index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2859},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234614,"byte_end":234621,"line_start":395,"line_end":395,"column_start":5,"column_end":12},"name":"Rethrow","qualname":"::primitives::Operator::Rethrow","value":"Operator::Rethrow { relative_depth }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234664,"byte_end":234667,"line_start":398,"line_end":398,"column_start":5,"column_end":8},"name":"End","qualname":"::primitives::Operator::End","value":"Operator::End","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234673,"byte_end":234675,"line_start":399,"line_end":399,"column_start":5,"column_end":7},"name":"Br","qualname":"::primitives::Operator::Br","value":"Operator::Br { relative_depth }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234718,"byte_end":234722,"line_start":402,"line_end":402,"column_start":5,"column_end":9},"name":"BrIf","qualname":"::primitives::Operator::BrIf","value":"Operator::BrIf { relative_depth }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234765,"byte_end":234772,"line_start":405,"line_end":405,"column_start":5,"column_end":12},"name":"BrTable","qualname":"::primitives::Operator::BrTable","value":"Operator::BrTable { table }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234814,"byte_end":234820,"line_start":408,"line_end":408,"column_start":5,"column_end":11},"name":"Return","qualname":"::primitives::Operator::Return","value":"Operator::Return","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234826,"byte_end":234830,"line_start":409,"line_end":409,"column_start":5,"column_end":9},"name":"Call","qualname":"::primitives::Operator::Call","value":"Operator::Call { function_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2873},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234873,"byte_end":234885,"line_start":412,"line_end":412,"column_start":5,"column_end":17},"name":"CallIndirect","qualname":"::primitives::Operator::CallIndirect","value":"Operator::CallIndirect { index, table_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2876},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234945,"byte_end":234955,"line_start":416,"line_end":416,"column_start":5,"column_end":15},"name":"ReturnCall","qualname":"::primitives::Operator::ReturnCall","value":"Operator::ReturnCall { function_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2878},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234998,"byte_end":235016,"line_start":419,"line_end":419,"column_start":5,"column_end":23},"name":"ReturnCallIndirect","qualname":"::primitives::Operator::ReturnCallIndirect","value":"Operator::ReturnCallIndirect { index, table_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2881},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235076,"byte_end":235084,"line_start":423,"line_end":423,"column_start":5,"column_end":13},"name":"Delegate","qualname":"::primitives::Operator::Delegate","value":"Operator::Delegate { relative_depth }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235127,"byte_end":235135,"line_start":426,"line_end":426,"column_start":5,"column_end":13},"name":"CatchAll","qualname":"::primitives::Operator::CatchAll","value":"Operator::CatchAll","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2885},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235141,"byte_end":235145,"line_start":427,"line_end":427,"column_start":5,"column_end":9},"name":"Drop","qualname":"::primitives::Operator::Drop","value":"Operator::Drop","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235151,"byte_end":235157,"line_start":428,"line_end":428,"column_start":5,"column_end":11},"name":"Select","qualname":"::primitives::Operator::Select","value":"Operator::Select","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235163,"byte_end":235174,"line_start":429,"line_end":429,"column_start":5,"column_end":16},"name":"TypedSelect","qualname":"::primitives::Operator::TypedSelect","value":"Operator::TypedSelect { ty }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2891},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235206,"byte_end":235214,"line_start":432,"line_end":432,"column_start":5,"column_end":13},"name":"LocalGet","qualname":"::primitives::Operator::LocalGet","value":"Operator::LocalGet { local_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235254,"byte_end":235262,"line_start":435,"line_end":435,"column_start":5,"column_end":13},"name":"LocalSet","qualname":"::primitives::Operator::LocalSet","value":"Operator::LocalSet { local_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235302,"byte_end":235310,"line_start":438,"line_end":438,"column_start":5,"column_end":13},"name":"LocalTee","qualname":"::primitives::Operator::LocalTee","value":"Operator::LocalTee { local_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2897},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235350,"byte_end":235359,"line_start":441,"line_end":441,"column_start":5,"column_end":14},"name":"GlobalGet","qualname":"::primitives::Operator::GlobalGet","value":"Operator::GlobalGet { global_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2899},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235400,"byte_end":235409,"line_start":444,"line_end":444,"column_start":5,"column_end":14},"name":"GlobalSet","qualname":"::primitives::Operator::GlobalSet","value":"Operator::GlobalSet { global_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2901},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235450,"byte_end":235457,"line_start":447,"line_end":447,"column_start":5,"column_end":12},"name":"I32Load","qualname":"::primitives::Operator::I32Load","value":"Operator::I32Load { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2903},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235504,"byte_end":235511,"line_start":450,"line_end":450,"column_start":5,"column_end":12},"name":"I64Load","qualname":"::primitives::Operator::I64Load","value":"Operator::I64Load { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235558,"byte_end":235565,"line_start":453,"line_end":453,"column_start":5,"column_end":12},"name":"F32Load","qualname":"::primitives::Operator::F32Load","value":"Operator::F32Load { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2907},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235612,"byte_end":235619,"line_start":456,"line_end":456,"column_start":5,"column_end":12},"name":"F64Load","qualname":"::primitives::Operator::F64Load","value":"Operator::F64Load { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235666,"byte_end":235675,"line_start":459,"line_end":459,"column_start":5,"column_end":14},"name":"I32Load8S","qualname":"::primitives::Operator::I32Load8S","value":"Operator::I32Load8S { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2911},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235722,"byte_end":235731,"line_start":462,"line_end":462,"column_start":5,"column_end":14},"name":"I32Load8U","qualname":"::primitives::Operator::I32Load8U","value":"Operator::I32Load8U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235778,"byte_end":235788,"line_start":465,"line_end":465,"column_start":5,"column_end":15},"name":"I32Load16S","qualname":"::primitives::Operator::I32Load16S","value":"Operator::I32Load16S { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235835,"byte_end":235845,"line_start":468,"line_end":468,"column_start":5,"column_end":15},"name":"I32Load16U","qualname":"::primitives::Operator::I32Load16U","value":"Operator::I32Load16U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235892,"byte_end":235901,"line_start":471,"line_end":471,"column_start":5,"column_end":14},"name":"I64Load8S","qualname":"::primitives::Operator::I64Load8S","value":"Operator::I64Load8S { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":235948,"byte_end":235957,"line_start":474,"line_end":474,"column_start":5,"column_end":14},"name":"I64Load8U","qualname":"::primitives::Operator::I64Load8U","value":"Operator::I64Load8U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236004,"byte_end":236014,"line_start":477,"line_end":477,"column_start":5,"column_end":15},"name":"I64Load16S","qualname":"::primitives::Operator::I64Load16S","value":"Operator::I64Load16S { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2923},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236061,"byte_end":236071,"line_start":480,"line_end":480,"column_start":5,"column_end":15},"name":"I64Load16U","qualname":"::primitives::Operator::I64Load16U","value":"Operator::I64Load16U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236118,"byte_end":236128,"line_start":483,"line_end":483,"column_start":5,"column_end":15},"name":"I64Load32S","qualname":"::primitives::Operator::I64Load32S","value":"Operator::I64Load32S { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2927},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236175,"byte_end":236185,"line_start":486,"line_end":486,"column_start":5,"column_end":15},"name":"I64Load32U","qualname":"::primitives::Operator::I64Load32U","value":"Operator::I64Load32U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236232,"byte_end":236240,"line_start":489,"line_end":489,"column_start":5,"column_end":13},"name":"I32Store","qualname":"::primitives::Operator::I32Store","value":"Operator::I32Store { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236287,"byte_end":236295,"line_start":492,"line_end":492,"column_start":5,"column_end":13},"name":"I64Store","qualname":"::primitives::Operator::I64Store","value":"Operator::I64Store { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236342,"byte_end":236350,"line_start":495,"line_end":495,"column_start":5,"column_end":13},"name":"F32Store","qualname":"::primitives::Operator::F32Store","value":"Operator::F32Store { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2935},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236397,"byte_end":236405,"line_start":498,"line_end":498,"column_start":5,"column_end":13},"name":"F64Store","qualname":"::primitives::Operator::F64Store","value":"Operator::F64Store { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236452,"byte_end":236461,"line_start":501,"line_end":501,"column_start":5,"column_end":14},"name":"I32Store8","qualname":"::primitives::Operator::I32Store8","value":"Operator::I32Store8 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2939},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236508,"byte_end":236518,"line_start":504,"line_end":504,"column_start":5,"column_end":15},"name":"I32Store16","qualname":"::primitives::Operator::I32Store16","value":"Operator::I32Store16 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236565,"byte_end":236574,"line_start":507,"line_end":507,"column_start":5,"column_end":14},"name":"I64Store8","qualname":"::primitives::Operator::I64Store8","value":"Operator::I64Store8 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236621,"byte_end":236631,"line_start":510,"line_end":510,"column_start":5,"column_end":15},"name":"I64Store16","qualname":"::primitives::Operator::I64Store16","value":"Operator::I64Store16 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236678,"byte_end":236688,"line_start":513,"line_end":513,"column_start":5,"column_end":15},"name":"I64Store32","qualname":"::primitives::Operator::I64Store32","value":"Operator::I64Store32 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236735,"byte_end":236745,"line_start":516,"line_end":516,"column_start":5,"column_end":15},"name":"MemorySize","qualname":"::primitives::Operator::MemorySize","value":"Operator::MemorySize { mem, mem_byte }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236799,"byte_end":236809,"line_start":520,"line_end":520,"column_start":5,"column_end":15},"name":"MemoryGrow","qualname":"::primitives::Operator::MemoryGrow","value":"Operator::MemoryGrow { mem, mem_byte }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2953},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236863,"byte_end":236871,"line_start":524,"line_end":524,"column_start":5,"column_end":13},"name":"I32Const","qualname":"::primitives::Operator::I32Const","value":"Operator::I32Const { value }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2955},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236905,"byte_end":236913,"line_start":527,"line_end":527,"column_start":5,"column_end":13},"name":"I64Const","qualname":"::primitives::Operator::I64Const","value":"Operator::I64Const { value }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236947,"byte_end":236955,"line_start":530,"line_end":530,"column_start":5,"column_end":13},"name":"F32Const","qualname":"::primitives::Operator::F32Const","value":"Operator::F32Const { value }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":236992,"byte_end":237000,"line_start":533,"line_end":533,"column_start":5,"column_end":13},"name":"F64Const","qualname":"::primitives::Operator::F64Const","value":"Operator::F64Const { value }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2961},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237037,"byte_end":237044,"line_start":536,"line_end":536,"column_start":5,"column_end":12},"name":"RefNull","qualname":"::primitives::Operator::RefNull","value":"Operator::RefNull { ty }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2963},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237076,"byte_end":237085,"line_start":539,"line_end":539,"column_start":5,"column_end":14},"name":"RefIsNull","qualname":"::primitives::Operator::RefIsNull","value":"Operator::RefIsNull","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2965},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237091,"byte_end":237098,"line_start":540,"line_end":540,"column_start":5,"column_end":12},"name":"RefFunc","qualname":"::primitives::Operator::RefFunc","value":"Operator::RefFunc { function_index }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2967},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237141,"byte_end":237147,"line_start":543,"line_end":543,"column_start":5,"column_end":11},"name":"I32Eqz","qualname":"::primitives::Operator::I32Eqz","value":"Operator::I32Eqz","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2969},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237153,"byte_end":237158,"line_start":544,"line_end":544,"column_start":5,"column_end":10},"name":"I32Eq","qualname":"::primitives::Operator::I32Eq","value":"Operator::I32Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2971},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237164,"byte_end":237169,"line_start":545,"line_end":545,"column_start":5,"column_end":10},"name":"I32Ne","qualname":"::primitives::Operator::I32Ne","value":"Operator::I32Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2973},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237175,"byte_end":237181,"line_start":546,"line_end":546,"column_start":5,"column_end":11},"name":"I32LtS","qualname":"::primitives::Operator::I32LtS","value":"Operator::I32LtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2975},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237187,"byte_end":237193,"line_start":547,"line_end":547,"column_start":5,"column_end":11},"name":"I32LtU","qualname":"::primitives::Operator::I32LtU","value":"Operator::I32LtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2977},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237199,"byte_end":237205,"line_start":548,"line_end":548,"column_start":5,"column_end":11},"name":"I32GtS","qualname":"::primitives::Operator::I32GtS","value":"Operator::I32GtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2979},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237211,"byte_end":237217,"line_start":549,"line_end":549,"column_start":5,"column_end":11},"name":"I32GtU","qualname":"::primitives::Operator::I32GtU","value":"Operator::I32GtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2981},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237223,"byte_end":237229,"line_start":550,"line_end":550,"column_start":5,"column_end":11},"name":"I32LeS","qualname":"::primitives::Operator::I32LeS","value":"Operator::I32LeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237235,"byte_end":237241,"line_start":551,"line_end":551,"column_start":5,"column_end":11},"name":"I32LeU","qualname":"::primitives::Operator::I32LeU","value":"Operator::I32LeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237247,"byte_end":237253,"line_start":552,"line_end":552,"column_start":5,"column_end":11},"name":"I32GeS","qualname":"::primitives::Operator::I32GeS","value":"Operator::I32GeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2987},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237259,"byte_end":237265,"line_start":553,"line_end":553,"column_start":5,"column_end":11},"name":"I32GeU","qualname":"::primitives::Operator::I32GeU","value":"Operator::I32GeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237271,"byte_end":237277,"line_start":554,"line_end":554,"column_start":5,"column_end":11},"name":"I64Eqz","qualname":"::primitives::Operator::I64Eqz","value":"Operator::I64Eqz","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2991},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237283,"byte_end":237288,"line_start":555,"line_end":555,"column_start":5,"column_end":10},"name":"I64Eq","qualname":"::primitives::Operator::I64Eq","value":"Operator::I64Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237294,"byte_end":237299,"line_start":556,"line_end":556,"column_start":5,"column_end":10},"name":"I64Ne","qualname":"::primitives::Operator::I64Ne","value":"Operator::I64Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237305,"byte_end":237311,"line_start":557,"line_end":557,"column_start":5,"column_end":11},"name":"I64LtS","qualname":"::primitives::Operator::I64LtS","value":"Operator::I64LtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237317,"byte_end":237323,"line_start":558,"line_end":558,"column_start":5,"column_end":11},"name":"I64LtU","qualname":"::primitives::Operator::I64LtU","value":"Operator::I64LtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237329,"byte_end":237335,"line_start":559,"line_end":559,"column_start":5,"column_end":11},"name":"I64GtS","qualname":"::primitives::Operator::I64GtS","value":"Operator::I64GtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3001},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237341,"byte_end":237347,"line_start":560,"line_end":560,"column_start":5,"column_end":11},"name":"I64GtU","qualname":"::primitives::Operator::I64GtU","value":"Operator::I64GtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237353,"byte_end":237359,"line_start":561,"line_end":561,"column_start":5,"column_end":11},"name":"I64LeS","qualname":"::primitives::Operator::I64LeS","value":"Operator::I64LeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237365,"byte_end":237371,"line_start":562,"line_end":562,"column_start":5,"column_end":11},"name":"I64LeU","qualname":"::primitives::Operator::I64LeU","value":"Operator::I64LeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237377,"byte_end":237383,"line_start":563,"line_end":563,"column_start":5,"column_end":11},"name":"I64GeS","qualname":"::primitives::Operator::I64GeS","value":"Operator::I64GeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3009},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237389,"byte_end":237395,"line_start":564,"line_end":564,"column_start":5,"column_end":11},"name":"I64GeU","qualname":"::primitives::Operator::I64GeU","value":"Operator::I64GeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237401,"byte_end":237406,"line_start":565,"line_end":565,"column_start":5,"column_end":10},"name":"F32Eq","qualname":"::primitives::Operator::F32Eq","value":"Operator::F32Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237412,"byte_end":237417,"line_start":566,"line_end":566,"column_start":5,"column_end":10},"name":"F32Ne","qualname":"::primitives::Operator::F32Ne","value":"Operator::F32Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237423,"byte_end":237428,"line_start":567,"line_end":567,"column_start":5,"column_end":10},"name":"F32Lt","qualname":"::primitives::Operator::F32Lt","value":"Operator::F32Lt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237434,"byte_end":237439,"line_start":568,"line_end":568,"column_start":5,"column_end":10},"name":"F32Gt","qualname":"::primitives::Operator::F32Gt","value":"Operator::F32Gt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237445,"byte_end":237450,"line_start":569,"line_end":569,"column_start":5,"column_end":10},"name":"F32Le","qualname":"::primitives::Operator::F32Le","value":"Operator::F32Le","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3021},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237456,"byte_end":237461,"line_start":570,"line_end":570,"column_start":5,"column_end":10},"name":"F32Ge","qualname":"::primitives::Operator::F32Ge","value":"Operator::F32Ge","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3023},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237467,"byte_end":237472,"line_start":571,"line_end":571,"column_start":5,"column_end":10},"name":"F64Eq","qualname":"::primitives::Operator::F64Eq","value":"Operator::F64Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3025},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237478,"byte_end":237483,"line_start":572,"line_end":572,"column_start":5,"column_end":10},"name":"F64Ne","qualname":"::primitives::Operator::F64Ne","value":"Operator::F64Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237489,"byte_end":237494,"line_start":573,"line_end":573,"column_start":5,"column_end":10},"name":"F64Lt","qualname":"::primitives::Operator::F64Lt","value":"Operator::F64Lt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237500,"byte_end":237505,"line_start":574,"line_end":574,"column_start":5,"column_end":10},"name":"F64Gt","qualname":"::primitives::Operator::F64Gt","value":"Operator::F64Gt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237511,"byte_end":237516,"line_start":575,"line_end":575,"column_start":5,"column_end":10},"name":"F64Le","qualname":"::primitives::Operator::F64Le","value":"Operator::F64Le","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237522,"byte_end":237527,"line_start":576,"line_end":576,"column_start":5,"column_end":10},"name":"F64Ge","qualname":"::primitives::Operator::F64Ge","value":"Operator::F64Ge","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237533,"byte_end":237539,"line_start":577,"line_end":577,"column_start":5,"column_end":11},"name":"I32Clz","qualname":"::primitives::Operator::I32Clz","value":"Operator::I32Clz","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3037},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237545,"byte_end":237551,"line_start":578,"line_end":578,"column_start":5,"column_end":11},"name":"I32Ctz","qualname":"::primitives::Operator::I32Ctz","value":"Operator::I32Ctz","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3039},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237557,"byte_end":237566,"line_start":579,"line_end":579,"column_start":5,"column_end":14},"name":"I32Popcnt","qualname":"::primitives::Operator::I32Popcnt","value":"Operator::I32Popcnt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237572,"byte_end":237578,"line_start":580,"line_end":580,"column_start":5,"column_end":11},"name":"I32Add","qualname":"::primitives::Operator::I32Add","value":"Operator::I32Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3043},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237584,"byte_end":237590,"line_start":581,"line_end":581,"column_start":5,"column_end":11},"name":"I32Sub","qualname":"::primitives::Operator::I32Sub","value":"Operator::I32Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3045},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237596,"byte_end":237602,"line_start":582,"line_end":582,"column_start":5,"column_end":11},"name":"I32Mul","qualname":"::primitives::Operator::I32Mul","value":"Operator::I32Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237608,"byte_end":237615,"line_start":583,"line_end":583,"column_start":5,"column_end":12},"name":"I32DivS","qualname":"::primitives::Operator::I32DivS","value":"Operator::I32DivS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237621,"byte_end":237628,"line_start":584,"line_end":584,"column_start":5,"column_end":12},"name":"I32DivU","qualname":"::primitives::Operator::I32DivU","value":"Operator::I32DivU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237634,"byte_end":237641,"line_start":585,"line_end":585,"column_start":5,"column_end":12},"name":"I32RemS","qualname":"::primitives::Operator::I32RemS","value":"Operator::I32RemS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237647,"byte_end":237654,"line_start":586,"line_end":586,"column_start":5,"column_end":12},"name":"I32RemU","qualname":"::primitives::Operator::I32RemU","value":"Operator::I32RemU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237660,"byte_end":237666,"line_start":587,"line_end":587,"column_start":5,"column_end":11},"name":"I32And","qualname":"::primitives::Operator::I32And","value":"Operator::I32And","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237672,"byte_end":237677,"line_start":588,"line_end":588,"column_start":5,"column_end":10},"name":"I32Or","qualname":"::primitives::Operator::I32Or","value":"Operator::I32Or","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237683,"byte_end":237689,"line_start":589,"line_end":589,"column_start":5,"column_end":11},"name":"I32Xor","qualname":"::primitives::Operator::I32Xor","value":"Operator::I32Xor","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237695,"byte_end":237701,"line_start":590,"line_end":590,"column_start":5,"column_end":11},"name":"I32Shl","qualname":"::primitives::Operator::I32Shl","value":"Operator::I32Shl","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3063},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237707,"byte_end":237714,"line_start":591,"line_end":591,"column_start":5,"column_end":12},"name":"I32ShrS","qualname":"::primitives::Operator::I32ShrS","value":"Operator::I32ShrS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237720,"byte_end":237727,"line_start":592,"line_end":592,"column_start":5,"column_end":12},"name":"I32ShrU","qualname":"::primitives::Operator::I32ShrU","value":"Operator::I32ShrU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237733,"byte_end":237740,"line_start":593,"line_end":593,"column_start":5,"column_end":12},"name":"I32Rotl","qualname":"::primitives::Operator::I32Rotl","value":"Operator::I32Rotl","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237746,"byte_end":237753,"line_start":594,"line_end":594,"column_start":5,"column_end":12},"name":"I32Rotr","qualname":"::primitives::Operator::I32Rotr","value":"Operator::I32Rotr","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237759,"byte_end":237765,"line_start":595,"line_end":595,"column_start":5,"column_end":11},"name":"I64Clz","qualname":"::primitives::Operator::I64Clz","value":"Operator::I64Clz","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237771,"byte_end":237777,"line_start":596,"line_end":596,"column_start":5,"column_end":11},"name":"I64Ctz","qualname":"::primitives::Operator::I64Ctz","value":"Operator::I64Ctz","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237783,"byte_end":237792,"line_start":597,"line_end":597,"column_start":5,"column_end":14},"name":"I64Popcnt","qualname":"::primitives::Operator::I64Popcnt","value":"Operator::I64Popcnt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237798,"byte_end":237804,"line_start":598,"line_end":598,"column_start":5,"column_end":11},"name":"I64Add","qualname":"::primitives::Operator::I64Add","value":"Operator::I64Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237810,"byte_end":237816,"line_start":599,"line_end":599,"column_start":5,"column_end":11},"name":"I64Sub","qualname":"::primitives::Operator::I64Sub","value":"Operator::I64Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237822,"byte_end":237828,"line_start":600,"line_end":600,"column_start":5,"column_end":11},"name":"I64Mul","qualname":"::primitives::Operator::I64Mul","value":"Operator::I64Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3083},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237834,"byte_end":237841,"line_start":601,"line_end":601,"column_start":5,"column_end":12},"name":"I64DivS","qualname":"::primitives::Operator::I64DivS","value":"Operator::I64DivS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237847,"byte_end":237854,"line_start":602,"line_end":602,"column_start":5,"column_end":12},"name":"I64DivU","qualname":"::primitives::Operator::I64DivU","value":"Operator::I64DivU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237860,"byte_end":237867,"line_start":603,"line_end":603,"column_start":5,"column_end":12},"name":"I64RemS","qualname":"::primitives::Operator::I64RemS","value":"Operator::I64RemS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3089},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237873,"byte_end":237880,"line_start":604,"line_end":604,"column_start":5,"column_end":12},"name":"I64RemU","qualname":"::primitives::Operator::I64RemU","value":"Operator::I64RemU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237886,"byte_end":237892,"line_start":605,"line_end":605,"column_start":5,"column_end":11},"name":"I64And","qualname":"::primitives::Operator::I64And","value":"Operator::I64And","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3093},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237898,"byte_end":237903,"line_start":606,"line_end":606,"column_start":5,"column_end":10},"name":"I64Or","qualname":"::primitives::Operator::I64Or","value":"Operator::I64Or","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237909,"byte_end":237915,"line_start":607,"line_end":607,"column_start":5,"column_end":11},"name":"I64Xor","qualname":"::primitives::Operator::I64Xor","value":"Operator::I64Xor","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237921,"byte_end":237927,"line_start":608,"line_end":608,"column_start":5,"column_end":11},"name":"I64Shl","qualname":"::primitives::Operator::I64Shl","value":"Operator::I64Shl","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237933,"byte_end":237940,"line_start":609,"line_end":609,"column_start":5,"column_end":12},"name":"I64ShrS","qualname":"::primitives::Operator::I64ShrS","value":"Operator::I64ShrS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3101},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237946,"byte_end":237953,"line_start":610,"line_end":610,"column_start":5,"column_end":12},"name":"I64ShrU","qualname":"::primitives::Operator::I64ShrU","value":"Operator::I64ShrU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237959,"byte_end":237966,"line_start":611,"line_end":611,"column_start":5,"column_end":12},"name":"I64Rotl","qualname":"::primitives::Operator::I64Rotl","value":"Operator::I64Rotl","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3105},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237972,"byte_end":237979,"line_start":612,"line_end":612,"column_start":5,"column_end":12},"name":"I64Rotr","qualname":"::primitives::Operator::I64Rotr","value":"Operator::I64Rotr","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3107},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237985,"byte_end":237991,"line_start":613,"line_end":613,"column_start":5,"column_end":11},"name":"F32Abs","qualname":"::primitives::Operator::F32Abs","value":"Operator::F32Abs","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":237997,"byte_end":238003,"line_start":614,"line_end":614,"column_start":5,"column_end":11},"name":"F32Neg","qualname":"::primitives::Operator::F32Neg","value":"Operator::F32Neg","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238009,"byte_end":238016,"line_start":615,"line_end":615,"column_start":5,"column_end":12},"name":"F32Ceil","qualname":"::primitives::Operator::F32Ceil","value":"Operator::F32Ceil","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238022,"byte_end":238030,"line_start":616,"line_end":616,"column_start":5,"column_end":13},"name":"F32Floor","qualname":"::primitives::Operator::F32Floor","value":"Operator::F32Floor","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238036,"byte_end":238044,"line_start":617,"line_end":617,"column_start":5,"column_end":13},"name":"F32Trunc","qualname":"::primitives::Operator::F32Trunc","value":"Operator::F32Trunc","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238050,"byte_end":238060,"line_start":618,"line_end":618,"column_start":5,"column_end":15},"name":"F32Nearest","qualname":"::primitives::Operator::F32Nearest","value":"Operator::F32Nearest","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3119},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238066,"byte_end":238073,"line_start":619,"line_end":619,"column_start":5,"column_end":12},"name":"F32Sqrt","qualname":"::primitives::Operator::F32Sqrt","value":"Operator::F32Sqrt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3121},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238079,"byte_end":238085,"line_start":620,"line_end":620,"column_start":5,"column_end":11},"name":"F32Add","qualname":"::primitives::Operator::F32Add","value":"Operator::F32Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238091,"byte_end":238097,"line_start":621,"line_end":621,"column_start":5,"column_end":11},"name":"F32Sub","qualname":"::primitives::Operator::F32Sub","value":"Operator::F32Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3125},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238103,"byte_end":238109,"line_start":622,"line_end":622,"column_start":5,"column_end":11},"name":"F32Mul","qualname":"::primitives::Operator::F32Mul","value":"Operator::F32Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238115,"byte_end":238121,"line_start":623,"line_end":623,"column_start":5,"column_end":11},"name":"F32Div","qualname":"::primitives::Operator::F32Div","value":"Operator::F32Div","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238127,"byte_end":238133,"line_start":624,"line_end":624,"column_start":5,"column_end":11},"name":"F32Min","qualname":"::primitives::Operator::F32Min","value":"Operator::F32Min","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238139,"byte_end":238145,"line_start":625,"line_end":625,"column_start":5,"column_end":11},"name":"F32Max","qualname":"::primitives::Operator::F32Max","value":"Operator::F32Max","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238151,"byte_end":238162,"line_start":626,"line_end":626,"column_start":5,"column_end":16},"name":"F32Copysign","qualname":"::primitives::Operator::F32Copysign","value":"Operator::F32Copysign","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238168,"byte_end":238174,"line_start":627,"line_end":627,"column_start":5,"column_end":11},"name":"F64Abs","qualname":"::primitives::Operator::F64Abs","value":"Operator::F64Abs","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3137},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238180,"byte_end":238186,"line_start":628,"line_end":628,"column_start":5,"column_end":11},"name":"F64Neg","qualname":"::primitives::Operator::F64Neg","value":"Operator::F64Neg","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238192,"byte_end":238199,"line_start":629,"line_end":629,"column_start":5,"column_end":12},"name":"F64Ceil","qualname":"::primitives::Operator::F64Ceil","value":"Operator::F64Ceil","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238205,"byte_end":238213,"line_start":630,"line_end":630,"column_start":5,"column_end":13},"name":"F64Floor","qualname":"::primitives::Operator::F64Floor","value":"Operator::F64Floor","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238219,"byte_end":238227,"line_start":631,"line_end":631,"column_start":5,"column_end":13},"name":"F64Trunc","qualname":"::primitives::Operator::F64Trunc","value":"Operator::F64Trunc","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3145},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238233,"byte_end":238243,"line_start":632,"line_end":632,"column_start":5,"column_end":15},"name":"F64Nearest","qualname":"::primitives::Operator::F64Nearest","value":"Operator::F64Nearest","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3147},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238249,"byte_end":238256,"line_start":633,"line_end":633,"column_start":5,"column_end":12},"name":"F64Sqrt","qualname":"::primitives::Operator::F64Sqrt","value":"Operator::F64Sqrt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3149},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238262,"byte_end":238268,"line_start":634,"line_end":634,"column_start":5,"column_end":11},"name":"F64Add","qualname":"::primitives::Operator::F64Add","value":"Operator::F64Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3151},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238274,"byte_end":238280,"line_start":635,"line_end":635,"column_start":5,"column_end":11},"name":"F64Sub","qualname":"::primitives::Operator::F64Sub","value":"Operator::F64Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238286,"byte_end":238292,"line_start":636,"line_end":636,"column_start":5,"column_end":11},"name":"F64Mul","qualname":"::primitives::Operator::F64Mul","value":"Operator::F64Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3155},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238298,"byte_end":238304,"line_start":637,"line_end":637,"column_start":5,"column_end":11},"name":"F64Div","qualname":"::primitives::Operator::F64Div","value":"Operator::F64Div","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238310,"byte_end":238316,"line_start":638,"line_end":638,"column_start":5,"column_end":11},"name":"F64Min","qualname":"::primitives::Operator::F64Min","value":"Operator::F64Min","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3159},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238322,"byte_end":238328,"line_start":639,"line_end":639,"column_start":5,"column_end":11},"name":"F64Max","qualname":"::primitives::Operator::F64Max","value":"Operator::F64Max","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238334,"byte_end":238345,"line_start":640,"line_end":640,"column_start":5,"column_end":16},"name":"F64Copysign","qualname":"::primitives::Operator::F64Copysign","value":"Operator::F64Copysign","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238351,"byte_end":238361,"line_start":641,"line_end":641,"column_start":5,"column_end":15},"name":"I32WrapI64","qualname":"::primitives::Operator::I32WrapI64","value":"Operator::I32WrapI64","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238367,"byte_end":238379,"line_start":642,"line_end":642,"column_start":5,"column_end":17},"name":"I32TruncF32S","qualname":"::primitives::Operator::I32TruncF32S","value":"Operator::I32TruncF32S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3167},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238385,"byte_end":238397,"line_start":643,"line_end":643,"column_start":5,"column_end":17},"name":"I32TruncF32U","qualname":"::primitives::Operator::I32TruncF32U","value":"Operator::I32TruncF32U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3169},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238403,"byte_end":238415,"line_start":644,"line_end":644,"column_start":5,"column_end":17},"name":"I32TruncF64S","qualname":"::primitives::Operator::I32TruncF64S","value":"Operator::I32TruncF64S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238421,"byte_end":238433,"line_start":645,"line_end":645,"column_start":5,"column_end":17},"name":"I32TruncF64U","qualname":"::primitives::Operator::I32TruncF64U","value":"Operator::I32TruncF64U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238439,"byte_end":238452,"line_start":646,"line_end":646,"column_start":5,"column_end":18},"name":"I64ExtendI32S","qualname":"::primitives::Operator::I64ExtendI32S","value":"Operator::I64ExtendI32S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238458,"byte_end":238471,"line_start":647,"line_end":647,"column_start":5,"column_end":18},"name":"I64ExtendI32U","qualname":"::primitives::Operator::I64ExtendI32U","value":"Operator::I64ExtendI32U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238477,"byte_end":238489,"line_start":648,"line_end":648,"column_start":5,"column_end":17},"name":"I64TruncF32S","qualname":"::primitives::Operator::I64TruncF32S","value":"Operator::I64TruncF32S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3179},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238495,"byte_end":238507,"line_start":649,"line_end":649,"column_start":5,"column_end":17},"name":"I64TruncF32U","qualname":"::primitives::Operator::I64TruncF32U","value":"Operator::I64TruncF32U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238513,"byte_end":238525,"line_start":650,"line_end":650,"column_start":5,"column_end":17},"name":"I64TruncF64S","qualname":"::primitives::Operator::I64TruncF64S","value":"Operator::I64TruncF64S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238531,"byte_end":238543,"line_start":651,"line_end":651,"column_start":5,"column_end":17},"name":"I64TruncF64U","qualname":"::primitives::Operator::I64TruncF64U","value":"Operator::I64TruncF64U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238549,"byte_end":238563,"line_start":652,"line_end":652,"column_start":5,"column_end":19},"name":"F32ConvertI32S","qualname":"::primitives::Operator::F32ConvertI32S","value":"Operator::F32ConvertI32S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238569,"byte_end":238583,"line_start":653,"line_end":653,"column_start":5,"column_end":19},"name":"F32ConvertI32U","qualname":"::primitives::Operator::F32ConvertI32U","value":"Operator::F32ConvertI32U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3189},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238589,"byte_end":238603,"line_start":654,"line_end":654,"column_start":5,"column_end":19},"name":"F32ConvertI64S","qualname":"::primitives::Operator::F32ConvertI64S","value":"Operator::F32ConvertI64S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3191},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238609,"byte_end":238623,"line_start":655,"line_end":655,"column_start":5,"column_end":19},"name":"F32ConvertI64U","qualname":"::primitives::Operator::F32ConvertI64U","value":"Operator::F32ConvertI64U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238629,"byte_end":238641,"line_start":656,"line_end":656,"column_start":5,"column_end":17},"name":"F32DemoteF64","qualname":"::primitives::Operator::F32DemoteF64","value":"Operator::F32DemoteF64","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238647,"byte_end":238661,"line_start":657,"line_end":657,"column_start":5,"column_end":19},"name":"F64ConvertI32S","qualname":"::primitives::Operator::F64ConvertI32S","value":"Operator::F64ConvertI32S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3197},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238667,"byte_end":238681,"line_start":658,"line_end":658,"column_start":5,"column_end":19},"name":"F64ConvertI32U","qualname":"::primitives::Operator::F64ConvertI32U","value":"Operator::F64ConvertI32U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3199},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238687,"byte_end":238701,"line_start":659,"line_end":659,"column_start":5,"column_end":19},"name":"F64ConvertI64S","qualname":"::primitives::Operator::F64ConvertI64S","value":"Operator::F64ConvertI64S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3201},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238707,"byte_end":238721,"line_start":660,"line_end":660,"column_start":5,"column_end":19},"name":"F64ConvertI64U","qualname":"::primitives::Operator::F64ConvertI64U","value":"Operator::F64ConvertI64U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238727,"byte_end":238740,"line_start":661,"line_end":661,"column_start":5,"column_end":18},"name":"F64PromoteF32","qualname":"::primitives::Operator::F64PromoteF32","value":"Operator::F64PromoteF32","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238746,"byte_end":238763,"line_start":662,"line_end":662,"column_start":5,"column_end":22},"name":"I32ReinterpretF32","qualname":"::primitives::Operator::I32ReinterpretF32","value":"Operator::I32ReinterpretF32","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238769,"byte_end":238786,"line_start":663,"line_end":663,"column_start":5,"column_end":22},"name":"I64ReinterpretF64","qualname":"::primitives::Operator::I64ReinterpretF64","value":"Operator::I64ReinterpretF64","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3209},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238792,"byte_end":238809,"line_start":664,"line_end":664,"column_start":5,"column_end":22},"name":"F32ReinterpretI32","qualname":"::primitives::Operator::F32ReinterpretI32","value":"Operator::F32ReinterpretI32","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238815,"byte_end":238832,"line_start":665,"line_end":665,"column_start":5,"column_end":22},"name":"F64ReinterpretI64","qualname":"::primitives::Operator::F64ReinterpretI64","value":"Operator::F64ReinterpretI64","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238838,"byte_end":238849,"line_start":666,"line_end":666,"column_start":5,"column_end":16},"name":"I32Extend8S","qualname":"::primitives::Operator::I32Extend8S","value":"Operator::I32Extend8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238855,"byte_end":238867,"line_start":667,"line_end":667,"column_start":5,"column_end":17},"name":"I32Extend16S","qualname":"::primitives::Operator::I32Extend16S","value":"Operator::I32Extend16S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238873,"byte_end":238884,"line_start":668,"line_end":668,"column_start":5,"column_end":16},"name":"I64Extend8S","qualname":"::primitives::Operator::I64Extend8S","value":"Operator::I64Extend8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3219},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238890,"byte_end":238902,"line_start":669,"line_end":669,"column_start":5,"column_end":17},"name":"I64Extend16S","qualname":"::primitives::Operator::I64Extend16S","value":"Operator::I64Extend16S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238908,"byte_end":238920,"line_start":670,"line_end":670,"column_start":5,"column_end":17},"name":"I64Extend32S","qualname":"::primitives::Operator::I64Extend32S","value":"Operator::I64Extend32S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":238994,"byte_end":239009,"line_start":674,"line_end":674,"column_start":5,"column_end":20},"name":"I32TruncSatF32S","qualname":"::primitives::Operator::I32TruncSatF32S","value":"Operator::I32TruncSatF32S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239015,"byte_end":239030,"line_start":675,"line_end":675,"column_start":5,"column_end":20},"name":"I32TruncSatF32U","qualname":"::primitives::Operator::I32TruncSatF32U","value":"Operator::I32TruncSatF32U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239036,"byte_end":239051,"line_start":676,"line_end":676,"column_start":5,"column_end":20},"name":"I32TruncSatF64S","qualname":"::primitives::Operator::I32TruncSatF64S","value":"Operator::I32TruncSatF64S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3229},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239057,"byte_end":239072,"line_start":677,"line_end":677,"column_start":5,"column_end":20},"name":"I32TruncSatF64U","qualname":"::primitives::Operator::I32TruncSatF64U","value":"Operator::I32TruncSatF64U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239078,"byte_end":239093,"line_start":678,"line_end":678,"column_start":5,"column_end":20},"name":"I64TruncSatF32S","qualname":"::primitives::Operator::I64TruncSatF32S","value":"Operator::I64TruncSatF32S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239099,"byte_end":239114,"line_start":679,"line_end":679,"column_start":5,"column_end":20},"name":"I64TruncSatF32U","qualname":"::primitives::Operator::I64TruncSatF32U","value":"Operator::I64TruncSatF32U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3235},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239120,"byte_end":239135,"line_start":680,"line_end":680,"column_start":5,"column_end":20},"name":"I64TruncSatF64S","qualname":"::primitives::Operator::I64TruncSatF64S","value":"Operator::I64TruncSatF64S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3237},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239141,"byte_end":239156,"line_start":681,"line_end":681,"column_start":5,"column_end":20},"name":"I64TruncSatF64U","qualname":"::primitives::Operator::I64TruncSatF64U","value":"Operator::I64TruncSatF64U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3239},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239315,"byte_end":239325,"line_start":685,"line_end":685,"column_start":5,"column_end":15},"name":"MemoryInit","qualname":"::primitives::Operator::MemoryInit","value":"Operator::MemoryInit { segment, mem }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3242},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239379,"byte_end":239387,"line_start":689,"line_end":689,"column_start":5,"column_end":13},"name":"DataDrop","qualname":"::primitives::Operator::DataDrop","value":"Operator::DataDrop { segment }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239423,"byte_end":239433,"line_start":692,"line_end":692,"column_start":5,"column_end":15},"name":"MemoryCopy","qualname":"::primitives::Operator::MemoryCopy","value":"Operator::MemoryCopy { src, dst }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239483,"byte_end":239493,"line_start":696,"line_end":696,"column_start":5,"column_end":15},"name":"MemoryFill","qualname":"::primitives::Operator::MemoryFill","value":"Operator::MemoryFill { mem }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239525,"byte_end":239534,"line_start":699,"line_end":699,"column_start":5,"column_end":14},"name":"TableInit","qualname":"::primitives::Operator::TableInit","value":"Operator::TableInit { segment, table }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3252},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239590,"byte_end":239598,"line_start":703,"line_end":703,"column_start":5,"column_end":13},"name":"ElemDrop","qualname":"::primitives::Operator::ElemDrop","value":"Operator::ElemDrop { segment }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3254},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239634,"byte_end":239643,"line_start":706,"line_end":706,"column_start":5,"column_end":14},"name":"TableCopy","qualname":"::primitives::Operator::TableCopy","value":"Operator::TableCopy { dst_table, src_table }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239705,"byte_end":239714,"line_start":710,"line_end":710,"column_start":5,"column_end":14},"name":"TableFill","qualname":"::primitives::Operator::TableFill","value":"Operator::TableFill { table }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239748,"byte_end":239756,"line_start":713,"line_end":713,"column_start":5,"column_end":13},"name":"TableGet","qualname":"::primitives::Operator::TableGet","value":"Operator::TableGet { table }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3261},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239790,"byte_end":239798,"line_start":716,"line_end":716,"column_start":5,"column_end":13},"name":"TableSet","qualname":"::primitives::Operator::TableSet","value":"Operator::TableSet { table }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3263},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239832,"byte_end":239841,"line_start":719,"line_end":719,"column_start":5,"column_end":14},"name":"TableGrow","qualname":"::primitives::Operator::TableGrow","value":"Operator::TableGrow { table }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":239875,"byte_end":239884,"line_start":722,"line_end":722,"column_start":5,"column_end":14},"name":"TableSize","qualname":"::primitives::Operator::TableSize","value":"Operator::TableSize { table }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240029,"byte_end":240047,"line_start":728,"line_end":728,"column_start":5,"column_end":23},"name":"MemoryAtomicNotify","qualname":"::primitives::Operator::MemoryAtomicNotify","value":"Operator::MemoryAtomicNotify { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240094,"byte_end":240112,"line_start":731,"line_end":731,"column_start":5,"column_end":23},"name":"MemoryAtomicWait32","qualname":"::primitives::Operator::MemoryAtomicWait32","value":"Operator::MemoryAtomicWait32 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3271},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240159,"byte_end":240177,"line_start":734,"line_end":734,"column_start":5,"column_end":23},"name":"MemoryAtomicWait64","qualname":"::primitives::Operator::MemoryAtomicWait64","value":"Operator::MemoryAtomicWait64 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240224,"byte_end":240235,"line_start":737,"line_end":737,"column_start":5,"column_end":16},"name":"AtomicFence","qualname":"::primitives::Operator::AtomicFence","value":"Operator::AtomicFence { flags }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240268,"byte_end":240281,"line_start":740,"line_end":740,"column_start":5,"column_end":18},"name":"I32AtomicLoad","qualname":"::primitives::Operator::I32AtomicLoad","value":"Operator::I32AtomicLoad { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240328,"byte_end":240341,"line_start":743,"line_end":743,"column_start":5,"column_end":18},"name":"I64AtomicLoad","qualname":"::primitives::Operator::I64AtomicLoad","value":"Operator::I64AtomicLoad { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3279},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240388,"byte_end":240403,"line_start":746,"line_end":746,"column_start":5,"column_end":20},"name":"I32AtomicLoad8U","qualname":"::primitives::Operator::I32AtomicLoad8U","value":"Operator::I32AtomicLoad8U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3281},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240450,"byte_end":240466,"line_start":749,"line_end":749,"column_start":5,"column_end":21},"name":"I32AtomicLoad16U","qualname":"::primitives::Operator::I32AtomicLoad16U","value":"Operator::I32AtomicLoad16U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3283},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240513,"byte_end":240528,"line_start":752,"line_end":752,"column_start":5,"column_end":20},"name":"I64AtomicLoad8U","qualname":"::primitives::Operator::I64AtomicLoad8U","value":"Operator::I64AtomicLoad8U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240575,"byte_end":240591,"line_start":755,"line_end":755,"column_start":5,"column_end":21},"name":"I64AtomicLoad16U","qualname":"::primitives::Operator::I64AtomicLoad16U","value":"Operator::I64AtomicLoad16U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3287},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240638,"byte_end":240654,"line_start":758,"line_end":758,"column_start":5,"column_end":21},"name":"I64AtomicLoad32U","qualname":"::primitives::Operator::I64AtomicLoad32U","value":"Operator::I64AtomicLoad32U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240701,"byte_end":240715,"line_start":761,"line_end":761,"column_start":5,"column_end":19},"name":"I32AtomicStore","qualname":"::primitives::Operator::I32AtomicStore","value":"Operator::I32AtomicStore { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240762,"byte_end":240776,"line_start":764,"line_end":764,"column_start":5,"column_end":19},"name":"I64AtomicStore","qualname":"::primitives::Operator::I64AtomicStore","value":"Operator::I64AtomicStore { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240823,"byte_end":240838,"line_start":767,"line_end":767,"column_start":5,"column_end":20},"name":"I32AtomicStore8","qualname":"::primitives::Operator::I32AtomicStore8","value":"Operator::I32AtomicStore8 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240885,"byte_end":240901,"line_start":770,"line_end":770,"column_start":5,"column_end":21},"name":"I32AtomicStore16","qualname":"::primitives::Operator::I32AtomicStore16","value":"Operator::I32AtomicStore16 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":240948,"byte_end":240963,"line_start":773,"line_end":773,"column_start":5,"column_end":20},"name":"I64AtomicStore8","qualname":"::primitives::Operator::I64AtomicStore8","value":"Operator::I64AtomicStore8 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241010,"byte_end":241026,"line_start":776,"line_end":776,"column_start":5,"column_end":21},"name":"I64AtomicStore16","qualname":"::primitives::Operator::I64AtomicStore16","value":"Operator::I64AtomicStore16 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3301},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241073,"byte_end":241089,"line_start":779,"line_end":779,"column_start":5,"column_end":21},"name":"I64AtomicStore32","qualname":"::primitives::Operator::I64AtomicStore32","value":"Operator::I64AtomicStore32 { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241136,"byte_end":241151,"line_start":782,"line_end":782,"column_start":5,"column_end":20},"name":"I32AtomicRmwAdd","qualname":"::primitives::Operator::I32AtomicRmwAdd","value":"Operator::I32AtomicRmwAdd { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3305},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241198,"byte_end":241213,"line_start":785,"line_end":785,"column_start":5,"column_end":20},"name":"I64AtomicRmwAdd","qualname":"::primitives::Operator::I64AtomicRmwAdd","value":"Operator::I64AtomicRmwAdd { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3307},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241260,"byte_end":241277,"line_start":788,"line_end":788,"column_start":5,"column_end":22},"name":"I32AtomicRmw8AddU","qualname":"::primitives::Operator::I32AtomicRmw8AddU","value":"Operator::I32AtomicRmw8AddU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241324,"byte_end":241342,"line_start":791,"line_end":791,"column_start":5,"column_end":23},"name":"I32AtomicRmw16AddU","qualname":"::primitives::Operator::I32AtomicRmw16AddU","value":"Operator::I32AtomicRmw16AddU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3311},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241389,"byte_end":241406,"line_start":794,"line_end":794,"column_start":5,"column_end":22},"name":"I64AtomicRmw8AddU","qualname":"::primitives::Operator::I64AtomicRmw8AddU","value":"Operator::I64AtomicRmw8AddU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3313},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241453,"byte_end":241471,"line_start":797,"line_end":797,"column_start":5,"column_end":23},"name":"I64AtomicRmw16AddU","qualname":"::primitives::Operator::I64AtomicRmw16AddU","value":"Operator::I64AtomicRmw16AddU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3315},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241518,"byte_end":241536,"line_start":800,"line_end":800,"column_start":5,"column_end":23},"name":"I64AtomicRmw32AddU","qualname":"::primitives::Operator::I64AtomicRmw32AddU","value":"Operator::I64AtomicRmw32AddU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3317},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241583,"byte_end":241598,"line_start":803,"line_end":803,"column_start":5,"column_end":20},"name":"I32AtomicRmwSub","qualname":"::primitives::Operator::I32AtomicRmwSub","value":"Operator::I32AtomicRmwSub { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3319},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241645,"byte_end":241660,"line_start":806,"line_end":806,"column_start":5,"column_end":20},"name":"I64AtomicRmwSub","qualname":"::primitives::Operator::I64AtomicRmwSub","value":"Operator::I64AtomicRmwSub { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3321},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241707,"byte_end":241724,"line_start":809,"line_end":809,"column_start":5,"column_end":22},"name":"I32AtomicRmw8SubU","qualname":"::primitives::Operator::I32AtomicRmw8SubU","value":"Operator::I32AtomicRmw8SubU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3323},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241771,"byte_end":241789,"line_start":812,"line_end":812,"column_start":5,"column_end":23},"name":"I32AtomicRmw16SubU","qualname":"::primitives::Operator::I32AtomicRmw16SubU","value":"Operator::I32AtomicRmw16SubU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3325},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241836,"byte_end":241853,"line_start":815,"line_end":815,"column_start":5,"column_end":22},"name":"I64AtomicRmw8SubU","qualname":"::primitives::Operator::I64AtomicRmw8SubU","value":"Operator::I64AtomicRmw8SubU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3327},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241900,"byte_end":241918,"line_start":818,"line_end":818,"column_start":5,"column_end":23},"name":"I64AtomicRmw16SubU","qualname":"::primitives::Operator::I64AtomicRmw16SubU","value":"Operator::I64AtomicRmw16SubU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3329},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":241965,"byte_end":241983,"line_start":821,"line_end":821,"column_start":5,"column_end":23},"name":"I64AtomicRmw32SubU","qualname":"::primitives::Operator::I64AtomicRmw32SubU","value":"Operator::I64AtomicRmw32SubU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3331},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242030,"byte_end":242045,"line_start":824,"line_end":824,"column_start":5,"column_end":20},"name":"I32AtomicRmwAnd","qualname":"::primitives::Operator::I32AtomicRmwAnd","value":"Operator::I32AtomicRmwAnd { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3333},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242092,"byte_end":242107,"line_start":827,"line_end":827,"column_start":5,"column_end":20},"name":"I64AtomicRmwAnd","qualname":"::primitives::Operator::I64AtomicRmwAnd","value":"Operator::I64AtomicRmwAnd { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3335},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242154,"byte_end":242171,"line_start":830,"line_end":830,"column_start":5,"column_end":22},"name":"I32AtomicRmw8AndU","qualname":"::primitives::Operator::I32AtomicRmw8AndU","value":"Operator::I32AtomicRmw8AndU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242218,"byte_end":242236,"line_start":833,"line_end":833,"column_start":5,"column_end":23},"name":"I32AtomicRmw16AndU","qualname":"::primitives::Operator::I32AtomicRmw16AndU","value":"Operator::I32AtomicRmw16AndU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242283,"byte_end":242300,"line_start":836,"line_end":836,"column_start":5,"column_end":22},"name":"I64AtomicRmw8AndU","qualname":"::primitives::Operator::I64AtomicRmw8AndU","value":"Operator::I64AtomicRmw8AndU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3341},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242347,"byte_end":242365,"line_start":839,"line_end":839,"column_start":5,"column_end":23},"name":"I64AtomicRmw16AndU","qualname":"::primitives::Operator::I64AtomicRmw16AndU","value":"Operator::I64AtomicRmw16AndU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3343},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242412,"byte_end":242430,"line_start":842,"line_end":842,"column_start":5,"column_end":23},"name":"I64AtomicRmw32AndU","qualname":"::primitives::Operator::I64AtomicRmw32AndU","value":"Operator::I64AtomicRmw32AndU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3345},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242477,"byte_end":242491,"line_start":845,"line_end":845,"column_start":5,"column_end":19},"name":"I32AtomicRmwOr","qualname":"::primitives::Operator::I32AtomicRmwOr","value":"Operator::I32AtomicRmwOr { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3347},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242538,"byte_end":242552,"line_start":848,"line_end":848,"column_start":5,"column_end":19},"name":"I64AtomicRmwOr","qualname":"::primitives::Operator::I64AtomicRmwOr","value":"Operator::I64AtomicRmwOr { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3349},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242599,"byte_end":242615,"line_start":851,"line_end":851,"column_start":5,"column_end":21},"name":"I32AtomicRmw8OrU","qualname":"::primitives::Operator::I32AtomicRmw8OrU","value":"Operator::I32AtomicRmw8OrU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3351},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242662,"byte_end":242679,"line_start":854,"line_end":854,"column_start":5,"column_end":22},"name":"I32AtomicRmw16OrU","qualname":"::primitives::Operator::I32AtomicRmw16OrU","value":"Operator::I32AtomicRmw16OrU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3353},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242726,"byte_end":242742,"line_start":857,"line_end":857,"column_start":5,"column_end":21},"name":"I64AtomicRmw8OrU","qualname":"::primitives::Operator::I64AtomicRmw8OrU","value":"Operator::I64AtomicRmw8OrU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3355},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242789,"byte_end":242806,"line_start":860,"line_end":860,"column_start":5,"column_end":22},"name":"I64AtomicRmw16OrU","qualname":"::primitives::Operator::I64AtomicRmw16OrU","value":"Operator::I64AtomicRmw16OrU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242853,"byte_end":242870,"line_start":863,"line_end":863,"column_start":5,"column_end":22},"name":"I64AtomicRmw32OrU","qualname":"::primitives::Operator::I64AtomicRmw32OrU","value":"Operator::I64AtomicRmw32OrU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3359},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242917,"byte_end":242932,"line_start":866,"line_end":866,"column_start":5,"column_end":20},"name":"I32AtomicRmwXor","qualname":"::primitives::Operator::I32AtomicRmwXor","value":"Operator::I32AtomicRmwXor { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":242979,"byte_end":242994,"line_start":869,"line_end":869,"column_start":5,"column_end":20},"name":"I64AtomicRmwXor","qualname":"::primitives::Operator::I64AtomicRmwXor","value":"Operator::I64AtomicRmwXor { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243041,"byte_end":243058,"line_start":872,"line_end":872,"column_start":5,"column_end":22},"name":"I32AtomicRmw8XorU","qualname":"::primitives::Operator::I32AtomicRmw8XorU","value":"Operator::I32AtomicRmw8XorU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243105,"byte_end":243123,"line_start":875,"line_end":875,"column_start":5,"column_end":23},"name":"I32AtomicRmw16XorU","qualname":"::primitives::Operator::I32AtomicRmw16XorU","value":"Operator::I32AtomicRmw16XorU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3367},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243170,"byte_end":243187,"line_start":878,"line_end":878,"column_start":5,"column_end":22},"name":"I64AtomicRmw8XorU","qualname":"::primitives::Operator::I64AtomicRmw8XorU","value":"Operator::I64AtomicRmw8XorU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3369},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243234,"byte_end":243252,"line_start":881,"line_end":881,"column_start":5,"column_end":23},"name":"I64AtomicRmw16XorU","qualname":"::primitives::Operator::I64AtomicRmw16XorU","value":"Operator::I64AtomicRmw16XorU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243299,"byte_end":243317,"line_start":884,"line_end":884,"column_start":5,"column_end":23},"name":"I64AtomicRmw32XorU","qualname":"::primitives::Operator::I64AtomicRmw32XorU","value":"Operator::I64AtomicRmw32XorU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3373},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243364,"byte_end":243380,"line_start":887,"line_end":887,"column_start":5,"column_end":21},"name":"I32AtomicRmwXchg","qualname":"::primitives::Operator::I32AtomicRmwXchg","value":"Operator::I32AtomicRmwXchg { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3375},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243427,"byte_end":243443,"line_start":890,"line_end":890,"column_start":5,"column_end":21},"name":"I64AtomicRmwXchg","qualname":"::primitives::Operator::I64AtomicRmwXchg","value":"Operator::I64AtomicRmwXchg { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3377},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243490,"byte_end":243508,"line_start":893,"line_end":893,"column_start":5,"column_end":23},"name":"I32AtomicRmw8XchgU","qualname":"::primitives::Operator::I32AtomicRmw8XchgU","value":"Operator::I32AtomicRmw8XchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243555,"byte_end":243574,"line_start":896,"line_end":896,"column_start":5,"column_end":24},"name":"I32AtomicRmw16XchgU","qualname":"::primitives::Operator::I32AtomicRmw16XchgU","value":"Operator::I32AtomicRmw16XchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3381},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243621,"byte_end":243639,"line_start":899,"line_end":899,"column_start":5,"column_end":23},"name":"I64AtomicRmw8XchgU","qualname":"::primitives::Operator::I64AtomicRmw8XchgU","value":"Operator::I64AtomicRmw8XchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3383},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243686,"byte_end":243705,"line_start":902,"line_end":902,"column_start":5,"column_end":24},"name":"I64AtomicRmw16XchgU","qualname":"::primitives::Operator::I64AtomicRmw16XchgU","value":"Operator::I64AtomicRmw16XchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3385},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243752,"byte_end":243771,"line_start":905,"line_end":905,"column_start":5,"column_end":24},"name":"I64AtomicRmw32XchgU","qualname":"::primitives::Operator::I64AtomicRmw32XchgU","value":"Operator::I64AtomicRmw32XchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3387},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243818,"byte_end":243837,"line_start":908,"line_end":908,"column_start":5,"column_end":24},"name":"I32AtomicRmwCmpxchg","qualname":"::primitives::Operator::I32AtomicRmwCmpxchg","value":"Operator::I32AtomicRmwCmpxchg { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243884,"byte_end":243903,"line_start":911,"line_end":911,"column_start":5,"column_end":24},"name":"I64AtomicRmwCmpxchg","qualname":"::primitives::Operator::I64AtomicRmwCmpxchg","value":"Operator::I64AtomicRmwCmpxchg { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":243950,"byte_end":243971,"line_start":914,"line_end":914,"column_start":5,"column_end":26},"name":"I32AtomicRmw8CmpxchgU","qualname":"::primitives::Operator::I32AtomicRmw8CmpxchgU","value":"Operator::I32AtomicRmw8CmpxchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244018,"byte_end":244040,"line_start":917,"line_end":917,"column_start":5,"column_end":27},"name":"I32AtomicRmw16CmpxchgU","qualname":"::primitives::Operator::I32AtomicRmw16CmpxchgU","value":"Operator::I32AtomicRmw16CmpxchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3395},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244087,"byte_end":244108,"line_start":920,"line_end":920,"column_start":5,"column_end":26},"name":"I64AtomicRmw8CmpxchgU","qualname":"::primitives::Operator::I64AtomicRmw8CmpxchgU","value":"Operator::I64AtomicRmw8CmpxchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3397},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244155,"byte_end":244177,"line_start":923,"line_end":923,"column_start":5,"column_end":27},"name":"I64AtomicRmw16CmpxchgU","qualname":"::primitives::Operator::I64AtomicRmw16CmpxchgU","value":"Operator::I64AtomicRmw16CmpxchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3399},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244224,"byte_end":244246,"line_start":926,"line_end":926,"column_start":5,"column_end":27},"name":"I64AtomicRmw32CmpxchgU","qualname":"::primitives::Operator::I64AtomicRmw32CmpxchgU","value":"Operator::I64AtomicRmw32CmpxchgU { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3401},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244393,"byte_end":244401,"line_start":932,"line_end":932,"column_start":5,"column_end":13},"name":"V128Load","qualname":"::primitives::Operator::V128Load","value":"Operator::V128Load { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3403},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244448,"byte_end":244460,"line_start":935,"line_end":935,"column_start":5,"column_end":17},"name":"V128Load8x8S","qualname":"::primitives::Operator::V128Load8x8S","value":"Operator::V128Load8x8S { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3405},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244507,"byte_end":244519,"line_start":938,"line_end":938,"column_start":5,"column_end":17},"name":"V128Load8x8U","qualname":"::primitives::Operator::V128Load8x8U","value":"Operator::V128Load8x8U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3407},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244566,"byte_end":244579,"line_start":941,"line_end":941,"column_start":5,"column_end":18},"name":"V128Load16x4S","qualname":"::primitives::Operator::V128Load16x4S","value":"Operator::V128Load16x4S { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3409},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244626,"byte_end":244639,"line_start":944,"line_end":944,"column_start":5,"column_end":18},"name":"V128Load16x4U","qualname":"::primitives::Operator::V128Load16x4U","value":"Operator::V128Load16x4U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3411},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244686,"byte_end":244699,"line_start":947,"line_end":947,"column_start":5,"column_end":18},"name":"V128Load32x2S","qualname":"::primitives::Operator::V128Load32x2S","value":"Operator::V128Load32x2S { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3413},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244746,"byte_end":244759,"line_start":950,"line_end":950,"column_start":5,"column_end":18},"name":"V128Load32x2U","qualname":"::primitives::Operator::V128Load32x2U","value":"Operator::V128Load32x2U { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244806,"byte_end":244820,"line_start":953,"line_end":953,"column_start":5,"column_end":19},"name":"V128Load8Splat","qualname":"::primitives::Operator::V128Load8Splat","value":"Operator::V128Load8Splat { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3417},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244867,"byte_end":244882,"line_start":956,"line_end":956,"column_start":5,"column_end":20},"name":"V128Load16Splat","qualname":"::primitives::Operator::V128Load16Splat","value":"Operator::V128Load16Splat { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3419},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244929,"byte_end":244944,"line_start":959,"line_end":959,"column_start":5,"column_end":20},"name":"V128Load32Splat","qualname":"::primitives::Operator::V128Load32Splat","value":"Operator::V128Load32Splat { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3421},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":244991,"byte_end":245006,"line_start":962,"line_end":962,"column_start":5,"column_end":20},"name":"V128Load64Splat","qualname":"::primitives::Operator::V128Load64Splat","value":"Operator::V128Load64Splat { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3423},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245053,"byte_end":245067,"line_start":965,"line_end":965,"column_start":5,"column_end":19},"name":"V128Load32Zero","qualname":"::primitives::Operator::V128Load32Zero","value":"Operator::V128Load32Zero { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245114,"byte_end":245128,"line_start":968,"line_end":968,"column_start":5,"column_end":19},"name":"V128Load64Zero","qualname":"::primitives::Operator::V128Load64Zero","value":"Operator::V128Load64Zero { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245175,"byte_end":245184,"line_start":971,"line_end":971,"column_start":5,"column_end":14},"name":"V128Store","qualname":"::primitives::Operator::V128Store","value":"Operator::V128Store { memarg }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3429},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245231,"byte_end":245244,"line_start":974,"line_end":974,"column_start":5,"column_end":18},"name":"V128Load8Lane","qualname":"::primitives::Operator::V128Load8Lane","value":"Operator::V128Load8Lane { memarg, lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3432},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245320,"byte_end":245334,"line_start":978,"line_end":978,"column_start":5,"column_end":19},"name":"V128Load16Lane","qualname":"::primitives::Operator::V128Load16Lane","value":"Operator::V128Load16Lane { memarg, lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245410,"byte_end":245424,"line_start":982,"line_end":982,"column_start":5,"column_end":19},"name":"V128Load32Lane","qualname":"::primitives::Operator::V128Load32Lane","value":"Operator::V128Load32Lane { memarg, lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245500,"byte_end":245514,"line_start":986,"line_end":986,"column_start":5,"column_end":19},"name":"V128Load64Lane","qualname":"::primitives::Operator::V128Load64Lane","value":"Operator::V128Load64Lane { memarg, lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245590,"byte_end":245604,"line_start":990,"line_end":990,"column_start":5,"column_end":19},"name":"V128Store8Lane","qualname":"::primitives::Operator::V128Store8Lane","value":"Operator::V128Store8Lane { memarg, lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3444},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245680,"byte_end":245695,"line_start":994,"line_end":994,"column_start":5,"column_end":20},"name":"V128Store16Lane","qualname":"::primitives::Operator::V128Store16Lane","value":"Operator::V128Store16Lane { memarg, lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3447},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245771,"byte_end":245786,"line_start":998,"line_end":998,"column_start":5,"column_end":20},"name":"V128Store32Lane","qualname":"::primitives::Operator::V128Store32Lane","value":"Operator::V128Store32Lane { memarg, lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3450},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245862,"byte_end":245877,"line_start":1002,"line_end":1002,"column_start":5,"column_end":20},"name":"V128Store64Lane","qualname":"::primitives::Operator::V128Store64Lane","value":"Operator::V128Store64Lane { memarg, lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3453},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245953,"byte_end":245962,"line_start":1006,"line_end":1006,"column_start":5,"column_end":14},"name":"V128Const","qualname":"::primitives::Operator::V128Const","value":"Operator::V128Const { value }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3455},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":245997,"byte_end":246009,"line_start":1009,"line_end":1009,"column_start":5,"column_end":17},"name":"I8x16Shuffle","qualname":"::primitives::Operator::I8x16Shuffle","value":"Operator::I8x16Shuffle { lanes }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3458},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246059,"byte_end":246076,"line_start":1012,"line_end":1012,"column_start":5,"column_end":22},"name":"I8x16ExtractLaneS","qualname":"::primitives::Operator::I8x16ExtractLaneS","value":"Operator::I8x16ExtractLaneS { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3460},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246119,"byte_end":246136,"line_start":1015,"line_end":1015,"column_start":5,"column_end":22},"name":"I8x16ExtractLaneU","qualname":"::primitives::Operator::I8x16ExtractLaneU","value":"Operator::I8x16ExtractLaneU { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3462},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246179,"byte_end":246195,"line_start":1018,"line_end":1018,"column_start":5,"column_end":21},"name":"I8x16ReplaceLane","qualname":"::primitives::Operator::I8x16ReplaceLane","value":"Operator::I8x16ReplaceLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3464},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246238,"byte_end":246255,"line_start":1021,"line_end":1021,"column_start":5,"column_end":22},"name":"I16x8ExtractLaneS","qualname":"::primitives::Operator::I16x8ExtractLaneS","value":"Operator::I16x8ExtractLaneS { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3466},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246298,"byte_end":246315,"line_start":1024,"line_end":1024,"column_start":5,"column_end":22},"name":"I16x8ExtractLaneU","qualname":"::primitives::Operator::I16x8ExtractLaneU","value":"Operator::I16x8ExtractLaneU { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3468},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246358,"byte_end":246374,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21},"name":"I16x8ReplaceLane","qualname":"::primitives::Operator::I16x8ReplaceLane","value":"Operator::I16x8ReplaceLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3470},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246417,"byte_end":246433,"line_start":1030,"line_end":1030,"column_start":5,"column_end":21},"name":"I32x4ExtractLane","qualname":"::primitives::Operator::I32x4ExtractLane","value":"Operator::I32x4ExtractLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246476,"byte_end":246492,"line_start":1033,"line_end":1033,"column_start":5,"column_end":21},"name":"I32x4ReplaceLane","qualname":"::primitives::Operator::I32x4ReplaceLane","value":"Operator::I32x4ReplaceLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3474},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246535,"byte_end":246551,"line_start":1036,"line_end":1036,"column_start":5,"column_end":21},"name":"I64x2ExtractLane","qualname":"::primitives::Operator::I64x2ExtractLane","value":"Operator::I64x2ExtractLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3476},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246594,"byte_end":246610,"line_start":1039,"line_end":1039,"column_start":5,"column_end":21},"name":"I64x2ReplaceLane","qualname":"::primitives::Operator::I64x2ReplaceLane","value":"Operator::I64x2ReplaceLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3478},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246653,"byte_end":246669,"line_start":1042,"line_end":1042,"column_start":5,"column_end":21},"name":"F32x4ExtractLane","qualname":"::primitives::Operator::F32x4ExtractLane","value":"Operator::F32x4ExtractLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3480},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246712,"byte_end":246728,"line_start":1045,"line_end":1045,"column_start":5,"column_end":21},"name":"F32x4ReplaceLane","qualname":"::primitives::Operator::F32x4ReplaceLane","value":"Operator::F32x4ReplaceLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3482},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246771,"byte_end":246787,"line_start":1048,"line_end":1048,"column_start":5,"column_end":21},"name":"F64x2ExtractLane","qualname":"::primitives::Operator::F64x2ExtractLane","value":"Operator::F64x2ExtractLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3484},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246830,"byte_end":246846,"line_start":1051,"line_end":1051,"column_start":5,"column_end":21},"name":"F64x2ReplaceLane","qualname":"::primitives::Operator::F64x2ReplaceLane","value":"Operator::F64x2ReplaceLane { lane }","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3486},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246889,"byte_end":246901,"line_start":1054,"line_end":1054,"column_start":5,"column_end":17},"name":"I8x16Swizzle","qualname":"::primitives::Operator::I8x16Swizzle","value":"Operator::I8x16Swizzle","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246907,"byte_end":246917,"line_start":1055,"line_end":1055,"column_start":5,"column_end":15},"name":"I8x16Splat","qualname":"::primitives::Operator::I8x16Splat","value":"Operator::I8x16Splat","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3490},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246923,"byte_end":246933,"line_start":1056,"line_end":1056,"column_start":5,"column_end":15},"name":"I16x8Splat","qualname":"::primitives::Operator::I16x8Splat","value":"Operator::I16x8Splat","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246939,"byte_end":246949,"line_start":1057,"line_end":1057,"column_start":5,"column_end":15},"name":"I32x4Splat","qualname":"::primitives::Operator::I32x4Splat","value":"Operator::I32x4Splat","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3494},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246955,"byte_end":246965,"line_start":1058,"line_end":1058,"column_start":5,"column_end":15},"name":"I64x2Splat","qualname":"::primitives::Operator::I64x2Splat","value":"Operator::I64x2Splat","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3496},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246971,"byte_end":246981,"line_start":1059,"line_end":1059,"column_start":5,"column_end":15},"name":"F32x4Splat","qualname":"::primitives::Operator::F32x4Splat","value":"Operator::F32x4Splat","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":246987,"byte_end":246997,"line_start":1060,"line_end":1060,"column_start":5,"column_end":15},"name":"F64x2Splat","qualname":"::primitives::Operator::F64x2Splat","value":"Operator::F64x2Splat","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247003,"byte_end":247010,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12},"name":"I8x16Eq","qualname":"::primitives::Operator::I8x16Eq","value":"Operator::I8x16Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3502},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247016,"byte_end":247023,"line_start":1062,"line_end":1062,"column_start":5,"column_end":12},"name":"I8x16Ne","qualname":"::primitives::Operator::I8x16Ne","value":"Operator::I8x16Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3504},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247029,"byte_end":247037,"line_start":1063,"line_end":1063,"column_start":5,"column_end":13},"name":"I8x16LtS","qualname":"::primitives::Operator::I8x16LtS","value":"Operator::I8x16LtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3506},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247043,"byte_end":247051,"line_start":1064,"line_end":1064,"column_start":5,"column_end":13},"name":"I8x16LtU","qualname":"::primitives::Operator::I8x16LtU","value":"Operator::I8x16LtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247057,"byte_end":247065,"line_start":1065,"line_end":1065,"column_start":5,"column_end":13},"name":"I8x16GtS","qualname":"::primitives::Operator::I8x16GtS","value":"Operator::I8x16GtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3510},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247071,"byte_end":247079,"line_start":1066,"line_end":1066,"column_start":5,"column_end":13},"name":"I8x16GtU","qualname":"::primitives::Operator::I8x16GtU","value":"Operator::I8x16GtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3512},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247085,"byte_end":247093,"line_start":1067,"line_end":1067,"column_start":5,"column_end":13},"name":"I8x16LeS","qualname":"::primitives::Operator::I8x16LeS","value":"Operator::I8x16LeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247099,"byte_end":247107,"line_start":1068,"line_end":1068,"column_start":5,"column_end":13},"name":"I8x16LeU","qualname":"::primitives::Operator::I8x16LeU","value":"Operator::I8x16LeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3516},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247113,"byte_end":247121,"line_start":1069,"line_end":1069,"column_start":5,"column_end":13},"name":"I8x16GeS","qualname":"::primitives::Operator::I8x16GeS","value":"Operator::I8x16GeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3518},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247127,"byte_end":247135,"line_start":1070,"line_end":1070,"column_start":5,"column_end":13},"name":"I8x16GeU","qualname":"::primitives::Operator::I8x16GeU","value":"Operator::I8x16GeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3520},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247141,"byte_end":247148,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12},"name":"I16x8Eq","qualname":"::primitives::Operator::I16x8Eq","value":"Operator::I16x8Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3522},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247154,"byte_end":247161,"line_start":1072,"line_end":1072,"column_start":5,"column_end":12},"name":"I16x8Ne","qualname":"::primitives::Operator::I16x8Ne","value":"Operator::I16x8Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3524},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247167,"byte_end":247175,"line_start":1073,"line_end":1073,"column_start":5,"column_end":13},"name":"I16x8LtS","qualname":"::primitives::Operator::I16x8LtS","value":"Operator::I16x8LtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3526},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247181,"byte_end":247189,"line_start":1074,"line_end":1074,"column_start":5,"column_end":13},"name":"I16x8LtU","qualname":"::primitives::Operator::I16x8LtU","value":"Operator::I16x8LtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3528},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247195,"byte_end":247203,"line_start":1075,"line_end":1075,"column_start":5,"column_end":13},"name":"I16x8GtS","qualname":"::primitives::Operator::I16x8GtS","value":"Operator::I16x8GtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3530},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247209,"byte_end":247217,"line_start":1076,"line_end":1076,"column_start":5,"column_end":13},"name":"I16x8GtU","qualname":"::primitives::Operator::I16x8GtU","value":"Operator::I16x8GtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3532},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247223,"byte_end":247231,"line_start":1077,"line_end":1077,"column_start":5,"column_end":13},"name":"I16x8LeS","qualname":"::primitives::Operator::I16x8LeS","value":"Operator::I16x8LeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3534},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247237,"byte_end":247245,"line_start":1078,"line_end":1078,"column_start":5,"column_end":13},"name":"I16x8LeU","qualname":"::primitives::Operator::I16x8LeU","value":"Operator::I16x8LeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3536},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247251,"byte_end":247259,"line_start":1079,"line_end":1079,"column_start":5,"column_end":13},"name":"I16x8GeS","qualname":"::primitives::Operator::I16x8GeS","value":"Operator::I16x8GeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247265,"byte_end":247273,"line_start":1080,"line_end":1080,"column_start":5,"column_end":13},"name":"I16x8GeU","qualname":"::primitives::Operator::I16x8GeU","value":"Operator::I16x8GeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247279,"byte_end":247286,"line_start":1081,"line_end":1081,"column_start":5,"column_end":12},"name":"I32x4Eq","qualname":"::primitives::Operator::I32x4Eq","value":"Operator::I32x4Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247292,"byte_end":247299,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12},"name":"I32x4Ne","qualname":"::primitives::Operator::I32x4Ne","value":"Operator::I32x4Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3544},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247305,"byte_end":247313,"line_start":1083,"line_end":1083,"column_start":5,"column_end":13},"name":"I32x4LtS","qualname":"::primitives::Operator::I32x4LtS","value":"Operator::I32x4LtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247319,"byte_end":247327,"line_start":1084,"line_end":1084,"column_start":5,"column_end":13},"name":"I32x4LtU","qualname":"::primitives::Operator::I32x4LtU","value":"Operator::I32x4LtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247333,"byte_end":247341,"line_start":1085,"line_end":1085,"column_start":5,"column_end":13},"name":"I32x4GtS","qualname":"::primitives::Operator::I32x4GtS","value":"Operator::I32x4GtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247347,"byte_end":247355,"line_start":1086,"line_end":1086,"column_start":5,"column_end":13},"name":"I32x4GtU","qualname":"::primitives::Operator::I32x4GtU","value":"Operator::I32x4GtU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247361,"byte_end":247369,"line_start":1087,"line_end":1087,"column_start":5,"column_end":13},"name":"I32x4LeS","qualname":"::primitives::Operator::I32x4LeS","value":"Operator::I32x4LeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3554},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247375,"byte_end":247383,"line_start":1088,"line_end":1088,"column_start":5,"column_end":13},"name":"I32x4LeU","qualname":"::primitives::Operator::I32x4LeU","value":"Operator::I32x4LeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247389,"byte_end":247397,"line_start":1089,"line_end":1089,"column_start":5,"column_end":13},"name":"I32x4GeS","qualname":"::primitives::Operator::I32x4GeS","value":"Operator::I32x4GeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3558},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247403,"byte_end":247411,"line_start":1090,"line_end":1090,"column_start":5,"column_end":13},"name":"I32x4GeU","qualname":"::primitives::Operator::I32x4GeU","value":"Operator::I32x4GeU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3560},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247417,"byte_end":247424,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12},"name":"I64x2Eq","qualname":"::primitives::Operator::I64x2Eq","value":"Operator::I64x2Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3562},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247430,"byte_end":247437,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12},"name":"I64x2Ne","qualname":"::primitives::Operator::I64x2Ne","value":"Operator::I64x2Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3564},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247443,"byte_end":247451,"line_start":1093,"line_end":1093,"column_start":5,"column_end":13},"name":"I64x2LtS","qualname":"::primitives::Operator::I64x2LtS","value":"Operator::I64x2LtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3566},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247457,"byte_end":247465,"line_start":1094,"line_end":1094,"column_start":5,"column_end":13},"name":"I64x2GtS","qualname":"::primitives::Operator::I64x2GtS","value":"Operator::I64x2GtS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247471,"byte_end":247479,"line_start":1095,"line_end":1095,"column_start":5,"column_end":13},"name":"I64x2LeS","qualname":"::primitives::Operator::I64x2LeS","value":"Operator::I64x2LeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247485,"byte_end":247493,"line_start":1096,"line_end":1096,"column_start":5,"column_end":13},"name":"I64x2GeS","qualname":"::primitives::Operator::I64x2GeS","value":"Operator::I64x2GeS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247499,"byte_end":247506,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12},"name":"F32x4Eq","qualname":"::primitives::Operator::F32x4Eq","value":"Operator::F32x4Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247512,"byte_end":247519,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12},"name":"F32x4Ne","qualname":"::primitives::Operator::F32x4Ne","value":"Operator::F32x4Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247525,"byte_end":247532,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12},"name":"F32x4Lt","qualname":"::primitives::Operator::F32x4Lt","value":"Operator::F32x4Lt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247538,"byte_end":247545,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12},"name":"F32x4Gt","qualname":"::primitives::Operator::F32x4Gt","value":"Operator::F32x4Gt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247551,"byte_end":247558,"line_start":1101,"line_end":1101,"column_start":5,"column_end":12},"name":"F32x4Le","qualname":"::primitives::Operator::F32x4Le","value":"Operator::F32x4Le","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247564,"byte_end":247571,"line_start":1102,"line_end":1102,"column_start":5,"column_end":12},"name":"F32x4Ge","qualname":"::primitives::Operator::F32x4Ge","value":"Operator::F32x4Ge","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247577,"byte_end":247584,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12},"name":"F64x2Eq","qualname":"::primitives::Operator::F64x2Eq","value":"Operator::F64x2Eq","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247590,"byte_end":247597,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12},"name":"F64x2Ne","qualname":"::primitives::Operator::F64x2Ne","value":"Operator::F64x2Ne","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3588},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247603,"byte_end":247610,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12},"name":"F64x2Lt","qualname":"::primitives::Operator::F64x2Lt","value":"Operator::F64x2Lt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3590},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247616,"byte_end":247623,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12},"name":"F64x2Gt","qualname":"::primitives::Operator::F64x2Gt","value":"Operator::F64x2Gt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3592},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247629,"byte_end":247636,"line_start":1107,"line_end":1107,"column_start":5,"column_end":12},"name":"F64x2Le","qualname":"::primitives::Operator::F64x2Le","value":"Operator::F64x2Le","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247642,"byte_end":247649,"line_start":1108,"line_end":1108,"column_start":5,"column_end":12},"name":"F64x2Ge","qualname":"::primitives::Operator::F64x2Ge","value":"Operator::F64x2Ge","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3596},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247655,"byte_end":247662,"line_start":1109,"line_end":1109,"column_start":5,"column_end":12},"name":"V128Not","qualname":"::primitives::Operator::V128Not","value":"Operator::V128Not","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3598},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247668,"byte_end":247675,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12},"name":"V128And","qualname":"::primitives::Operator::V128And","value":"Operator::V128And","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3600},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247681,"byte_end":247691,"line_start":1111,"line_end":1111,"column_start":5,"column_end":15},"name":"V128AndNot","qualname":"::primitives::Operator::V128AndNot","value":"Operator::V128AndNot","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3602},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247697,"byte_end":247703,"line_start":1112,"line_end":1112,"column_start":5,"column_end":11},"name":"V128Or","qualname":"::primitives::Operator::V128Or","value":"Operator::V128Or","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3604},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247709,"byte_end":247716,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12},"name":"V128Xor","qualname":"::primitives::Operator::V128Xor","value":"Operator::V128Xor","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3606},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247722,"byte_end":247735,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18},"name":"V128Bitselect","qualname":"::primitives::Operator::V128Bitselect","value":"Operator::V128Bitselect","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3608},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247741,"byte_end":247752,"line_start":1115,"line_end":1115,"column_start":5,"column_end":16},"name":"V128AnyTrue","qualname":"::primitives::Operator::V128AnyTrue","value":"Operator::V128AnyTrue","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3610},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247758,"byte_end":247766,"line_start":1116,"line_end":1116,"column_start":5,"column_end":13},"name":"I8x16Abs","qualname":"::primitives::Operator::I8x16Abs","value":"Operator::I8x16Abs","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3612},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247772,"byte_end":247780,"line_start":1117,"line_end":1117,"column_start":5,"column_end":13},"name":"I8x16Neg","qualname":"::primitives::Operator::I8x16Neg","value":"Operator::I8x16Neg","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3614},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247786,"byte_end":247797,"line_start":1118,"line_end":1118,"column_start":5,"column_end":16},"name":"I8x16Popcnt","qualname":"::primitives::Operator::I8x16Popcnt","value":"Operator::I8x16Popcnt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3616},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247803,"byte_end":247815,"line_start":1119,"line_end":1119,"column_start":5,"column_end":17},"name":"I8x16AllTrue","qualname":"::primitives::Operator::I8x16AllTrue","value":"Operator::I8x16AllTrue","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3618},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247821,"byte_end":247833,"line_start":1120,"line_end":1120,"column_start":5,"column_end":17},"name":"I8x16Bitmask","qualname":"::primitives::Operator::I8x16Bitmask","value":"Operator::I8x16Bitmask","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247839,"byte_end":247856,"line_start":1121,"line_end":1121,"column_start":5,"column_end":22},"name":"I8x16NarrowI16x8S","qualname":"::primitives::Operator::I8x16NarrowI16x8S","value":"Operator::I8x16NarrowI16x8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247862,"byte_end":247879,"line_start":1122,"line_end":1122,"column_start":5,"column_end":22},"name":"I8x16NarrowI16x8U","qualname":"::primitives::Operator::I8x16NarrowI16x8U","value":"Operator::I8x16NarrowI16x8U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3624},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247885,"byte_end":247893,"line_start":1123,"line_end":1123,"column_start":5,"column_end":13},"name":"I8x16Shl","qualname":"::primitives::Operator::I8x16Shl","value":"Operator::I8x16Shl","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3626},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247899,"byte_end":247908,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14},"name":"I8x16ShrS","qualname":"::primitives::Operator::I8x16ShrS","value":"Operator::I8x16ShrS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3628},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247914,"byte_end":247923,"line_start":1125,"line_end":1125,"column_start":5,"column_end":14},"name":"I8x16ShrU","qualname":"::primitives::Operator::I8x16ShrU","value":"Operator::I8x16ShrU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3630},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247929,"byte_end":247937,"line_start":1126,"line_end":1126,"column_start":5,"column_end":13},"name":"I8x16Add","qualname":"::primitives::Operator::I8x16Add","value":"Operator::I8x16Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3632},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247943,"byte_end":247955,"line_start":1127,"line_end":1127,"column_start":5,"column_end":17},"name":"I8x16AddSatS","qualname":"::primitives::Operator::I8x16AddSatS","value":"Operator::I8x16AddSatS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3634},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247961,"byte_end":247973,"line_start":1128,"line_end":1128,"column_start":5,"column_end":17},"name":"I8x16AddSatU","qualname":"::primitives::Operator::I8x16AddSatU","value":"Operator::I8x16AddSatU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3636},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247979,"byte_end":247987,"line_start":1129,"line_end":1129,"column_start":5,"column_end":13},"name":"I8x16Sub","qualname":"::primitives::Operator::I8x16Sub","value":"Operator::I8x16Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3638},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":247993,"byte_end":248005,"line_start":1130,"line_end":1130,"column_start":5,"column_end":17},"name":"I8x16SubSatS","qualname":"::primitives::Operator::I8x16SubSatS","value":"Operator::I8x16SubSatS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3640},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248011,"byte_end":248023,"line_start":1131,"line_end":1131,"column_start":5,"column_end":17},"name":"I8x16SubSatU","qualname":"::primitives::Operator::I8x16SubSatU","value":"Operator::I8x16SubSatU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3642},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248029,"byte_end":248038,"line_start":1132,"line_end":1132,"column_start":5,"column_end":14},"name":"I8x16MinS","qualname":"::primitives::Operator::I8x16MinS","value":"Operator::I8x16MinS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3644},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248044,"byte_end":248053,"line_start":1133,"line_end":1133,"column_start":5,"column_end":14},"name":"I8x16MinU","qualname":"::primitives::Operator::I8x16MinU","value":"Operator::I8x16MinU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3646},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248059,"byte_end":248068,"line_start":1134,"line_end":1134,"column_start":5,"column_end":14},"name":"I8x16MaxS","qualname":"::primitives::Operator::I8x16MaxS","value":"Operator::I8x16MaxS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248074,"byte_end":248083,"line_start":1135,"line_end":1135,"column_start":5,"column_end":14},"name":"I8x16MaxU","qualname":"::primitives::Operator::I8x16MaxU","value":"Operator::I8x16MaxU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248089,"byte_end":248110,"line_start":1136,"line_end":1136,"column_start":5,"column_end":26},"name":"I8x16RoundingAverageU","qualname":"::primitives::Operator::I8x16RoundingAverageU","value":"Operator::I8x16RoundingAverageU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248116,"byte_end":248141,"line_start":1137,"line_end":1137,"column_start":5,"column_end":30},"name":"I16x8ExtAddPairwiseI8x16S","qualname":"::primitives::Operator::I16x8ExtAddPairwiseI8x16S","value":"Operator::I16x8ExtAddPairwiseI8x16S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248147,"byte_end":248172,"line_start":1138,"line_end":1138,"column_start":5,"column_end":30},"name":"I16x8ExtAddPairwiseI8x16U","qualname":"::primitives::Operator::I16x8ExtAddPairwiseI8x16U","value":"Operator::I16x8ExtAddPairwiseI8x16U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248178,"byte_end":248186,"line_start":1139,"line_end":1139,"column_start":5,"column_end":13},"name":"I16x8Abs","qualname":"::primitives::Operator::I16x8Abs","value":"Operator::I16x8Abs","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3658},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248192,"byte_end":248200,"line_start":1140,"line_end":1140,"column_start":5,"column_end":13},"name":"I16x8Neg","qualname":"::primitives::Operator::I16x8Neg","value":"Operator::I16x8Neg","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248206,"byte_end":248222,"line_start":1141,"line_end":1141,"column_start":5,"column_end":21},"name":"I16x8Q15MulrSatS","qualname":"::primitives::Operator::I16x8Q15MulrSatS","value":"Operator::I16x8Q15MulrSatS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248228,"byte_end":248240,"line_start":1142,"line_end":1142,"column_start":5,"column_end":17},"name":"I16x8AllTrue","qualname":"::primitives::Operator::I16x8AllTrue","value":"Operator::I16x8AllTrue","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3664},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248246,"byte_end":248258,"line_start":1143,"line_end":1143,"column_start":5,"column_end":17},"name":"I16x8Bitmask","qualname":"::primitives::Operator::I16x8Bitmask","value":"Operator::I16x8Bitmask","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3666},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248264,"byte_end":248281,"line_start":1144,"line_end":1144,"column_start":5,"column_end":22},"name":"I16x8NarrowI32x4S","qualname":"::primitives::Operator::I16x8NarrowI32x4S","value":"Operator::I16x8NarrowI32x4S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3668},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248287,"byte_end":248304,"line_start":1145,"line_end":1145,"column_start":5,"column_end":22},"name":"I16x8NarrowI32x4U","qualname":"::primitives::Operator::I16x8NarrowI32x4U","value":"Operator::I16x8NarrowI32x4U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248310,"byte_end":248330,"line_start":1146,"line_end":1146,"column_start":5,"column_end":25},"name":"I16x8ExtendLowI8x16S","qualname":"::primitives::Operator::I16x8ExtendLowI8x16S","value":"Operator::I16x8ExtendLowI8x16S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3672},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248336,"byte_end":248357,"line_start":1147,"line_end":1147,"column_start":5,"column_end":26},"name":"I16x8ExtendHighI8x16S","qualname":"::primitives::Operator::I16x8ExtendHighI8x16S","value":"Operator::I16x8ExtendHighI8x16S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3674},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248363,"byte_end":248383,"line_start":1148,"line_end":1148,"column_start":5,"column_end":25},"name":"I16x8ExtendLowI8x16U","qualname":"::primitives::Operator::I16x8ExtendLowI8x16U","value":"Operator::I16x8ExtendLowI8x16U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248389,"byte_end":248410,"line_start":1149,"line_end":1149,"column_start":5,"column_end":26},"name":"I16x8ExtendHighI8x16U","qualname":"::primitives::Operator::I16x8ExtendHighI8x16U","value":"Operator::I16x8ExtendHighI8x16U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3678},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248416,"byte_end":248424,"line_start":1150,"line_end":1150,"column_start":5,"column_end":13},"name":"I16x8Shl","qualname":"::primitives::Operator::I16x8Shl","value":"Operator::I16x8Shl","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3680},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248430,"byte_end":248439,"line_start":1151,"line_end":1151,"column_start":5,"column_end":14},"name":"I16x8ShrS","qualname":"::primitives::Operator::I16x8ShrS","value":"Operator::I16x8ShrS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248445,"byte_end":248454,"line_start":1152,"line_end":1152,"column_start":5,"column_end":14},"name":"I16x8ShrU","qualname":"::primitives::Operator::I16x8ShrU","value":"Operator::I16x8ShrU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3684},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248460,"byte_end":248468,"line_start":1153,"line_end":1153,"column_start":5,"column_end":13},"name":"I16x8Add","qualname":"::primitives::Operator::I16x8Add","value":"Operator::I16x8Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3686},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248474,"byte_end":248486,"line_start":1154,"line_end":1154,"column_start":5,"column_end":17},"name":"I16x8AddSatS","qualname":"::primitives::Operator::I16x8AddSatS","value":"Operator::I16x8AddSatS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3688},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248492,"byte_end":248504,"line_start":1155,"line_end":1155,"column_start":5,"column_end":17},"name":"I16x8AddSatU","qualname":"::primitives::Operator::I16x8AddSatU","value":"Operator::I16x8AddSatU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3690},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248510,"byte_end":248518,"line_start":1156,"line_end":1156,"column_start":5,"column_end":13},"name":"I16x8Sub","qualname":"::primitives::Operator::I16x8Sub","value":"Operator::I16x8Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248524,"byte_end":248536,"line_start":1157,"line_end":1157,"column_start":5,"column_end":17},"name":"I16x8SubSatS","qualname":"::primitives::Operator::I16x8SubSatS","value":"Operator::I16x8SubSatS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3694},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248542,"byte_end":248554,"line_start":1158,"line_end":1158,"column_start":5,"column_end":17},"name":"I16x8SubSatU","qualname":"::primitives::Operator::I16x8SubSatU","value":"Operator::I16x8SubSatU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3696},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248560,"byte_end":248568,"line_start":1159,"line_end":1159,"column_start":5,"column_end":13},"name":"I16x8Mul","qualname":"::primitives::Operator::I16x8Mul","value":"Operator::I16x8Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3698},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248574,"byte_end":248583,"line_start":1160,"line_end":1160,"column_start":5,"column_end":14},"name":"I16x8MinS","qualname":"::primitives::Operator::I16x8MinS","value":"Operator::I16x8MinS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3700},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248589,"byte_end":248598,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14},"name":"I16x8MinU","qualname":"::primitives::Operator::I16x8MinU","value":"Operator::I16x8MinU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3702},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248604,"byte_end":248613,"line_start":1162,"line_end":1162,"column_start":5,"column_end":14},"name":"I16x8MaxS","qualname":"::primitives::Operator::I16x8MaxS","value":"Operator::I16x8MaxS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3704},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248619,"byte_end":248628,"line_start":1163,"line_end":1163,"column_start":5,"column_end":14},"name":"I16x8MaxU","qualname":"::primitives::Operator::I16x8MaxU","value":"Operator::I16x8MaxU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3706},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248634,"byte_end":248655,"line_start":1164,"line_end":1164,"column_start":5,"column_end":26},"name":"I16x8RoundingAverageU","qualname":"::primitives::Operator::I16x8RoundingAverageU","value":"Operator::I16x8RoundingAverageU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3708},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248661,"byte_end":248681,"line_start":1165,"line_end":1165,"column_start":5,"column_end":25},"name":"I16x8ExtMulLowI8x16S","qualname":"::primitives::Operator::I16x8ExtMulLowI8x16S","value":"Operator::I16x8ExtMulLowI8x16S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248687,"byte_end":248708,"line_start":1166,"line_end":1166,"column_start":5,"column_end":26},"name":"I16x8ExtMulHighI8x16S","qualname":"::primitives::Operator::I16x8ExtMulHighI8x16S","value":"Operator::I16x8ExtMulHighI8x16S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3712},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248714,"byte_end":248734,"line_start":1167,"line_end":1167,"column_start":5,"column_end":25},"name":"I16x8ExtMulLowI8x16U","qualname":"::primitives::Operator::I16x8ExtMulLowI8x16U","value":"Operator::I16x8ExtMulLowI8x16U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3714},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248740,"byte_end":248761,"line_start":1168,"line_end":1168,"column_start":5,"column_end":26},"name":"I16x8ExtMulHighI8x16U","qualname":"::primitives::Operator::I16x8ExtMulHighI8x16U","value":"Operator::I16x8ExtMulHighI8x16U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248767,"byte_end":248792,"line_start":1169,"line_end":1169,"column_start":5,"column_end":30},"name":"I32x4ExtAddPairwiseI16x8S","qualname":"::primitives::Operator::I32x4ExtAddPairwiseI16x8S","value":"Operator::I32x4ExtAddPairwiseI16x8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3718},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248798,"byte_end":248823,"line_start":1170,"line_end":1170,"column_start":5,"column_end":30},"name":"I32x4ExtAddPairwiseI16x8U","qualname":"::primitives::Operator::I32x4ExtAddPairwiseI16x8U","value":"Operator::I32x4ExtAddPairwiseI16x8U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3720},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248829,"byte_end":248837,"line_start":1171,"line_end":1171,"column_start":5,"column_end":13},"name":"I32x4Abs","qualname":"::primitives::Operator::I32x4Abs","value":"Operator::I32x4Abs","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3722},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248843,"byte_end":248851,"line_start":1172,"line_end":1172,"column_start":5,"column_end":13},"name":"I32x4Neg","qualname":"::primitives::Operator::I32x4Neg","value":"Operator::I32x4Neg","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3724},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248857,"byte_end":248869,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17},"name":"I32x4AllTrue","qualname":"::primitives::Operator::I32x4AllTrue","value":"Operator::I32x4AllTrue","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3726},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248875,"byte_end":248887,"line_start":1174,"line_end":1174,"column_start":5,"column_end":17},"name":"I32x4Bitmask","qualname":"::primitives::Operator::I32x4Bitmask","value":"Operator::I32x4Bitmask","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3728},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248893,"byte_end":248913,"line_start":1175,"line_end":1175,"column_start":5,"column_end":25},"name":"I32x4ExtendLowI16x8S","qualname":"::primitives::Operator::I32x4ExtendLowI16x8S","value":"Operator::I32x4ExtendLowI16x8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3730},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248919,"byte_end":248940,"line_start":1176,"line_end":1176,"column_start":5,"column_end":26},"name":"I32x4ExtendHighI16x8S","qualname":"::primitives::Operator::I32x4ExtendHighI16x8S","value":"Operator::I32x4ExtendHighI16x8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3732},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248946,"byte_end":248966,"line_start":1177,"line_end":1177,"column_start":5,"column_end":25},"name":"I32x4ExtendLowI16x8U","qualname":"::primitives::Operator::I32x4ExtendLowI16x8U","value":"Operator::I32x4ExtendLowI16x8U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3734},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248972,"byte_end":248993,"line_start":1178,"line_end":1178,"column_start":5,"column_end":26},"name":"I32x4ExtendHighI16x8U","qualname":"::primitives::Operator::I32x4ExtendHighI16x8U","value":"Operator::I32x4ExtendHighI16x8U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3736},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":248999,"byte_end":249007,"line_start":1179,"line_end":1179,"column_start":5,"column_end":13},"name":"I32x4Shl","qualname":"::primitives::Operator::I32x4Shl","value":"Operator::I32x4Shl","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3738},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249013,"byte_end":249022,"line_start":1180,"line_end":1180,"column_start":5,"column_end":14},"name":"I32x4ShrS","qualname":"::primitives::Operator::I32x4ShrS","value":"Operator::I32x4ShrS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3740},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249028,"byte_end":249037,"line_start":1181,"line_end":1181,"column_start":5,"column_end":14},"name":"I32x4ShrU","qualname":"::primitives::Operator::I32x4ShrU","value":"Operator::I32x4ShrU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3742},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249043,"byte_end":249051,"line_start":1182,"line_end":1182,"column_start":5,"column_end":13},"name":"I32x4Add","qualname":"::primitives::Operator::I32x4Add","value":"Operator::I32x4Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3744},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249057,"byte_end":249065,"line_start":1183,"line_end":1183,"column_start":5,"column_end":13},"name":"I32x4Sub","qualname":"::primitives::Operator::I32x4Sub","value":"Operator::I32x4Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3746},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249071,"byte_end":249079,"line_start":1184,"line_end":1184,"column_start":5,"column_end":13},"name":"I32x4Mul","qualname":"::primitives::Operator::I32x4Mul","value":"Operator::I32x4Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3748},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249085,"byte_end":249094,"line_start":1185,"line_end":1185,"column_start":5,"column_end":14},"name":"I32x4MinS","qualname":"::primitives::Operator::I32x4MinS","value":"Operator::I32x4MinS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3750},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249100,"byte_end":249109,"line_start":1186,"line_end":1186,"column_start":5,"column_end":14},"name":"I32x4MinU","qualname":"::primitives::Operator::I32x4MinU","value":"Operator::I32x4MinU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3752},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249115,"byte_end":249124,"line_start":1187,"line_end":1187,"column_start":5,"column_end":14},"name":"I32x4MaxS","qualname":"::primitives::Operator::I32x4MaxS","value":"Operator::I32x4MaxS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3754},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249130,"byte_end":249139,"line_start":1188,"line_end":1188,"column_start":5,"column_end":14},"name":"I32x4MaxU","qualname":"::primitives::Operator::I32x4MaxU","value":"Operator::I32x4MaxU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249145,"byte_end":249159,"line_start":1189,"line_end":1189,"column_start":5,"column_end":19},"name":"I32x4DotI16x8S","qualname":"::primitives::Operator::I32x4DotI16x8S","value":"Operator::I32x4DotI16x8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249165,"byte_end":249185,"line_start":1190,"line_end":1190,"column_start":5,"column_end":25},"name":"I32x4ExtMulLowI16x8S","qualname":"::primitives::Operator::I32x4ExtMulLowI16x8S","value":"Operator::I32x4ExtMulLowI16x8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249191,"byte_end":249212,"line_start":1191,"line_end":1191,"column_start":5,"column_end":26},"name":"I32x4ExtMulHighI16x8S","qualname":"::primitives::Operator::I32x4ExtMulHighI16x8S","value":"Operator::I32x4ExtMulHighI16x8S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249218,"byte_end":249238,"line_start":1192,"line_end":1192,"column_start":5,"column_end":25},"name":"I32x4ExtMulLowI16x8U","qualname":"::primitives::Operator::I32x4ExtMulLowI16x8U","value":"Operator::I32x4ExtMulLowI16x8U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249244,"byte_end":249265,"line_start":1193,"line_end":1193,"column_start":5,"column_end":26},"name":"I32x4ExtMulHighI16x8U","qualname":"::primitives::Operator::I32x4ExtMulHighI16x8U","value":"Operator::I32x4ExtMulHighI16x8U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249271,"byte_end":249279,"line_start":1194,"line_end":1194,"column_start":5,"column_end":13},"name":"I64x2Abs","qualname":"::primitives::Operator::I64x2Abs","value":"Operator::I64x2Abs","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249285,"byte_end":249293,"line_start":1195,"line_end":1195,"column_start":5,"column_end":13},"name":"I64x2Neg","qualname":"::primitives::Operator::I64x2Neg","value":"Operator::I64x2Neg","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3770},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249299,"byte_end":249311,"line_start":1196,"line_end":1196,"column_start":5,"column_end":17},"name":"I64x2AllTrue","qualname":"::primitives::Operator::I64x2AllTrue","value":"Operator::I64x2AllTrue","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3772},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249317,"byte_end":249329,"line_start":1197,"line_end":1197,"column_start":5,"column_end":17},"name":"I64x2Bitmask","qualname":"::primitives::Operator::I64x2Bitmask","value":"Operator::I64x2Bitmask","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249335,"byte_end":249355,"line_start":1198,"line_end":1198,"column_start":5,"column_end":25},"name":"I64x2ExtendLowI32x4S","qualname":"::primitives::Operator::I64x2ExtendLowI32x4S","value":"Operator::I64x2ExtendLowI32x4S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249361,"byte_end":249382,"line_start":1199,"line_end":1199,"column_start":5,"column_end":26},"name":"I64x2ExtendHighI32x4S","qualname":"::primitives::Operator::I64x2ExtendHighI32x4S","value":"Operator::I64x2ExtendHighI32x4S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249388,"byte_end":249408,"line_start":1200,"line_end":1200,"column_start":5,"column_end":25},"name":"I64x2ExtendLowI32x4U","qualname":"::primitives::Operator::I64x2ExtendLowI32x4U","value":"Operator::I64x2ExtendLowI32x4U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3780},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249414,"byte_end":249435,"line_start":1201,"line_end":1201,"column_start":5,"column_end":26},"name":"I64x2ExtendHighI32x4U","qualname":"::primitives::Operator::I64x2ExtendHighI32x4U","value":"Operator::I64x2ExtendHighI32x4U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3782},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249441,"byte_end":249449,"line_start":1202,"line_end":1202,"column_start":5,"column_end":13},"name":"I64x2Shl","qualname":"::primitives::Operator::I64x2Shl","value":"Operator::I64x2Shl","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3784},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249455,"byte_end":249464,"line_start":1203,"line_end":1203,"column_start":5,"column_end":14},"name":"I64x2ShrS","qualname":"::primitives::Operator::I64x2ShrS","value":"Operator::I64x2ShrS","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3786},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249470,"byte_end":249479,"line_start":1204,"line_end":1204,"column_start":5,"column_end":14},"name":"I64x2ShrU","qualname":"::primitives::Operator::I64x2ShrU","value":"Operator::I64x2ShrU","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3788},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249485,"byte_end":249493,"line_start":1205,"line_end":1205,"column_start":5,"column_end":13},"name":"I64x2Add","qualname":"::primitives::Operator::I64x2Add","value":"Operator::I64x2Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249499,"byte_end":249507,"line_start":1206,"line_end":1206,"column_start":5,"column_end":13},"name":"I64x2Sub","qualname":"::primitives::Operator::I64x2Sub","value":"Operator::I64x2Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3792},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249513,"byte_end":249521,"line_start":1207,"line_end":1207,"column_start":5,"column_end":13},"name":"I64x2Mul","qualname":"::primitives::Operator::I64x2Mul","value":"Operator::I64x2Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3794},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249527,"byte_end":249547,"line_start":1208,"line_end":1208,"column_start":5,"column_end":25},"name":"I64x2ExtMulLowI32x4S","qualname":"::primitives::Operator::I64x2ExtMulLowI32x4S","value":"Operator::I64x2ExtMulLowI32x4S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3796},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249553,"byte_end":249574,"line_start":1209,"line_end":1209,"column_start":5,"column_end":26},"name":"I64x2ExtMulHighI32x4S","qualname":"::primitives::Operator::I64x2ExtMulHighI32x4S","value":"Operator::I64x2ExtMulHighI32x4S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3798},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249580,"byte_end":249600,"line_start":1210,"line_end":1210,"column_start":5,"column_end":25},"name":"I64x2ExtMulLowI32x4U","qualname":"::primitives::Operator::I64x2ExtMulLowI32x4U","value":"Operator::I64x2ExtMulLowI32x4U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249606,"byte_end":249627,"line_start":1211,"line_end":1211,"column_start":5,"column_end":26},"name":"I64x2ExtMulHighI32x4U","qualname":"::primitives::Operator::I64x2ExtMulHighI32x4U","value":"Operator::I64x2ExtMulHighI32x4U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3802},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249633,"byte_end":249642,"line_start":1212,"line_end":1212,"column_start":5,"column_end":14},"name":"F32x4Ceil","qualname":"::primitives::Operator::F32x4Ceil","value":"Operator::F32x4Ceil","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3804},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249648,"byte_end":249658,"line_start":1213,"line_end":1213,"column_start":5,"column_end":15},"name":"F32x4Floor","qualname":"::primitives::Operator::F32x4Floor","value":"Operator::F32x4Floor","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3806},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249664,"byte_end":249674,"line_start":1214,"line_end":1214,"column_start":5,"column_end":15},"name":"F32x4Trunc","qualname":"::primitives::Operator::F32x4Trunc","value":"Operator::F32x4Trunc","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3808},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249680,"byte_end":249692,"line_start":1215,"line_end":1215,"column_start":5,"column_end":17},"name":"F32x4Nearest","qualname":"::primitives::Operator::F32x4Nearest","value":"Operator::F32x4Nearest","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3810},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249698,"byte_end":249706,"line_start":1216,"line_end":1216,"column_start":5,"column_end":13},"name":"F32x4Abs","qualname":"::primitives::Operator::F32x4Abs","value":"Operator::F32x4Abs","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3812},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249712,"byte_end":249720,"line_start":1217,"line_end":1217,"column_start":5,"column_end":13},"name":"F32x4Neg","qualname":"::primitives::Operator::F32x4Neg","value":"Operator::F32x4Neg","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249726,"byte_end":249735,"line_start":1218,"line_end":1218,"column_start":5,"column_end":14},"name":"F32x4Sqrt","qualname":"::primitives::Operator::F32x4Sqrt","value":"Operator::F32x4Sqrt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3816},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249741,"byte_end":249749,"line_start":1219,"line_end":1219,"column_start":5,"column_end":13},"name":"F32x4Add","qualname":"::primitives::Operator::F32x4Add","value":"Operator::F32x4Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249755,"byte_end":249763,"line_start":1220,"line_end":1220,"column_start":5,"column_end":13},"name":"F32x4Sub","qualname":"::primitives::Operator::F32x4Sub","value":"Operator::F32x4Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3820},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249769,"byte_end":249777,"line_start":1221,"line_end":1221,"column_start":5,"column_end":13},"name":"F32x4Mul","qualname":"::primitives::Operator::F32x4Mul","value":"Operator::F32x4Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3822},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249783,"byte_end":249791,"line_start":1222,"line_end":1222,"column_start":5,"column_end":13},"name":"F32x4Div","qualname":"::primitives::Operator::F32x4Div","value":"Operator::F32x4Div","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3824},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249797,"byte_end":249805,"line_start":1223,"line_end":1223,"column_start":5,"column_end":13},"name":"F32x4Min","qualname":"::primitives::Operator::F32x4Min","value":"Operator::F32x4Min","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249811,"byte_end":249819,"line_start":1224,"line_end":1224,"column_start":5,"column_end":13},"name":"F32x4Max","qualname":"::primitives::Operator::F32x4Max","value":"Operator::F32x4Max","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3828},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249825,"byte_end":249834,"line_start":1225,"line_end":1225,"column_start":5,"column_end":14},"name":"F32x4PMin","qualname":"::primitives::Operator::F32x4PMin","value":"Operator::F32x4PMin","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3830},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249840,"byte_end":249849,"line_start":1226,"line_end":1226,"column_start":5,"column_end":14},"name":"F32x4PMax","qualname":"::primitives::Operator::F32x4PMax","value":"Operator::F32x4PMax","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3832},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249855,"byte_end":249864,"line_start":1227,"line_end":1227,"column_start":5,"column_end":14},"name":"F64x2Ceil","qualname":"::primitives::Operator::F64x2Ceil","value":"Operator::F64x2Ceil","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3834},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249870,"byte_end":249880,"line_start":1228,"line_end":1228,"column_start":5,"column_end":15},"name":"F64x2Floor","qualname":"::primitives::Operator::F64x2Floor","value":"Operator::F64x2Floor","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3836},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249886,"byte_end":249896,"line_start":1229,"line_end":1229,"column_start":5,"column_end":15},"name":"F64x2Trunc","qualname":"::primitives::Operator::F64x2Trunc","value":"Operator::F64x2Trunc","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3838},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249902,"byte_end":249914,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17},"name":"F64x2Nearest","qualname":"::primitives::Operator::F64x2Nearest","value":"Operator::F64x2Nearest","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3840},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249920,"byte_end":249928,"line_start":1231,"line_end":1231,"column_start":5,"column_end":13},"name":"F64x2Abs","qualname":"::primitives::Operator::F64x2Abs","value":"Operator::F64x2Abs","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249934,"byte_end":249942,"line_start":1232,"line_end":1232,"column_start":5,"column_end":13},"name":"F64x2Neg","qualname":"::primitives::Operator::F64x2Neg","value":"Operator::F64x2Neg","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3844},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249948,"byte_end":249957,"line_start":1233,"line_end":1233,"column_start":5,"column_end":14},"name":"F64x2Sqrt","qualname":"::primitives::Operator::F64x2Sqrt","value":"Operator::F64x2Sqrt","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3846},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249963,"byte_end":249971,"line_start":1234,"line_end":1234,"column_start":5,"column_end":13},"name":"F64x2Add","qualname":"::primitives::Operator::F64x2Add","value":"Operator::F64x2Add","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3848},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249977,"byte_end":249985,"line_start":1235,"line_end":1235,"column_start":5,"column_end":13},"name":"F64x2Sub","qualname":"::primitives::Operator::F64x2Sub","value":"Operator::F64x2Sub","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3850},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":249991,"byte_end":249999,"line_start":1236,"line_end":1236,"column_start":5,"column_end":13},"name":"F64x2Mul","qualname":"::primitives::Operator::F64x2Mul","value":"Operator::F64x2Mul","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3852},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250005,"byte_end":250013,"line_start":1237,"line_end":1237,"column_start":5,"column_end":13},"name":"F64x2Div","qualname":"::primitives::Operator::F64x2Div","value":"Operator::F64x2Div","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3854},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250019,"byte_end":250027,"line_start":1238,"line_end":1238,"column_start":5,"column_end":13},"name":"F64x2Min","qualname":"::primitives::Operator::F64x2Min","value":"Operator::F64x2Min","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3856},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250033,"byte_end":250041,"line_start":1239,"line_end":1239,"column_start":5,"column_end":13},"name":"F64x2Max","qualname":"::primitives::Operator::F64x2Max","value":"Operator::F64x2Max","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250047,"byte_end":250056,"line_start":1240,"line_end":1240,"column_start":5,"column_end":14},"name":"F64x2PMin","qualname":"::primitives::Operator::F64x2PMin","value":"Operator::F64x2PMin","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3860},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250062,"byte_end":250071,"line_start":1241,"line_end":1241,"column_start":5,"column_end":14},"name":"F64x2PMax","qualname":"::primitives::Operator::F64x2PMax","value":"Operator::F64x2PMax","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3862},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250077,"byte_end":250096,"line_start":1242,"line_end":1242,"column_start":5,"column_end":24},"name":"I32x4TruncSatF32x4S","qualname":"::primitives::Operator::I32x4TruncSatF32x4S","value":"Operator::I32x4TruncSatF32x4S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3864},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250102,"byte_end":250121,"line_start":1243,"line_end":1243,"column_start":5,"column_end":24},"name":"I32x4TruncSatF32x4U","qualname":"::primitives::Operator::I32x4TruncSatF32x4U","value":"Operator::I32x4TruncSatF32x4U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250127,"byte_end":250145,"line_start":1244,"line_end":1244,"column_start":5,"column_end":23},"name":"F32x4ConvertI32x4S","qualname":"::primitives::Operator::F32x4ConvertI32x4S","value":"Operator::F32x4ConvertI32x4S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250151,"byte_end":250169,"line_start":1245,"line_end":1245,"column_start":5,"column_end":23},"name":"F32x4ConvertI32x4U","qualname":"::primitives::Operator::F32x4ConvertI32x4U","value":"Operator::F32x4ConvertI32x4U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250175,"byte_end":250198,"line_start":1246,"line_end":1246,"column_start":5,"column_end":28},"name":"I32x4TruncSatF64x2SZero","qualname":"::primitives::Operator::I32x4TruncSatF64x2SZero","value":"Operator::I32x4TruncSatF64x2SZero","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250204,"byte_end":250227,"line_start":1247,"line_end":1247,"column_start":5,"column_end":28},"name":"I32x4TruncSatF64x2UZero","qualname":"::primitives::Operator::I32x4TruncSatF64x2UZero","value":"Operator::I32x4TruncSatF64x2UZero","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250233,"byte_end":250254,"line_start":1248,"line_end":1248,"column_start":5,"column_end":26},"name":"F64x2ConvertLowI32x4S","qualname":"::primitives::Operator::F64x2ConvertLowI32x4S","value":"Operator::F64x2ConvertLowI32x4S","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250260,"byte_end":250281,"line_start":1249,"line_end":1249,"column_start":5,"column_end":26},"name":"F64x2ConvertLowI32x4U","qualname":"::primitives::Operator::F64x2ConvertLowI32x4U","value":"Operator::F64x2ConvertLowI32x4U","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250287,"byte_end":250307,"line_start":1250,"line_end":1250,"column_start":5,"column_end":25},"name":"F32x4DemoteF64x2Zero","qualname":"::primitives::Operator::F32x4DemoteF64x2Zero","value":"Operator::F32x4DemoteF64x2Zero","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":250313,"byte_end":250333,"line_start":1251,"line_end":1251,"column_start":5,"column_end":25},"name":"F64x2PromoteLowF32x4","qualname":"::primitives::Operator::F64x2PromoteLowF32x4","value":"Operator::F64x2PromoteLowF32x4","parent":{"krate":0,"index":2839},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2839},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234299,"byte_end":234307,"line_start":373,"line_end":373,"column_start":10,"column_end":18},"name":"Operator","qualname":"::primitives::Operator","value":"pub enum Operator<'a> {\n    Unreachable,\n    Nop,\n    Block {\n        ty: TypeOrFuncType,\n    },\n    Loop {\n        ty: TypeOrFuncType,\n    },\n    If {\n        ty: TypeOrFuncType,\n    },\n    Else,\n    Try {\n        ty: TypeOrFuncType,\n    },\n    Catch {\n        index: u32,\n    },\n    Throw {\n        index: u32,\n    },\n    Rethrow {\n        relative_depth: u32,\n    },\n    End,\n    Br {\n        relative_depth: u32,\n    },\n    BrIf {\n        relative_depth: u32,\n    },\n    BrTable {\n        table: BrTable,\n    },\n    Return,\n    Call {\n        function_index: u32,\n    },\n    CallIndirect {\n        index: u32,\n        table_index: u32,\n    },\n    ReturnCall {\n        function_index: u32,\n    },\n    ReturnCallIndirect {\n        index: u32,\n        table_index: u32,\n    },\n    Delegate {\n        relative_depth: u32,\n    },\n    CatchAll,\n    Drop,\n    Select,\n    TypedSelect {\n        ty: Type,\n    },\n    LocalGet {\n        local_index: u32,\n    },\n    LocalSet {\n        local_index: u32,\n    },\n    LocalTee {\n        local_index: u32,\n    },\n    GlobalGet {\n        global_index: u32,\n    },\n    GlobalSet {\n        global_index: u32,\n    },\n    I32Load {\n        memarg: MemoryImmediate,\n    },\n    I64Load {\n        memarg: MemoryImmediate,\n    },\n    F32Load {\n        memarg: MemoryImmediate,\n    },\n    F64Load {\n        memarg: MemoryImmediate,\n    },\n    I32Load8S {\n        memarg: MemoryImmediate,\n    },\n    I32Load8U {\n        memarg: MemoryImmediate,\n    },\n    I32Load16S {\n        memarg: MemoryImmediate,\n    },\n    I32Load16U {\n        memarg: MemoryImmediate,\n    },\n    I64Load8S {\n        memarg: MemoryImmediate,\n    },\n    I64Load8U {\n        memarg: MemoryImmediate,\n    },\n    I64Load16S {\n        memarg: MemoryImmediate,\n    },\n    I64Load16U {\n        memarg: MemoryImmediate,\n    },\n    I64Load32S {\n        memarg: MemoryImmediate,\n    },\n    I64Load32U {\n        memarg: MemoryImmediate,\n    },\n    I32Store {\n        memarg: MemoryImmediate,\n    },\n    I64Store {\n        memarg: MemoryImmediate,\n    },\n    F32Store {\n        memarg: MemoryImmediate,\n    },\n    F64Store {\n        memarg: MemoryImmediate,\n    },\n    I32Store8 {\n        memarg: MemoryImmediate,\n    },\n    I32Store16 {\n        memarg: MemoryImmediate,\n    },\n    I64Store8 {\n        memarg: MemoryImmediate,\n    },\n    I64Store16 {\n        memarg: MemoryImmediate,\n    },\n    I64Store32 {\n        memarg: MemoryImmediate,\n    },\n    MemorySize {\n        mem: u32,\n        mem_byte: u8,\n    },\n    MemoryGrow {\n        mem: u32,\n        mem_byte: u8,\n    },\n    I32Const {\n        value: i32,\n    },\n    I64Const {\n        value: i64,\n    },\n    F32Const {\n        value: Ieee32,\n    },\n    F64Const {\n        value: Ieee64,\n    },\n    RefNull {\n        ty: Type,\n    },\n    RefIsNull,\n    RefFunc {\n        function_index: u32,\n    },\n    I32Eqz,\n    I32Eq,\n    I32Ne,\n    I32LtS,\n    I32LtU,\n    I32GtS,\n    I32GtU,\n    I32LeS,\n    I32LeU,\n    I32GeS,\n    I32GeU,\n    I64Eqz,\n    I64Eq,\n    I64Ne,\n    I64LtS,\n    I64LtU,\n    I64GtS,\n    I64GtU,\n    I64LeS,\n    I64LeU,\n    I64GeS,\n    I64GeU,\n    F32Eq,\n    F32Ne,\n    F32Lt,\n    F32Gt,\n    F32Le,\n    F32Ge,\n    F64Eq,\n    F64Ne,\n    F64Lt,\n    F64Gt,\n    F64Le,\n    F64Ge,\n    I32Clz,\n    I32Ctz,\n    I32Popcnt,\n    I32Add,\n    I32Sub,\n    I32Mul,\n    I32DivS,\n    I32DivU,\n    I32RemS,\n    I32RemU,\n    I32And,\n    I32Or,\n    I32Xor,\n    I32Shl,\n    I32ShrS,\n    I32ShrU,\n    I32Rotl,\n    I32Rotr,\n    I64Clz,\n    I64Ctz,\n    I64Popcnt,\n    I64Add,\n    I64Sub,\n    I64Mul,\n    I64DivS,\n    I64DivU,\n    I64RemS,\n    I64RemU,\n    I64And,\n    I64Or,\n    I64Xor,\n    I64Shl,\n    I64ShrS,\n    I64ShrU,\n    I64Rotl,\n    I64Rotr,\n    F32Abs,\n    F32Neg,\n    F32Ceil,\n    F32Floor,\n    F32Trunc,\n    F32Nearest,\n    F32Sqrt,\n    F32Add,\n    F32Sub,\n    F32Mul,\n    F32Div,\n    F32Min,\n    F32Max,\n    F32Copysign,\n    F64Abs,\n    F64Neg,\n    F64Ceil,\n    F64Floor,\n    F64Trunc,\n    F64Nearest,\n    F64Sqrt,\n    F64Add,\n    F64Sub,\n    F64Mul,\n    F64Div,\n    F64Min,\n    F64Max,\n    F64Copysign,\n    I32WrapI64,\n    I32TruncF32S,\n    I32TruncF32U,\n    I32TruncF64S,\n    I32TruncF64U,\n    I64ExtendI32S,\n    I64ExtendI32U,\n    I64TruncF32S,\n    I64TruncF32U,\n    I64TruncF64S,\n    I64TruncF64U,\n    F32ConvertI32S,\n    F32ConvertI32U,\n    F32ConvertI64S,\n    F32ConvertI64U,\n    F32DemoteF64,\n    F64ConvertI32S,\n    F64ConvertI32U,\n    F64ConvertI64S,\n    F64ConvertI64U,\n    F64PromoteF32,\n    I32ReinterpretF32,\n    I64ReinterpretF64,\n    F32ReinterpretI32,\n    F64ReinterpretI64,\n    I32Extend8S,\n    I32Extend16S,\n    I64Extend8S,\n    I64Extend16S,\n    I64Extend32S,\n    I32TruncSatF32S,\n    I32TruncSatF32U,\n    I32TruncSatF64S,\n    I32TruncSatF64U,\n    I64TruncSatF32S,\n    I64TruncSatF32U,\n    I64TruncSatF64S,\n    I64TruncSatF64U,\n    MemoryInit {\n        segment: u32,\n        mem: u32,\n    },\n    DataDrop {\n        segment: u32,\n    },\n    MemoryCopy {\n        src: u32,\n        dst: u32,\n    },\n    MemoryFill {\n        mem: u32,\n    },\n    TableInit {\n        segment: u32,\n        table: u32,\n    },\n    ElemDrop {\n        segment: u32,\n    },\n    TableCopy {\n        dst_table: u32,\n        src_table: u32,\n    },\n    TableFill {\n        table: u32,\n    },\n    TableGet {\n        table: u32,\n    },\n    TableSet {\n        table: u32,\n    },\n    TableGrow {\n        table: u32,\n    },\n    TableSize {\n        table: u32,\n    },\n    MemoryAtomicNotify {\n        memarg: MemoryImmediate,\n    },\n    MemoryAtomicWait32 {\n        memarg: MemoryImmediate,\n    },\n    MemoryAtomicWait64 {\n        memarg: MemoryImmediate,\n    },\n    AtomicFence {\n        flags: u8,\n    },\n    I32AtomicLoad {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicLoad {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicLoad8U {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicLoad16U {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicLoad8U {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicLoad16U {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicLoad32U {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicStore {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicStore {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicStore8 {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicStore16 {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicStore8 {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicStore16 {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicStore32 {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwAdd {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwAdd {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8AddU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16AddU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8AddU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16AddU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32AddU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwSub {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwSub {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8SubU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16SubU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8SubU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16SubU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32SubU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwAnd {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwAnd {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8AndU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16AndU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8AndU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16AndU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32AndU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwOr {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwOr {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8OrU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16OrU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8OrU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16OrU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32OrU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwXor {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwXor {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8XorU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16XorU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8XorU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16XorU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32XorU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwXchg {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwXchg {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8XchgU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16XchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8XchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16XchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32XchgU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmwCmpxchg {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmwCmpxchg {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw8CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    I32AtomicRmw16CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw8CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw16CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    I64AtomicRmw32CmpxchgU {\n        memarg: MemoryImmediate,\n    },\n    V128Load {\n        memarg: MemoryImmediate,\n    },\n    V128Load8x8S {\n        memarg: MemoryImmediate,\n    },\n    V128Load8x8U {\n        memarg: MemoryImmediate,\n    },\n    V128Load16x4S {\n        memarg: MemoryImmediate,\n    },\n    V128Load16x4U {\n        memarg: MemoryImmediate,\n    },\n    V128Load32x2S {\n        memarg: MemoryImmediate,\n    },\n    V128Load32x2U {\n        memarg: MemoryImmediate,\n    },\n    V128Load8Splat {\n        memarg: MemoryImmediate,\n    },\n    V128Load16Splat {\n        memarg: MemoryImmediate,\n    },\n    V128Load32Splat {\n        memarg: MemoryImmediate,\n    },\n    V128Load64Splat {\n        memarg: MemoryImmediate,\n    },\n    V128Load32Zero {\n        memarg: MemoryImmediate,\n    },\n    V128Load64Zero {\n        memarg: MemoryImmediate,\n    },\n    V128Store {\n        memarg: MemoryImmediate,\n    },\n    V128Load8Lane {\n        memarg: MemoryImmediate,\n        lane: SIMDLaneIndex,\n    },\n    V128Load16Lane {\n        memarg: MemoryImmediate,\n        lane: SIMDLaneIndex,\n    },\n    V128Load32Lane {\n        memarg: MemoryImmediate,\n        lane: SIMDLaneIndex,\n    },\n    V128Load64Lane {\n        memarg: MemoryImmediate,\n        lane: SIMDLaneIndex,\n    },\n    V128Store8Lane {\n        memarg: MemoryImmediate,\n        lane: SIMDLaneIndex,\n    },\n    V128Store16Lane {\n        memarg: MemoryImmediate,\n        lane: SIMDLaneIndex,\n    },\n    V128Store32Lane {\n        memarg: MemoryImmediate,\n        lane: SIMDLaneIndex,\n    },\n    V128Store64Lane {\n        memarg: MemoryImmediate,\n        lane: SIMDLaneIndex,\n    },\n    V128Const {\n        value: V128,\n    },\n    I8x16Shuffle {\n        lanes: [SIMDLaneIndex; ],\n    },\n    I8x16ExtractLaneS {\n        lane: SIMDLaneIndex,\n    },\n    I8x16ExtractLaneU {\n        lane: SIMDLaneIndex,\n    },\n    I8x16ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    I16x8ExtractLaneS {\n        lane: SIMDLaneIndex,\n    },\n    I16x8ExtractLaneU {\n        lane: SIMDLaneIndex,\n    },\n    I16x8ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    I32x4ExtractLane {\n        lane: SIMDLaneIndex,\n    },\n    I32x4ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    I64x2ExtractLane {\n        lane: SIMDLaneIndex,\n    },\n    I64x2ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    F32x4ExtractLane {\n        lane: SIMDLaneIndex,\n    },\n    F32x4ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    F64x2ExtractLane {\n        lane: SIMDLaneIndex,\n    },\n    F64x2ReplaceLane {\n        lane: SIMDLaneIndex,\n    },\n    I8x16Swizzle,\n    I8x16Splat,\n    I16x8Splat,\n    I32x4Splat,\n    I64x2Splat,\n    F32x4Splat,\n    F64x2Splat,\n    I8x16Eq,\n    I8x16Ne,\n    I8x16LtS,\n    I8x16LtU,\n    I8x16GtS,\n    I8x16GtU,\n    I8x16LeS,\n    I8x16LeU,\n    I8x16GeS,\n    I8x16GeU,\n    I16x8Eq,\n    I16x8Ne,\n    I16x8LtS,\n    I16x8LtU,\n    I16x8GtS,\n    I16x8GtU,\n    I16x8LeS,\n    I16x8LeU,\n    I16x8GeS,\n    I16x8GeU,\n    I32x4Eq,\n    I32x4Ne,\n    I32x4LtS,\n    I32x4LtU,\n    I32x4GtS,\n    I32x4GtU,\n    I32x4LeS,\n    I32x4LeU,\n    I32x4GeS,\n    I32x4GeU,\n    I64x2Eq,\n    I64x2Ne,\n    I64x2LtS,\n    I64x2GtS,\n    I64x2LeS,\n    I64x2GeS,\n    F32x4Eq,\n    F32x4Ne,\n    F32x4Lt,\n    F32x4Gt,\n    F32x4Le,\n    F32x4Ge,\n    F64x2Eq,\n    F64x2Ne,\n    F64x2Lt,\n    F64x2Gt,\n    F64x2Le,\n    F64x2Ge,\n    V128Not,\n    V128And,\n    V128AndNot,\n    V128Or,\n    V128Xor,\n    V128Bitselect,\n    V128AnyTrue,\n    I8x16Abs,\n    I8x16Neg,\n    I8x16Popcnt,\n    I8x16AllTrue,\n    I8x16Bitmask,\n    I8x16NarrowI16x8S,\n    I8x16NarrowI16x8U,\n    I8x16Shl,\n    I8x16ShrS,\n    I8x16ShrU,\n    I8x16Add,\n    I8x16AddSatS,\n    I8x16AddSatU,\n    I8x16Sub,\n    I8x16SubSatS,\n    I8x16SubSatU,\n    I8x16MinS,\n    I8x16MinU,\n    I8x16MaxS,\n    I8x16MaxU,\n    I8x16RoundingAverageU,\n    I16x8ExtAddPairwiseI8x16S,\n    I16x8ExtAddPairwiseI8x16U,\n    I16x8Abs,\n    I16x8Neg,\n    I16x8Q15MulrSatS,\n    I16x8AllTrue,\n    I16x8Bitmask,\n    I16x8NarrowI32x4S,\n    I16x8NarrowI32x4U,\n    I16x8ExtendLowI8x16S,\n    I16x8ExtendHighI8x16S,\n    I16x8ExtendLowI8x16U,\n    I16x8ExtendHighI8x16U,\n    I16x8Shl,\n    I16x8ShrS,\n    I16x8ShrU,\n    I16x8Add,\n    I16x8AddSatS,\n    I16x8AddSatU,\n    I16x8Sub,\n    I16x8SubSatS,\n    I16x8SubSatU,\n    I16x8Mul,\n    I16x8MinS,\n    I16x8MinU,\n    I16x8MaxS,\n    I16x8MaxU,\n    I16x8RoundingAverageU,\n    I16x8ExtMulLowI8x16S,\n    I16x8ExtMulHighI8x16S,\n    I16x8ExtMulLowI8x16U,\n    I16x8ExtMulHighI8x16U,\n    I32x4ExtAddPairwiseI16x8S,\n    I32x4ExtAddPairwiseI16x8U,\n    I32x4Abs,\n    I32x4Neg,\n    I32x4AllTrue,\n    I32x4Bitmask,\n    I32x4ExtendLowI16x8S,\n    I32x4ExtendHighI16x8S,\n    I32x4ExtendLowI16x8U,\n    I32x4ExtendHighI16x8U,\n    I32x4Shl,\n    I32x4ShrS,\n    I32x4ShrU,\n    I32x4Add,\n    I32x4Sub,\n    I32x4Mul,\n    I32x4MinS,\n    I32x4MinU,\n    I32x4MaxS,\n    I32x4MaxU,\n    I32x4DotI16x8S,\n    I32x4ExtMulLowI16x8S,\n    I32x4ExtMulHighI16x8S,\n    I32x4ExtMulLowI16x8U,\n    I32x4ExtMulHighI16x8U,\n    I64x2Abs,\n    I64x2Neg,\n    I64x2AllTrue,\n    I64x2Bitmask,\n    I64x2ExtendLowI32x4S,\n    I64x2ExtendHighI32x4S,\n    I64x2ExtendLowI32x4U,\n    I64x2ExtendHighI32x4U,\n    I64x2Shl,\n    I64x2ShrS,\n    I64x2ShrU,\n    I64x2Add,\n    I64x2Sub,\n    I64x2Mul,\n    I64x2ExtMulLowI32x4S,\n    I64x2ExtMulHighI32x4S,\n    I64x2ExtMulLowI32x4U,\n    I64x2ExtMulHighI32x4U,\n    F32x4Ceil,\n    F32x4Floor,\n    F32x4Trunc,\n    F32x4Nearest,\n    F32x4Abs,\n    F32x4Neg,\n    F32x4Sqrt,\n    F32x4Add,\n    F32x4Sub,\n    F32x4Mul,\n    F32x4Div,\n    F32x4Min,\n    F32x4Max,\n    F32x4PMin,\n    F32x4PMax,\n    F64x2Ceil,\n    F64x2Floor,\n    F64x2Trunc,\n    F64x2Nearest,\n    F64x2Abs,\n    F64x2Neg,\n    F64x2Sqrt,\n    F64x2Add,\n    F64x2Sub,\n    F64x2Mul,\n    F64x2Div,\n    F64x2Min,\n    F64x2Max,\n    F64x2PMin,\n    F64x2PMax,\n    I32x4TruncSatF32x4S,\n    I32x4TruncSatF32x4U,\n    F32x4ConvertI32x4S,\n    F32x4ConvertI32x4U,\n    I32x4TruncSatF64x2SZero,\n    I32x4TruncSatF64x2UZero,\n    F64x2ConvertLowI32x4S,\n    F64x2ConvertLowI32x4U,\n    F32x4DemoteF64x2Zero,\n    F64x2PromoteLowF32x4,\n}","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2861},{"krate":0,"index":2863},{"krate":0,"index":2865},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2907},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2917},{"krate":0,"index":2919},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2927},{"krate":0,"index":2929},{"krate":0,"index":2931},{"krate":0,"index":2933},{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2955},{"krate":0,"index":2957},{"krate":0,"index":2959},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2965},{"krate":0,"index":2967},{"krate":0,"index":2969},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2975},{"krate":0,"index":2977},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2983},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":2995},{"krate":0,"index":2997},{"krate":0,"index":2999},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3007},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3019},{"krate":0,"index":3021},{"krate":0,"index":3023},{"krate":0,"index":3025},{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":3035},{"krate":0,"index":3037},{"krate":0,"index":3039},{"krate":0,"index":3041},{"krate":0,"index":3043},{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3103},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3111},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3135},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3149},{"krate":0,"index":3151},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":3167},{"krate":0,"index":3169},{"krate":0,"index":3171},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3177},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3187},{"krate":0,"index":3189},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3195},{"krate":0,"index":3197},{"krate":0,"index":3199},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3223},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3229},{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3237},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3252},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3271},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3297},{"krate":0,"index":3299},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3325},{"krate":0,"index":3327},{"krate":0,"index":3329},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3357},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3373},{"krate":0,"index":3375},{"krate":0,"index":3377},{"krate":0,"index":3379},{"krate":0,"index":3381},{"krate":0,"index":3383},{"krate":0,"index":3385},{"krate":0,"index":3387},{"krate":0,"index":3389},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3403},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3413},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3432},{"krate":0,"index":3435},{"krate":0,"index":3438},{"krate":0,"index":3441},{"krate":0,"index":3444},{"krate":0,"index":3447},{"krate":0,"index":3450},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3486},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3496},{"krate":0,"index":3498},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3510},{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3518},{"krate":0,"index":3520},{"krate":0,"index":3522},{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3558},{"krate":0,"index":3560},{"krate":0,"index":3562},{"krate":0,"index":3564},{"krate":0,"index":3566},{"krate":0,"index":3568},{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3594},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3604},{"krate":0,"index":3606},{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3624},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3638},{"krate":0,"index":3640},{"krate":0,"index":3642},{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3648},{"krate":0,"index":3650},{"krate":0,"index":3652},{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3658},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":3664},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3676},{"krate":0,"index":3678},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3684},{"krate":0,"index":3686},{"krate":0,"index":3688},{"krate":0,"index":3690},{"krate":0,"index":3692},{"krate":0,"index":3694},{"krate":0,"index":3696},{"krate":0,"index":3698},{"krate":0,"index":3700},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3726},{"krate":0,"index":3728},{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3738},{"krate":0,"index":3740},{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3752},{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3758},{"krate":0,"index":3760},{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3770},{"krate":0,"index":3772},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":3788},{"krate":0,"index":3790},{"krate":0,"index":3792},{"krate":0,"index":3794},{"krate":0,"index":3796},{"krate":0,"index":3798},{"krate":0,"index":3800},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3810},{"krate":0,"index":3812},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3818},{"krate":0,"index":3820},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":3826},{"krate":0,"index":3828},{"krate":0,"index":3830},{"krate":0,"index":3832},{"krate":0,"index":3834},{"krate":0,"index":3836},{"krate":0,"index":3838},{"krate":0,"index":3840},{"krate":0,"index":3842},{"krate":0,"index":3844},{"krate":0,"index":3846},{"krate":0,"index":3848},{"krate":0,"index":3850},{"krate":0,"index":3852},{"krate":0,"index":3854},{"krate":0,"index":3856},{"krate":0,"index":3858},{"krate":0,"index":3860},{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":3870},{"krate":0,"index":3872},{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3880}],"decl_id":null,"docs":" Instructions as defined [here].","sig":null,"attributes":[{"value":"/ Instructions as defined [here].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234149,"byte_end":234184,"line_start":369,"line_end":369,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234185,"byte_end":234188,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ [here]: https://webassembly.github.io/spec/core/binary/instructions.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234189,"byte_end":234265,"line_start":371,"line_end":371,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3888},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":252404,"byte_end":252422,"line_start":7,"line_end":7,"column_start":12,"column_end":30},"name":"AliasSectionReader","qualname":"::readers::alias_section::AliasSectionReader","value":"AliasSectionReader {  }","parent":null,"children":[{"krate":0,"index":3890},{"krate":0,"index":3891}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":252527,"byte_end":252536,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"OuterType","qualname":"::readers::alias_section::Alias::OuterType","value":"Alias::OuterType { relative_depth, index }","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":252599,"byte_end":252610,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"name":"OuterModule","qualname":"::readers::alias_section::Alias::OuterModule","value":"Alias::OuterModule { relative_depth, index }","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3903},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":252673,"byte_end":252687,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"InstanceExport","qualname":"::readers::alias_section::Alias::InstanceExport","value":"Alias::InstanceExport { instance, kind, export }","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3895},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":252511,"byte_end":252516,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Alias","qualname":"::readers::alias_section::Alias","value":"pub enum Alias<'a> {\n    OuterType {\n        relative_depth: u32,\n        index: u32,\n    },\n    OuterModule {\n        relative_depth: u32,\n        index: u32,\n    },\n    InstanceExport {\n        instance: u32,\n        kind: ExternalKind,\n        export: &'a str,\n    },\n}","parent":null,"children":[{"krate":0,"index":3897},{"krate":0,"index":3900},{"krate":0,"index":3903}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":252821,"byte_end":252824,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<AliasSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<AliasSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":253073,"byte_end":253090,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"original_position","qualname":"<AliasSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":253167,"byte_end":253176,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"get_count","qualname":"<AliasSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":253230,"byte_end":253234,"line_start":44,"line_end":44,"column_start":12,"column_end":16},"name":"read","qualname":"<AliasSectionReader>::read","value":"pub fn read(&mut Self) -> Result<Alias>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":256150,"byte_end":256162,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"FunctionBody","qualname":"::readers::code_section::FunctionBody","value":"FunctionBody {  }","parent":null,"children":[{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":256276,"byte_end":256279,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionBody>::new","value":"pub fn new(usize, &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":256437,"byte_end":256451,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"allow_memarg64","qualname":"<FunctionBody>::allow_memarg64","value":"pub fn allow_memarg64(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":256533,"byte_end":256550,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"get_binary_reader","qualname":"<FunctionBody>::get_binary_reader","value":"pub fn get_binary_reader<'b>(&Self) -> BinaryReader where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":257013,"byte_end":257030,"line_start":59,"line_end":59,"column_start":12,"column_end":29},"name":"get_locals_reader","qualname":"<FunctionBody>::get_locals_reader","value":"pub fn get_locals_reader<'b>(&Self) -> Result<LocalsReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":257287,"byte_end":257307,"line_start":68,"line_end":68,"column_start":12,"column_end":32},"name":"get_operators_reader","qualname":"<FunctionBody>::get_operators_reader","value":"pub fn get_operators_reader<'b>(&Self) -> Result<OperatorsReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":257712,"byte_end":257717,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"range","qualname":"<FunctionBody>::range","value":"pub fn range(&Self) -> Range","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":857},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":257862,"byte_end":257874,"line_start":88,"line_end":88,"column_start":12,"column_end":24},"name":"LocalsReader","qualname":"::readers::code_section::LocalsReader","value":"LocalsReader {  }","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":257969,"byte_end":257978,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"get_count","qualname":"<LocalsReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":258032,"byte_end":258049,"line_start":98,"line_end":98,"column_start":12,"column_end":29},"name":"original_position","qualname":"<LocalsReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":258126,"byte_end":258130,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"read","qualname":"<LocalsReader>::read","value":"pub fn read(&mut Self) -> Result<(u32, Type)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":866},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":258319,"byte_end":258336,"line_start":109,"line_end":109,"column_start":12,"column_end":29},"name":"CodeSectionReader","qualname":"::readers::code_section::CodeSectionReader","value":"CodeSectionReader {  }","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":875},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":258719,"byte_end":258733,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"LocalsIterator","qualname":"::readers::code_section::LocalsIterator","value":"LocalsIterator {  }","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":259321,"byte_end":259324,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<CodeSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<CodeSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":259571,"byte_end":259588,"line_start":157,"line_end":157,"column_start":12,"column_end":29},"name":"original_position","qualname":"<CodeSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":259665,"byte_end":259674,"line_start":161,"line_end":161,"column_start":12,"column_end":21},"name":"get_count","qualname":"<CodeSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260742,"byte_end":260746,"line_start":191,"line_end":191,"column_start":12,"column_end":16},"name":"read","qualname":"<CodeSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<FunctionBody> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the code section.","sig":null,"attributes":[{"value":"/ Reads content of the code section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260060,"byte_end":260098,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260103,"byte_end":260106,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260111,"byte_end":260125,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260130,"byte_end":260137,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::CodeSectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260142,"byte_end":260180,"line_start":179,"line_end":179,"column_start":5,"column_end":43}},{"value":"/ # let data: &[u8] = &[","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260185,"byte_end":260211,"line_start":180,"line_end":180,"column_start":5,"column_end":31}},{"value":"/ #     0x01, 0x03, 0x00, 0x01, 0x0b];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260216,"byte_end":260256,"line_start":181,"line_end":181,"column_start":5,"column_end":45}},{"value":"/ let mut code_reader = CodeSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260261,"byte_end":260328,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/ for _ in 0..code_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260333,"byte_end":260374,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/     let body = code_reader.read().expect(\"function body\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260379,"byte_end":260441,"line_start":184,"line_end":184,"column_start":5,"column_end":67}},{"value":"/     let mut binary_reader = body.get_binary_reader();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260446,"byte_end":260503,"line_start":185,"line_end":185,"column_start":5,"column_end":62}},{"value":"/     assert!(binary_reader.read_var_u32().expect(\"local count\") == 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260508,"byte_end":260581,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/     let op = binary_reader.read_operator().expect(\"first operator\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260586,"byte_end":260658,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/     println!(\"First operator: {:?}\", op);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260663,"byte_end":260708,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260713,"byte_end":260718,"line_start":189,"line_end":189,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":260723,"byte_end":260730,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3924},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263460,"byte_end":263464,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Data","qualname":"::readers::data_section::Data","value":"Data { kind, data }","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3926},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263479,"byte_end":263483,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"kind","qualname":"::readers::data_section::Data::kind","value":"readers::data_section::DataKind<'a>","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3927},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263507,"byte_end":263511,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"data","qualname":"::readers::data_section::Data::data","value":"&'a [u8]","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263584,"byte_end":263591,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"name":"Passive","qualname":"::readers::data_section::DataKind::Passive","value":"DataKind::Passive","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263597,"byte_end":263603,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Active","qualname":"::readers::data_section::DataKind::Active","value":"DataKind::Active { memory_index, init_expr }","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263565,"byte_end":263573,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"DataKind","qualname":"::readers::data_section::DataKind","value":"pub enum DataKind<'a> {\n    Passive,\n    Active {\n        memory_index: u32,\n        init_expr: InitExpr,\n    },\n}","parent":null,"children":[{"krate":0,"index":3938},{"krate":0,"index":3940}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3951},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263704,"byte_end":263721,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"DataSectionReader","qualname":"::readers::data_section::DataSectionReader","value":"DataSectionReader {  }","parent":null,"children":[{"krate":0,"index":3953},{"krate":0,"index":3954},{"krate":0,"index":3955}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263851,"byte_end":263854,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<DataSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<DataSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264173,"byte_end":264190,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"original_position","qualname":"<DataSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264267,"byte_end":264276,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"get_count","qualname":"<DataSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264330,"byte_end":264348,"line_start":62,"line_end":62,"column_start":12,"column_end":30},"name":"forbid_bulk_memory","qualname":"<DataSectionReader>::forbid_bulk_memory","value":"pub fn forbid_bulk_memory(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265541,"byte_end":265545,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"read","qualname":"<DataSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Data> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the data section.","sig":null,"attributes":[{"value":"/ Reads content of the data section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264767,"byte_end":264805,"line_start":76,"line_end":76,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264810,"byte_end":264813,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264818,"byte_end":264832,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264837,"byte_end":264844,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::{DataSectionReader, DataKind};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264849,"byte_end":264899,"line_start":80,"line_end":80,"column_start":5,"column_end":55}},{"value":"/ # let data: &[u8] = &[","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264904,"byte_end":264930,"line_start":81,"line_end":81,"column_start":5,"column_end":31}},{"value":"/ #     0x01, 0x00, 0x41, 0x80, 0x08, 0x0b, 0x04, 0x00, 0x00, 0x00, 0x00];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":264935,"byte_end":265011,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ let mut data_reader = DataSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265016,"byte_end":265083,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/ for _ in 0..data_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265088,"byte_end":265129,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/     let data = data_reader.read().expect(\"data\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265134,"byte_end":265187,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/     println!(\"Data: {:?}\", data);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265192,"byte_end":265229,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/     if let DataKind::Active { init_expr, .. } = data.kind {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265234,"byte_end":265297,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/         let mut init_expr_reader = init_expr.get_binary_reader();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265302,"byte_end":265371,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/         let op = init_expr_reader.read_operator().expect(\"op\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265376,"byte_end":265443,"line_start":89,"line_end":89,"column_start":5,"column_end":72}},{"value":"/         println!(\"Init const: {:?}\", op);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265448,"byte_end":265493,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265498,"byte_end":265507,"line_start":91,"line_end":91,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265512,"byte_end":265517,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":265522,"byte_end":265529,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3959},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268531,"byte_end":268538,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"Element","qualname":"::readers::element_section::Element","value":"Element { kind, items, ty }","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3963}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3961},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268553,"byte_end":268557,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"kind","qualname":"::readers::element_section::Element::kind","value":"readers::element_section::ElementKind<'a>","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3962},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268584,"byte_end":268589,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"items","qualname":"::readers::element_section::Element::items","value":"readers::element_section::ElementItems<'a>","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268617,"byte_end":268619,"line_start":26,"line_end":26,"column_start":9,"column_end":11},"name":"ty","qualname":"::readers::element_section::Element::ty","value":"primitives::Type","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268678,"byte_end":268685,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Passive","qualname":"::readers::element_section::ElementKind::Passive","value":"ElementKind::Passive","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3971},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268691,"byte_end":268697,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Active","qualname":"::readers::element_section::ElementKind::Active","value":"ElementKind::Active { table_index, init_expr }","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3974},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268770,"byte_end":268778,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Declared","qualname":"::readers::element_section::ElementKind::Declared","value":"ElementKind::Declared","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268656,"byte_end":268667,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"ElementKind","qualname":"::readers::element_section::ElementKind","value":"pub enum ElementKind<'a> {\n    Passive,\n    Active {\n        table_index: u32,\n        init_expr: InitExpr,\n    },\n    Declared,\n}","parent":null,"children":[{"krate":0,"index":3969},{"krate":0,"index":3971},{"krate":0,"index":3974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3979},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268824,"byte_end":268836,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"ElementItems","qualname":"::readers::element_section::ElementItems","value":"ElementItems {  }","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3994},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268950,"byte_end":268954,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Func","qualname":"::readers::element_section::ElementItem::Func","value":"ElementItem::Func(u32)","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3997},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268965,"byte_end":268969,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Expr","qualname":"::readers::element_section::ElementItem::Expr","value":"ElementItem::Expr(InitExpr)","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3992},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268928,"byte_end":268939,"line_start":47,"line_end":47,"column_start":10,"column_end":21},"name":"ElementItem","qualname":"::readers::element_section::ElementItem","value":"pub enum ElementItem<'a> { Func(u32), Expr(InitExpr), }","parent":null,"children":[{"krate":0,"index":3994},{"krate":0,"index":3997}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269027,"byte_end":269043,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"get_items_reader","qualname":"<ElementItems>::get_items_reader","value":"pub fn get_items_reader<'b>(&Self) -> Result<ElementItemsReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269209,"byte_end":269227,"line_start":61,"line_end":61,"column_start":12,"column_end":30},"name":"ElementItemsReader","qualname":"::readers::element_section::ElementItemsReader","value":"ElementItemsReader {  }","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269345,"byte_end":269348,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<ElementItemsReader>::new","value":"pub fn new(&[u8], usize, bool) -> Result<ElementItemsReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269655,"byte_end":269672,"line_start":78,"line_end":78,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ElementItemsReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269749,"byte_end":269758,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ElementItemsReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269812,"byte_end":269822,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"uses_exprs","qualname":"<ElementItemsReader>::uses_exprs","value":"pub fn uses_exprs(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269877,"byte_end":269881,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"read","qualname":"<ElementItemsReader>::read","value":"pub fn read(&mut Self) -> Result<ElementItem>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":270515,"byte_end":270535,"line_start":114,"line_end":114,"column_start":12,"column_end":32},"name":"ElementItemsIterator","qualname":"::readers::element_section::ElementItemsIterator","value":"ElementItemsIterator {  }","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4003},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271123,"byte_end":271143,"line_start":138,"line_end":138,"column_start":12,"column_end":32},"name":"ElementSectionReader","qualname":"::readers::element_section::ElementSectionReader","value":"ElementSectionReader {  }","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4006}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271246,"byte_end":271249,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<ElementSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ElementSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271502,"byte_end":271519,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ElementSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271596,"byte_end":271605,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ElementSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272620,"byte_end":272624,"line_start":180,"line_end":180,"column_start":12,"column_end":16},"name":"read","qualname":"<ElementSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Element> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the element section.","sig":null,"attributes":[{"value":"/ Reads content of the element section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271652,"byte_end":271693,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271698,"byte_end":271701,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271706,"byte_end":271720,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271725,"byte_end":271728,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271733,"byte_end":271746,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/ # let data: &[u8] = &[];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271751,"byte_end":271779,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ use wasmparser::{ElementSectionReader, ElementKind};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271784,"byte_end":271840,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/ let mut element_reader = ElementSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271845,"byte_end":271918,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ for _ in 0..element_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271923,"byte_end":271967,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/     let element = element_reader.read().expect(\"element\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271972,"byte_end":272034,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/     if let ElementKind::Active { init_expr, .. } = element.kind {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272039,"byte_end":272108,"line_start":168,"line_end":168,"column_start":5,"column_end":74}},{"value":"/         let mut init_expr_reader = init_expr.get_binary_reader();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272113,"byte_end":272182,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/         let op = init_expr_reader.read_operator().expect(\"op\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272187,"byte_end":272254,"line_start":170,"line_end":170,"column_start":5,"column_end":72}},{"value":"/         println!(\"Init const: {:?}\", op);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272259,"byte_end":272304,"line_start":171,"line_end":171,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272309,"byte_end":272318,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"/     let mut items_reader = element.items.get_items_reader().expect(\"items reader\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272323,"byte_end":272410,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/     for _ in 0..items_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272415,"byte_end":272461,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/         let item = items_reader.read().expect(\"item\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272466,"byte_end":272524,"line_start":175,"line_end":175,"column_start":5,"column_end":63}},{"value":"/         println!(\"  Item: {:?}\", item);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272529,"byte_end":272572,"line_start":176,"line_end":176,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272577,"byte_end":272586,"line_start":177,"line_end":177,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272591,"byte_end":272596,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":272601,"byte_end":272608,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4010},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":276622,"byte_end":276628,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Export","qualname":"::readers::export_section::Export","value":"Export { field, kind, index }","parent":null,"children":[{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":276643,"byte_end":276648,"line_start":23,"line_end":23,"column_start":9,"column_end":14},"name":"field","qualname":"::readers::export_section::Export::field","value":"&'a str","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4013},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":276667,"byte_end":276671,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"kind","qualname":"::readers::export_section::Export::kind","value":"primitives::ExternalKind","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4014},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":276695,"byte_end":276700,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"index","qualname":"::readers::export_section::Export::index","value":"u32","parent":{"krate":0,"index":4010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4023},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":276738,"byte_end":276757,"line_start":29,"line_end":29,"column_start":12,"column_end":31},"name":"ExportSectionReader","qualname":"::readers::export_section::ExportSectionReader","value":"ExportSectionReader {  }","parent":null,"children":[{"krate":0,"index":4025},{"krate":0,"index":4026}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":276859,"byte_end":276862,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<ExportSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ExportSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277113,"byte_end":277130,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ExportSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277207,"byte_end":277216,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ExportSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277724,"byte_end":277728,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"read","qualname":"<ExportSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Export> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the export section.","sig":null,"attributes":[{"value":"/ Reads content of the export section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277263,"byte_end":277303,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277308,"byte_end":277311,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277316,"byte_end":277330,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277335,"byte_end":277342,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::ExportSectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277347,"byte_end":277387,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277392,"byte_end":277395,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # let data: &[u8] = &[0x01, 0x01, 0x65, 0x00, 0x00];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277400,"byte_end":277456,"line_start":55,"line_end":55,"column_start":5,"column_end":61}},{"value":"/ let mut export_reader = ExportSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277461,"byte_end":277532,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ for _ in 0..export_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277537,"byte_end":277580,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"/     let export = export_reader.read().expect(\"export\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277585,"byte_end":277644,"line_start":58,"line_end":58,"column_start":5,"column_end":64}},{"value":"/     println!(\"Export: {:?}\", export);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277649,"byte_end":277690,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277695,"byte_end":277700,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":277705,"byte_end":277712,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4030},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":279548,"byte_end":279569,"line_start":21,"line_end":21,"column_start":12,"column_end":33},"name":"FunctionSectionReader","qualname":"::readers::function_section::FunctionSectionReader","value":"FunctionSectionReader {  }","parent":null,"children":[{"krate":0,"index":4032},{"krate":0,"index":4033}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":279673,"byte_end":279676,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<FunctionSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<FunctionSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":279931,"byte_end":279948,"line_start":33,"line_end":33,"column_start":12,"column_end":29},"name":"original_position","qualname":"<FunctionSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280025,"byte_end":280034,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"get_count","qualname":"<FunctionSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280566,"byte_end":280570,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"read","qualname":"<FunctionSectionReader>::read","value":"pub fn read(&mut Self) -> Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Reads function type index from the function section.","sig":null,"attributes":[{"value":"/ Reads function type index from the function section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280081,"byte_end":280137,"line_start":41,"line_end":41,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280142,"byte_end":280145,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280150,"byte_end":280164,"line_start":43,"line_end":43,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280169,"byte_end":280172,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280177,"byte_end":280184,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::FunctionSectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280189,"byte_end":280231,"line_start":46,"line_end":46,"column_start":5,"column_end":47}},{"value":"/ # let data: &[u8] = &[0x01, 0x00];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280236,"byte_end":280274,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"/ let mut function_reader = FunctionSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280279,"byte_end":280354,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ for _ in 0..function_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280359,"byte_end":280404,"line_start":49,"line_end":49,"column_start":5,"column_end":50}},{"value":"/     let ty = function_reader.read().expect(\"function type index\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280409,"byte_end":280479,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/     println!(\"Function type index: {}\", ty);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280484,"byte_end":280532,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280537,"byte_end":280542,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280547,"byte_end":280554,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282230,"byte_end":282236,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Global","qualname":"::readers::global_section::Global","value":"Global { ty, init_expr }","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4040}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4039},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282251,"byte_end":282253,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"ty","qualname":"::readers::global_section::Global::ty","value":"primitives::GlobalType","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4040},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282275,"byte_end":282284,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"name":"init_expr","qualname":"::readers::global_section::Global::init_expr","value":"readers::init_expr::InitExpr<'a>","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4049},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282331,"byte_end":282350,"line_start":28,"line_end":28,"column_start":12,"column_end":31},"name":"GlobalSectionReader","qualname":"::readers::global_section::GlobalSectionReader","value":"GlobalSectionReader {  }","parent":null,"children":[{"krate":0,"index":4051},{"krate":0,"index":4052}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282452,"byte_end":282455,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<GlobalSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<GlobalSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282706,"byte_end":282723,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"original_position","qualname":"<GlobalSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282800,"byte_end":282809,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"get_count","qualname":"<GlobalSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283518,"byte_end":283522,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"read","qualname":"<GlobalSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Global> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the global section.","sig":null,"attributes":[{"value":"/ Reads content of the global section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282856,"byte_end":282896,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282901,"byte_end":282904,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282909,"byte_end":282923,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282928,"byte_end":282935,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::GlobalSectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282940,"byte_end":282980,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ # let data: &[u8] = &[0x01, 0x7F, 0x01, 0x41, 0x90, 0x88, 0x04, 0x0B];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282985,"byte_end":283059,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ let mut global_reader = GlobalSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283064,"byte_end":283135,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ for _ in 0..global_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283140,"byte_end":283183,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/     let global = global_reader.read().expect(\"global\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283188,"byte_end":283247,"line_start":56,"line_end":56,"column_start":5,"column_end":64}},{"value":"/     println!(\"Global: {:?}\", global);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283252,"byte_end":283293,"line_start":57,"line_end":57,"column_start":5,"column_end":46}},{"value":"/     let mut init_expr_reader = global.init_expr.get_binary_reader();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283298,"byte_end":283370,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/     let op = init_expr_reader.read_operator().expect(\"op\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283375,"byte_end":283438,"line_start":59,"line_end":59,"column_start":5,"column_end":68}},{"value":"/     println!(\"Init const: {:?}\", op);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283443,"byte_end":283484,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283489,"byte_end":283494,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283499,"byte_end":283506,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4056},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285332,"byte_end":285338,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Import","qualname":"::readers::import_section::Import","value":"Import { module, field, ty }","parent":null,"children":[{"krate":0,"index":4058},{"krate":0,"index":4059},{"krate":0,"index":4060}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4058},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285353,"byte_end":285359,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"module","qualname":"::readers::import_section::Import::module","value":"&'a str","parent":{"krate":0,"index":4056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4059},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285378,"byte_end":285383,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"field","qualname":"::readers::import_section::Import::field","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":4056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4060},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285410,"byte_end":285412,"line_start":25,"line_end":25,"column_start":9,"column_end":11},"name":"ty","qualname":"::readers::import_section::Import::ty","value":"primitives::ImportSectionEntryType","parent":{"krate":0,"index":4056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4069},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285469,"byte_end":285488,"line_start":29,"line_end":29,"column_start":12,"column_end":31},"name":"ImportSectionReader","qualname":"::readers::import_section::ImportSectionReader","value":"ImportSectionReader {  }","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":4072}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285590,"byte_end":285593,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<ImportSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ImportSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285844,"byte_end":285861,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ImportSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285938,"byte_end":285947,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ImportSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286459,"byte_end":286463,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"read","qualname":"<ImportSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Import> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the import section.","sig":null,"attributes":[{"value":"/ Reads content of the import section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285994,"byte_end":286034,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286039,"byte_end":286042,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286047,"byte_end":286061,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286066,"byte_end":286073,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::ImportSectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286078,"byte_end":286118,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ # let data: &[u8] = &[0x01, 0x01, 0x41, 0x01, 0x66, 0x00, 0x00];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286123,"byte_end":286191,"line_start":54,"line_end":54,"column_start":5,"column_end":73}},{"value":"/ let mut import_reader = ImportSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286196,"byte_end":286267,"line_start":55,"line_end":55,"column_start":5,"column_end":76}},{"value":"/ for _ in 0..import_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286272,"byte_end":286315,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/     let import = import_reader.read().expect(\"import\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286320,"byte_end":286379,"line_start":57,"line_end":57,"column_start":5,"column_end":64}},{"value":"/     println!(\"Import: {:?}\", import);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286384,"byte_end":286425,"line_start":58,"line_end":58,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286430,"byte_end":286435,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286440,"byte_end":286447,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4076},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/init_expr.rs","byte_start":288068,"byte_end":288076,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"InitExpr","qualname":"::readers::init_expr::InitExpr","value":"InitExpr {  }","parent":null,"children":[{"krate":0,"index":4078},{"krate":0,"index":4079}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/init_expr.rs","byte_start":288160,"byte_end":288163,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<InitExpr>::new","value":"pub fn new(&[u8], usize) -> InitExpr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/init_expr.rs","byte_start":288258,"byte_end":288275,"line_start":29,"line_end":29,"column_start":12,"column_end":29},"name":"get_binary_reader","qualname":"<InitExpr>::get_binary_reader","value":"pub fn get_binary_reader<'b>(&Self) -> BinaryReader where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/init_expr.rs","byte_start":288419,"byte_end":288439,"line_start":36,"line_end":36,"column_start":12,"column_end":32},"name":"get_operators_reader","qualname":"<InitExpr>::get_operators_reader","value":"pub fn get_operators_reader<'b>(&Self) -> OperatorsReader where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4088},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":288747,"byte_end":288768,"line_start":7,"line_end":7,"column_start":12,"column_end":33},"name":"InstanceSectionReader","qualname":"::readers::instance_section::InstanceSectionReader","value":"InstanceSectionReader {  }","parent":null,"children":[{"krate":0,"index":4090},{"krate":0,"index":4091}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":288872,"byte_end":288875,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<InstanceSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<InstanceSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":289130,"byte_end":289147,"line_start":19,"line_end":19,"column_start":12,"column_end":29},"name":"original_position","qualname":"<InstanceSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":289224,"byte_end":289233,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"get_count","qualname":"<InstanceSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":289287,"byte_end":289291,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"read","qualname":"<InstanceSectionReader>::read","value":"pub fn read(&mut Self) -> Result<Instance>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4095},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":290674,"byte_end":290682,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"Instance","qualname":"::readers::instance_section::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":4097},{"krate":0,"index":4098}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":290774,"byte_end":290777,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<Instance>::new","value":"pub fn new(&'a [u8], usize) -> Result<Instance>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291194,"byte_end":291211,"line_start":96,"line_end":96,"column_start":12,"column_end":29},"name":"original_position","qualname":"<Instance>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291288,"byte_end":291294,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"module","qualname":"<Instance>::module","value":"pub fn module(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291349,"byte_end":291353,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"args","qualname":"<Instance>::args","value":"pub fn args(&Self) -> Result<InstanceArgsReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4102},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291636,"byte_end":291654,"line_start":116,"line_end":116,"column_start":12,"column_end":30},"name":"InstanceArgsReader","qualname":"::readers::instance_section::InstanceArgsReader","value":"InstanceArgsReader {  }","parent":null,"children":[{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4110},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291771,"byte_end":291782,"line_start":123,"line_end":123,"column_start":12,"column_end":23},"name":"InstanceArg","qualname":"::readers::instance_section::InstanceArg","value":"InstanceArg { name, kind, index }","parent":null,"children":[{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4112},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291797,"byte_end":291801,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"name":"name","qualname":"::readers::instance_section::InstanceArg::name","value":"&'a str","parent":{"krate":0,"index":4110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4113},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291820,"byte_end":291824,"line_start":125,"line_end":125,"column_start":9,"column_end":13},"name":"kind","qualname":"::readers::instance_section::InstanceArg::kind","value":"primitives::ExternalKind","parent":{"krate":0,"index":4110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4114},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291848,"byte_end":291853,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"name":"index","qualname":"::readers::instance_section::InstanceArg::index","value":"u32","parent":{"krate":0,"index":4110},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291908,"byte_end":291925,"line_start":130,"line_end":130,"column_start":12,"column_end":29},"name":"original_position","qualname":"<InstanceArgsReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":292002,"byte_end":292006,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"read","qualname":"<InstanceArgsReader>::read","value":"pub fn read(&mut Self) -> Result<InstanceArg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":293797,"byte_end":293817,"line_start":21,"line_end":21,"column_start":12,"column_end":32},"name":"LinkingSectionReader","qualname":"::readers::linking_section::LinkingSectionReader","value":"LinkingSectionReader {  }","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":293920,"byte_end":293923,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<LinkingSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<LinkingSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":294176,"byte_end":294185,"line_start":33,"line_end":33,"column_start":12,"column_end":21},"name":"get_count","qualname":"<LinkingSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":294239,"byte_end":294256,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"original_position","qualname":"<LinkingSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":294333,"byte_end":294337,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"read","qualname":"<LinkingSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<LinkingType> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4123},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296035,"byte_end":296054,"line_start":22,"line_end":22,"column_start":12,"column_end":31},"name":"MemorySectionReader","qualname":"::readers::memory_section::MemorySectionReader","value":"MemorySectionReader {  }","parent":null,"children":[{"krate":0,"index":4125},{"krate":0,"index":4126}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296156,"byte_end":296159,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<MemorySectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<MemorySectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296410,"byte_end":296427,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"original_position","qualname":"<MemorySectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296504,"byte_end":296513,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"get_count","qualname":"<MemorySectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":297001,"byte_end":297005,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"read","qualname":"<MemorySectionReader>::read","value":"pub fn read(&mut Self) -> Result<MemoryType>","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the memory section.","sig":null,"attributes":[{"value":"/ Reads content of the memory section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296560,"byte_end":296600,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296605,"byte_end":296608,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296613,"byte_end":296627,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296632,"byte_end":296639,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::MemorySectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296644,"byte_end":296684,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ # let data: &[u8] = &[0x01, 0x00, 0x02];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296689,"byte_end":296733,"line_start":47,"line_end":47,"column_start":5,"column_end":49}},{"value":"/ let mut memory_reader = MemorySectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296738,"byte_end":296809,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ for _ in 0..memory_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296814,"byte_end":296857,"line_start":49,"line_end":49,"column_start":5,"column_end":48}},{"value":"/     let memory = memory_reader.read().expect(\"memory\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296862,"byte_end":296921,"line_start":50,"line_end":50,"column_start":5,"column_end":64}},{"value":"/     println!(\"Memory: {:?}\", memory);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296926,"byte_end":296967,"line_start":51,"line_end":51,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296972,"byte_end":296977,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296982,"byte_end":296989,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":298043,"byte_end":298062,"line_start":6,"line_end":6,"column_start":12,"column_end":31},"name":"ModuleSectionReader","qualname":"::readers::module_section::ModuleSectionReader","value":"ModuleSectionReader {  }","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4130},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":298146,"byte_end":298158,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"NestedModule","qualname":"::readers::module_section::NestedModule","value":"NestedModule {  }","parent":null,"children":[{"krate":0,"index":4132}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":298244,"byte_end":298247,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ModuleSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":298498,"byte_end":298515,"line_start":23,"line_end":23,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ModuleSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":298592,"byte_end":298601,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ModuleSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":299001,"byte_end":299005,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"read","qualname":"<ModuleSectionReader>::read","value":"pub fn read(&mut Self) -> Result<NestedModule>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":300378,"byte_end":300387,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"raw_bytes","qualname":"<NestedModule>::raw_bytes","value":"pub fn raw_bytes(&Self) -> (usize, &'a [u8])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":300498,"byte_end":300515,"line_start":93,"line_end":93,"column_start":12,"column_end":29},"name":"original_position","qualname":"<NestedModule>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4136},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":301347,"byte_end":301357,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"SingleName","qualname":"::readers::name_section::SingleName","value":"SingleName {  }","parent":null,"children":[{"krate":0,"index":4138},{"krate":0,"index":4139}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":301443,"byte_end":301451,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"get_name","qualname":"<SingleName>::get_name","value":"pub fn get_name<'b>(&Self) -> Result<&'b str> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":301641,"byte_end":301658,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"original_position","qualname":"<SingleName>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1486},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":301717,"byte_end":301729,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"NamingReader","qualname":"::readers::name_section::NamingReader","value":"NamingReader {  }","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":302289,"byte_end":302306,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"original_position","qualname":"<NamingReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":302383,"byte_end":302392,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"get_count","qualname":"<NamingReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":302446,"byte_end":302450,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"read","qualname":"<NamingReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Naming> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4148},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":302701,"byte_end":302708,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"NameMap","qualname":"::readers::name_section::NameMap","value":"NameMap {  }","parent":null,"children":[{"krate":0,"index":4150},{"krate":0,"index":4151}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":302791,"byte_end":302798,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_map","qualname":"<NameMap>::get_map","value":"pub fn get_map<'b>(&Self) -> Result<NamingReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":302938,"byte_end":302955,"line_start":94,"line_end":94,"column_start":12,"column_end":29},"name":"original_position","qualname":"<NameMap>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4160},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303044,"byte_end":303058,"line_start":100,"line_end":100,"column_start":12,"column_end":26},"name":"IndirectNaming","qualname":"::readers::name_section::IndirectNaming","value":"IndirectNaming { indirect_index }","parent":null,"children":[{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4162},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303073,"byte_end":303087,"line_start":101,"line_end":101,"column_start":9,"column_end":23},"name":"indirect_index","qualname":"::readers::name_section::IndirectNaming::indirect_index","value":"u32","parent":{"krate":0,"index":4160},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303177,"byte_end":303184,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_map","qualname":"<IndirectNaming>::get_map","value":"pub fn get_map<'b>(&Self) -> Result<NamingReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303324,"byte_end":303341,"line_start":114,"line_end":114,"column_start":12,"column_end":29},"name":"original_position","qualname":"<IndirectNaming>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1508},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303400,"byte_end":303420,"line_start":119,"line_end":119,"column_start":12,"column_end":32},"name":"IndirectNamingReader","qualname":"::readers::name_section::IndirectNamingReader","value":"IndirectNamingReader {  }","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1511}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303775,"byte_end":303793,"line_start":131,"line_end":131,"column_start":12,"column_end":30},"name":"get_indirect_count","qualname":"<IndirectNamingReader>::get_indirect_count","value":"pub fn get_indirect_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303847,"byte_end":303864,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"original_position","qualname":"<IndirectNamingReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303941,"byte_end":303945,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"read","qualname":"<IndirectNamingReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<IndirectNaming> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4173},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304433,"byte_end":304448,"line_start":156,"line_end":156,"column_start":12,"column_end":27},"name":"IndirectNameMap","qualname":"::readers::name_section::IndirectNameMap","value":"IndirectNameMap {  }","parent":null,"children":[{"krate":0,"index":4175},{"krate":0,"index":4176}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304539,"byte_end":304555,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"get_indirect_map","qualname":"<IndirectNameMap>::get_indirect_map","value":"pub fn get_indirect_map<'b>(&Self) -> Result<IndirectNamingReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304711,"byte_end":304728,"line_start":169,"line_end":169,"column_start":12,"column_end":29},"name":"original_position","qualname":"<IndirectNameMap>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4187},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304830,"byte_end":304836,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"Module","qualname":"::readers::name_section::Name::Module","value":"Name::Module(SingleName)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4190},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304858,"byte_end":304866,"line_start":177,"line_end":177,"column_start":5,"column_end":13},"name":"Function","qualname":"::readers::name_section::Name::Function","value":"Name::Function(NameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4193},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304885,"byte_end":304890,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Local","qualname":"::readers::name_section::Name::Local","value":"Name::Local(IndirectNameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4196},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304917,"byte_end":304922,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Label","qualname":"::readers::name_section::Name::Label","value":"Name::Label(IndirectNameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4199},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304949,"byte_end":304953,"line_start":180,"line_end":180,"column_start":5,"column_end":9},"name":"Type","qualname":"::readers::name_section::Name::Type","value":"Name::Type(NameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4202},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304972,"byte_end":304977,"line_start":181,"line_end":181,"column_start":5,"column_end":10},"name":"Table","qualname":"::readers::name_section::Name::Table","value":"Name::Table(NameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4205},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304996,"byte_end":305002,"line_start":182,"line_end":182,"column_start":5,"column_end":11},"name":"Memory","qualname":"::readers::name_section::Name::Memory","value":"Name::Memory(NameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4208},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305021,"byte_end":305027,"line_start":183,"line_end":183,"column_start":5,"column_end":11},"name":"Global","qualname":"::readers::name_section::Name::Global","value":"Name::Global(NameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4211},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305046,"byte_end":305053,"line_start":184,"line_end":184,"column_start":5,"column_end":12},"name":"Element","qualname":"::readers::name_section::Name::Element","value":"Name::Element(NameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4214},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305072,"byte_end":305076,"line_start":185,"line_end":185,"column_start":5,"column_end":9},"name":"Data","qualname":"::readers::name_section::Name::Data","value":"Name::Data(NameMap)","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4217},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305207,"byte_end":305214,"line_start":187,"line_end":187,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::readers::name_section::Name::Unknown","value":"Name::Unknown { ty, data, range }","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":" An unknown [name subsection](https://webassembly.github.io/spec/core/appendix/custom.html#subsections).\n","sig":null,"attributes":[{"value":"/ An unknown [name subsection](https://webassembly.github.io/spec/core/appendix/custom.html#subsections).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305095,"byte_end":305202,"line_start":186,"line_end":186,"column_start":5,"column_end":112}}]},{"kind":"Enum","id":{"krate":0,"index":4185},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304815,"byte_end":304819,"line_start":175,"line_end":175,"column_start":10,"column_end":14},"name":"Name","qualname":"::readers::name_section::Name","value":"pub enum Name<'a> {\n    Module(SingleName),\n    Function(NameMap),\n    Local(IndirectNameMap),\n    Label(IndirectNameMap),\n    Type(NameMap),\n    Table(NameMap),\n    Memory(NameMap),\n    Global(NameMap),\n    Element(NameMap),\n    Data(NameMap),\n    Unknown {\n        ty: u32,\n        data: &'a [u8],\n        range: Range,\n    },\n}","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4196},{"krate":0,"index":4199},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4211},{"krate":0,"index":4214},{"krate":0,"index":4217}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305537,"byte_end":305554,"line_start":198,"line_end":198,"column_start":12,"column_end":29},"name":"NameSectionReader","qualname":"::readers::name_section::NameSectionReader","value":"NameSectionReader {  }","parent":null,"children":[{"krate":0,"index":1526}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305638,"byte_end":305641,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"new","qualname":"<NameSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<NameSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":306172,"byte_end":306175,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"eof","qualname":"<NameSectionReader>::eof","value":"pub fn eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":306237,"byte_end":306254,"line_start":223,"line_end":223,"column_start":12,"column_end":29},"name":"original_position","qualname":"<NameSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":306331,"byte_end":306335,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"read","qualname":"<NameSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Name> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4229},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":309123,"byte_end":309138,"line_start":19,"line_end":19,"column_start":12,"column_end":27},"name":"OperatorsReader","qualname":"::readers::operators::OperatorsReader","value":"OperatorsReader {  }","parent":null,"children":[{"krate":0,"index":4231}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":309451,"byte_end":309454,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"eof","qualname":"<OperatorsReader>::eof","value":"pub fn eof(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":309516,"byte_end":309533,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"original_position","qualname":"<OperatorsReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":309610,"byte_end":309624,"line_start":41,"line_end":41,"column_start":12,"column_end":26},"name":"allow_memarg64","qualname":"<OperatorsReader>::allow_memarg64","value":"pub fn allow_memarg64(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":309712,"byte_end":309722,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"ensure_end","qualname":"<OperatorsReader>::ensure_end","value":"pub fn ensure_end(&Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":309972,"byte_end":309976,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"read","qualname":"<OperatorsReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<Operator> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":310102,"byte_end":310124,"line_start":62,"line_end":62,"column_start":12,"column_end":34},"name":"into_iter_with_offsets","qualname":"<OperatorsReader>::into_iter_with_offsets","value":"pub fn into_iter_with_offsets<'b>(Self) -> OperatorsIteratorWithOffsets where\n'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":310320,"byte_end":310336,"line_start":72,"line_end":72,"column_start":12,"column_end":28},"name":"read_with_offset","qualname":"<OperatorsReader>::read_with_offset","value":"pub fn read_with_offset<'b>(&mut Self) -> Result<(Operator, usize)> where\n'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":311575,"byte_end":311592,"line_start":112,"line_end":112,"column_start":12,"column_end":29},"name":"OperatorsIterator","qualname":"::readers::operators::OperatorsIterator","value":"OperatorsIterator {  }","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":311978,"byte_end":312006,"line_start":130,"line_end":130,"column_start":12,"column_end":40},"name":"OperatorsIteratorWithOffsets","qualname":"::readers::operators::OperatorsIteratorWithOffsets","value":"OperatorsIteratorWithOffsets {  }","parent":null,"children":[{"krate":0,"index":1590},{"krate":0,"index":1591}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4235},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314019,"byte_end":314038,"line_start":21,"line_end":21,"column_start":12,"column_end":31},"name":"ProducersFieldValue","qualname":"::readers::producers_section::ProducersFieldValue","value":"ProducersFieldValue { name, version }","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4238}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4237},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314053,"byte_end":314057,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"name","qualname":"::readers::producers_section::ProducersFieldValue::name","value":"&'a str","parent":{"krate":0,"index":4235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4238},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314076,"byte_end":314083,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"version","qualname":"::readers::producers_section::ProducersFieldValue::version","value":"&'a str","parent":{"krate":0,"index":4235},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314108,"byte_end":314134,"line_start":26,"line_end":26,"column_start":12,"column_end":38},"name":"ProducersFieldValuesReader","qualname":"::readers::producers_section::ProducersFieldValuesReader","value":"ProducersFieldValuesReader {  }","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1619}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314243,"byte_end":314252,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ProducersFieldValuesReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314306,"byte_end":314323,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ProducersFieldValuesReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314611,"byte_end":314615,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"read","qualname":"<ProducersFieldValuesReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<ProducersFieldValue> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":315235,"byte_end":315263,"line_start":71,"line_end":71,"column_start":12,"column_end":40},"name":"ProducersFieldValuesIterator","qualname":"::readers::producers_section::ProducersFieldValuesIterator","value":"ProducersFieldValuesIterator {  }","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4247},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":315888,"byte_end":315902,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"ProducersField","qualname":"::readers::producers_section::ProducersField","value":"ProducersField { name }","parent":null,"children":[{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4249},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":315917,"byte_end":315921,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"name","qualname":"::readers::producers_section::ProducersField::name","value":"&'a str","parent":{"krate":0,"index":4247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316052,"byte_end":316084,"line_start":103,"line_end":103,"column_start":12,"column_end":44},"name":"get_producer_field_values_reader","qualname":"<ProducersField>::get_producer_field_values_reader","value":"pub fn get_producer_field_values_reader<'b>(&Self)\n-> Result<ProducersFieldValuesReader> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316368,"byte_end":316390,"line_start":114,"line_end":114,"column_start":12,"column_end":34},"name":"ProducersSectionReader","qualname":"::readers::producers_section::ProducersSectionReader","value":"ProducersSectionReader {  }","parent":null,"children":[{"krate":0,"index":1648},{"krate":0,"index":1649}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317431,"byte_end":317434,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<ProducersSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<ProducersSectionReader>","parent":null,"children":[],"decl_id":null,"docs":" Creates reader for the producers section.","sig":null,"attributes":[{"value":"/ Creates reader for the producers section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316488,"byte_end":316533,"line_start":120,"line_end":120,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316538,"byte_end":316541,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316546,"byte_end":316560,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316565,"byte_end":316572,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # let data: &[u8] = &[0x01, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316577,"byte_end":316662,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/ #     0x02, 0x03, 0x77, 0x61, 0x74, 0x01, 0x31, 0x01, 0x43, 0x03, 0x39, 0x2e, 0x30];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316667,"byte_end":316755,"line_start":125,"line_end":125,"column_start":5,"column_end":93}},{"value":"/ use wasmparser::{ProducersSectionReader, ProducersFieldValue, Result};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316760,"byte_end":316834,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"/ let mut reader = ProducersSectionReader::new(data, 0).expect(\"producers reader\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316839,"byte_end":316924,"line_start":127,"line_end":127,"column_start":5,"column_end":90}},{"value":"/ let field = reader.read().expect(\"producers field\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316929,"byte_end":316985,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/ assert!(field.name == \"language\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316990,"byte_end":317028,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/ let mut values_reader = field.get_producer_field_values_reader().expect(\"values reader\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317033,"byte_end":317126,"line_start":130,"line_end":130,"column_start":5,"column_end":98}},{"value":"/ let value = values_reader.into_iter().collect::<Result<Vec<ProducersFieldValue>>>().expect(\"values\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317131,"byte_end":317236,"line_start":131,"line_end":131,"column_start":5,"column_end":110}},{"value":"/ assert!(value.len() == 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317241,"byte_end":317271,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/ assert!(value[0].name == \"wat\" && value[0].version == \"1\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317276,"byte_end":317339,"line_start":133,"line_end":133,"column_start":5,"column_end":68}},{"value":"/ assert!(value[1].name == \"C\" && value[1].version == \"9.0\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317344,"byte_end":317407,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317412,"byte_end":317419,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317691,"byte_end":317708,"line_start":142,"line_end":142,"column_start":12,"column_end":29},"name":"original_position","qualname":"<ProducersSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317785,"byte_end":317794,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"get_count","qualname":"<ProducersSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":317848,"byte_end":317852,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"read","qualname":"<ProducersSectionReader>::read","value":"pub fn read<'b>(&mut Self) -> Result<ProducersField> where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4261},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320065,"byte_end":320070,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Reloc","qualname":"::readers::reloc_section::Reloc","value":"Reloc { ty, offset, index, addend }","parent":null,"children":[{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4262},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320081,"byte_end":320083,"line_start":23,"line_end":23,"column_start":9,"column_end":11},"name":"ty","qualname":"::readers::reloc_section::Reloc::ty","value":"primitives::RelocType","parent":{"krate":0,"index":4261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4263},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320104,"byte_end":320110,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"offset","qualname":"::readers::reloc_section::Reloc::offset","value":"u32","parent":{"krate":0,"index":4261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320125,"byte_end":320130,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"index","qualname":"::readers::reloc_section::Reloc::index","value":"u32","parent":{"krate":0,"index":4261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4265},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320145,"byte_end":320151,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"addend","qualname":"::readers::reloc_section::Reloc::addend","value":"std::option::Option<u32>","parent":{"krate":0,"index":4261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320180,"byte_end":320198,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"RelocSectionReader","qualname":"::readers::reloc_section::RelocSectionReader","value":"RelocSectionReader {  }","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320334,"byte_end":320337,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<RelocSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<RelocSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320833,"byte_end":320842,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"get_count","qualname":"<RelocSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320896,"byte_end":320912,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"get_section_code","qualname":"<RelocSectionReader>::get_section_code","value":"pub fn get_section_code<'b>(&Self) -> SectionCode where 'a:'b","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":321019,"byte_end":321036,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"original_position","qualname":"<RelocSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":321113,"byte_end":321117,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"read","qualname":"<RelocSectionReader>::read","value":"pub fn read(&mut Self) -> Result<Reloc>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323267,"byte_end":323280,"line_start":18,"line_end":18,"column_start":11,"column_end":24},"name":"SectionReader","qualname":"::readers::section_reader::SectionReader","value":"SectionReader","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323292,"byte_end":323296,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"Item","qualname":"::readers::section_reader::SectionReader::Item","value":"type Item;","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323305,"byte_end":323309,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"read","qualname":"::readers::section_reader::SectionReader::read","value":"pub fn read(&mut Self) -> Result<Self::Item>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323351,"byte_end":323354,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"eof","qualname":"::readers::section_reader::SectionReader::eof","value":"pub fn eof(&Self) -> bool","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323378,"byte_end":323395,"line_start":22,"line_end":22,"column_start":8,"column_end":25},"name":"original_position","qualname":"::readers::section_reader::SectionReader::original_position","value":"pub fn original_position(&Self) -> usize","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323420,"byte_end":323425,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"range","qualname":"::readers::section_reader::SectionReader::range","value":"pub fn range(&Self) -> Range","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323450,"byte_end":323460,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"ensure_end","qualname":"::readers::section_reader::SectionReader::ensure_end","value":"pub fn ensure_end(&Self) -> Result<()>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323706,"byte_end":323729,"line_start":35,"line_end":35,"column_start":11,"column_end":34},"name":"SectionWithLimitedItems","qualname":"::readers::section_reader::SectionWithLimitedItems","value":"SectionWithLimitedItems","parent":null,"children":[{"krate":0,"index":1745}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323739,"byte_end":323748,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"get_count","qualname":"::readers::section_reader::SectionWithLimitedItems::get_count","value":"pub fn get_count(&Self) -> u32","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323778,"byte_end":323793,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"SectionIterator","qualname":"::readers::section_reader::SectionIterator","value":"SectionIterator {  }","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323928,"byte_end":323931,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<SectionIterator<R>>::new","value":"pub fn new(R) -> SectionIterator<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":324370,"byte_end":324392,"line_start":72,"line_end":72,"column_start":12,"column_end":34},"name":"SectionIteratorLimited","qualname":"::readers::section_reader::SectionIteratorLimited","value":"SectionIteratorLimited {  }","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":324601,"byte_end":324604,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<SectionIteratorLimited<R>>::new","value":"pub fn new(R) -> SectionIteratorLimited<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4271},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326328,"byte_end":326346,"line_start":22,"line_end":22,"column_start":12,"column_end":30},"name":"TableSectionReader","qualname":"::readers::table_section::TableSectionReader","value":"TableSectionReader {  }","parent":null,"children":[{"krate":0,"index":4273},{"krate":0,"index":4274}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326447,"byte_end":326450,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<TableSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<TableSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326699,"byte_end":326716,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"original_position","qualname":"<TableSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326793,"byte_end":326802,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"get_count","qualname":"<TableSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327300,"byte_end":327304,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"read","qualname":"<TableSectionReader>::read","value":"pub fn read(&mut Self) -> Result<TableType>","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the table section.","sig":null,"attributes":[{"value":"/ Reads content of the table section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326849,"byte_end":326888,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326893,"byte_end":326896,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326901,"byte_end":326915,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326920,"byte_end":326927,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::TableSectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326932,"byte_end":326971,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326976,"byte_end":326979,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # let data: &[u8] = &[0x01, 0x70, 0x01, 0x01, 0x01];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326984,"byte_end":327040,"line_start":48,"line_end":48,"column_start":5,"column_end":61}},{"value":"/ let mut table_reader = TableSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327045,"byte_end":327114,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/ for _ in 0..table_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327119,"byte_end":327161,"line_start":50,"line_end":50,"column_start":5,"column_end":47}},{"value":"/     let table = table_reader.read().expect(\"table\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327166,"byte_end":327222,"line_start":51,"line_end":51,"column_start":5,"column_end":61}},{"value":"/     println!(\"Table: {:?}\", table);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327227,"byte_end":327266,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327271,"byte_end":327276,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327281,"byte_end":327288,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4278},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":328938,"byte_end":328954,"line_start":22,"line_end":22,"column_start":12,"column_end":28},"name":"TagSectionReader","qualname":"::readers::tag_section::TagSectionReader","value":"TagSectionReader {  }","parent":null,"children":[{"krate":0,"index":4280},{"krate":0,"index":4281}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329053,"byte_end":329056,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<TagSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<TagSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329301,"byte_end":329318,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"original_position","qualname":"<TagSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329395,"byte_end":329404,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"get_count","qualname":"<TagSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329865,"byte_end":329869,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"read","qualname":"<TagSectionReader>::read","value":"pub fn read(&mut Self) -> Result<TagType>","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the tag section.","sig":null,"attributes":[{"value":"/ Reads content of the tag section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329451,"byte_end":329488,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329493,"byte_end":329496,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329501,"byte_end":329515,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329520,"byte_end":329527,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::TagSectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329532,"byte_end":329569,"line_start":46,"line_end":46,"column_start":5,"column_end":42}},{"value":"/ # let data: &[u8] = &[0x01, 0x00, 0x01];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329574,"byte_end":329618,"line_start":47,"line_end":47,"column_start":5,"column_end":49}},{"value":"/ let mut tag_reader = TagSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329623,"byte_end":329688,"line_start":48,"line_end":48,"column_start":5,"column_end":70}},{"value":"/ for _ in 0..tag_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329693,"byte_end":329733,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/     let et = tag_reader.read().expect(\"tag_type\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329738,"byte_end":329792,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/     println!(\"Tag: {:?}\", et);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329797,"byte_end":329831,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329836,"byte_end":329841,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329846,"byte_end":329853,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4285},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":331500,"byte_end":331517,"line_start":22,"line_end":22,"column_start":12,"column_end":29},"name":"TypeSectionReader","qualname":"::readers::type_section::TypeSectionReader","value":"TypeSectionReader {  }","parent":null,"children":[{"krate":0,"index":4287},{"krate":0,"index":4288}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":331617,"byte_end":331620,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeSectionReader>::new","value":"pub fn new(&'a [u8], usize) -> Result<TypeSectionReader>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":331867,"byte_end":331884,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"original_position","qualname":"<TypeSectionReader>::original_position","value":"pub fn original_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":331961,"byte_end":331970,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"get_count","qualname":"<TypeSectionReader>::get_count","value":"pub fn get_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332439,"byte_end":332443,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"read","qualname":"<TypeSectionReader>::read","value":"pub fn read(&mut Self) -> Result<TypeDef>","parent":null,"children":[],"decl_id":null,"docs":" Reads content of the type section.","sig":null,"attributes":[{"value":"/ Reads content of the type section.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332017,"byte_end":332055,"line_start":42,"line_end":42,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332060,"byte_end":332063,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332068,"byte_end":332082,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332087,"byte_end":332094,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ use wasmparser::TypeSectionReader;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332099,"byte_end":332137,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/ # let data: &[u8] = &[0x01, 0x60, 0x00, 0x00];","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332142,"byte_end":332192,"line_start":47,"line_end":47,"column_start":5,"column_end":55}},{"value":"/ let mut type_reader = TypeSectionReader::new(data, 0).unwrap();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332197,"byte_end":332264,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ for _ in 0..type_reader.get_count() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332269,"byte_end":332310,"line_start":49,"line_end":49,"column_start":5,"column_end":46}},{"value":"/     let ty = type_reader.read().expect(\"type\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332315,"byte_end":332366,"line_start":50,"line_end":50,"column_start":5,"column_end":56}},{"value":"/     println!(\"Type {:?}\", ty);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332371,"byte_end":332405,"line_start":51,"line_end":51,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332410,"byte_end":332415,"line_start":52,"line_end":52,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332420,"byte_end":332427,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335803,"byte_end":335811,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"validate","qualname":"::validator::validate","value":"pub fn validate(&[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Test whether the given buffer contains a valid WebAssembly module,\n analogous to [`WebAssembly.validate`][js] in the JS API.","sig":null,"attributes":[{"value":"/ Test whether the given buffer contains a valid WebAssembly module,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335195,"byte_end":335265,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ analogous to [`WebAssembly.validate`][js] in the JS API.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335266,"byte_end":335326,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335327,"byte_end":335330,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This functions requires the wasm module is entirely resident in memory and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335331,"byte_end":335409,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ is specified by `bytes`. Additionally this validates the given bytes with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335410,"byte_end":335487,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ the default set of WebAssembly features implemented by `wasmparser`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335488,"byte_end":335560,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335561,"byte_end":335564,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ For more fine-tuned control over validation it's recommended to review the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335565,"byte_end":335643,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ documentation of [`Validator`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335644,"byte_end":335679,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335680,"byte_end":335683,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [js]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/validate","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":335684,"byte_end":335795,"line_start":37,"line_end":37,"column_start":1,"column_end":112}}]},{"kind":"Struct","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411762,"byte_end":411775,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"FuncValidator","qualname":"::validator::func::FuncValidator","value":"FuncValidator {  }","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2031}],"decl_id":null,"docs":" Validation context for a WebAssembly function.","sig":null,"attributes":[{"value":"/ Validation context for a WebAssembly function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411377,"byte_end":411427,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411428,"byte_end":411431,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This structure is created by","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411432,"byte_end":411464,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/ [`Validator::code_section_entry`](crate::Validator::code_section_entry)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411465,"byte_end":411540,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ and is created per-function in a WebAssembly module. This structure is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411541,"byte_end":411615,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ suitable for sending to other threads while the original","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411616,"byte_end":411676,"line_start":10,"line_end":10,"column_start":1,"column_end":61}},{"value":"/ [`Validator`](crate::Validator) continues processing other functions.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411677,"byte_end":411750,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412381,"byte_end":412384,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<FuncValidator<T>>::new","value":"pub fn new(u32, usize, T, &WasmFeatures) -> Result<FuncValidator<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FuncValidator`.","sig":null,"attributes":[{"value":"/ Creates a new `FuncValidator`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411888,"byte_end":411922,"line_start":18,"line_end":18,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411927,"byte_end":411930,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The returned `FuncValidator` can be used to validate a function with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411935,"byte_end":412007,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the type `ty` specified. The `resources` indicate what the containing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412012,"byte_end":412085,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ module has for the function to use, and the `features` configure what","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412090,"byte_end":412163,"line_start":22,"line_end":22,"column_start":5,"column_end":78}},{"value":"/ WebAssembly proposals are enabled for this function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412168,"byte_end":412224,"line_start":23,"line_end":23,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412229,"byte_end":412232,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ The returned validator can be used to then parse a [`FunctionBody`], for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412237,"byte_end":412313,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ example, to read locals and validate operators.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412318,"byte_end":412369,"line_start":26,"line_end":26,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412865,"byte_end":412885,"line_start":43,"line_end":43,"column_start":12,"column_end":32},"name":"operand_stack_height","qualname":"<FuncValidator<T>>::operand_stack_height","value":"pub fn operand_stack_height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the current height of the operand stack.","sig":null,"attributes":[{"value":"/ Get the current height of the operand stack.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412671,"byte_end":412719,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412724,"byte_end":412727,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ This returns the height of the whole operand stack for this function,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412732,"byte_end":412805,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ not just for the current control frame.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412810,"byte_end":412853,"line_start":42,"line_end":42,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413177,"byte_end":413185,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"validate","qualname":"<FuncValidator<T>>::validate","value":"pub fn validate(&mut Self, &FunctionBody) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to validate an entire function's body.","sig":null,"attributes":[{"value":"/ Convenience function to validate an entire function's body.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":412958,"byte_end":413021,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413026,"byte_end":413029,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ You may not end up using this in final implementations because you'll","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413034,"byte_end":413107,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ often want to interleave validation with parsing.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413112,"byte_end":413165,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413887,"byte_end":413898,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"read_locals","qualname":"<FuncValidator<T>>::read_locals","value":"pub fn read_locals(&mut Self, &mut BinaryReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads the local defintions from the given `BinaryReader`, often sourced\n from a `FunctionBody`.","sig":null,"attributes":[{"value":"/ Reads the local defintions from the given `BinaryReader`, often sourced","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413621,"byte_end":413696,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ from a `FunctionBody`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413701,"byte_end":413727,"line_start":64,"line_end":64,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413732,"byte_end":413735,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function will automatically advance the `BinaryReader` forward,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413740,"byte_end":413812,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ leaving reading operators up to the caller afterwards.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":413817,"byte_end":413875,"line_start":67,"line_end":67,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414432,"byte_end":414445,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"define_locals","qualname":"<FuncValidator<T>>::define_locals","value":"pub fn define_locals(&mut Self, usize, u32, Type) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Defines locals into this validator.","sig":null,"attributes":[{"value":"/ Defines locals into this validator.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414229,"byte_end":414268,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414273,"byte_end":414276,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This should be used if the application is already reading local","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414281,"byte_end":414348,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ definitions and there's no need to re-parse the function again.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414353,"byte_end":414420,"line_start":81,"line_end":81,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414897,"byte_end":414899,"line_start":92,"line_end":92,"column_start":12,"column_end":14},"name":"op","qualname":"<FuncValidator<T>>::op","value":"pub fn op(&mut Self, usize, &Operator) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates the next operator in a function.","sig":null,"attributes":[{"value":"/ Validates the next operator in a function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414577,"byte_end":414623,"line_start":86,"line_end":86,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414628,"byte_end":414631,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This functions is expected to be called once-per-operator in a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414636,"byte_end":414702,"line_start":88,"line_end":88,"column_start":5,"column_end":71}},{"value":"/ WebAssembly function. Each operator's offset in the original binary and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414707,"byte_end":414782,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ the operator itself are passed to this function to provide more useful","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414787,"byte_end":414861,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"/ error messages.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":414866,"byte_end":414885,"line_start":91,"line_end":91,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415529,"byte_end":415535,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"finish","qualname":"<FuncValidator<T>>::finish","value":"pub fn finish(&mut Self, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Function that must be called after the last opcode has been processed.","sig":null,"attributes":[{"value":"/ Function that must be called after the last opcode has been processed.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415122,"byte_end":415196,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415201,"byte_end":415204,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This will validate that the function was properly terminated with the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415209,"byte_end":415282,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ `end` opcode. If this function is not called then the function will not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415287,"byte_end":415362,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ be properly validated.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415367,"byte_end":415393,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415398,"byte_end":415401,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The `offset` provided to this function will be used as a position for an","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415406,"byte_end":415482,"line_start":105,"line_end":105,"column_start":5,"column_end":81}},{"value":"/ error if validation fails.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415487,"byte_end":415517,"line_start":106,"line_end":106,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415757,"byte_end":415766,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"resources","qualname":"<FuncValidator<T>>::resources","value":"pub fn resources(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying module resources that this validator is using.\n","sig":null,"attributes":[{"value":"/ Returns the underlying module resources that this validator is using.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":415672,"byte_end":415745,"line_start":112,"line_end":112,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":4292},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":337568,"byte_end":337577,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"Validator","qualname":"::validator::Validator","value":"Validator {  }","parent":null,"children":[{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4297}],"decl_id":null,"docs":" Validator for a WebAssembly binary module.","sig":null,"attributes":[{"value":"/ Validator for a WebAssembly binary module.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336113,"byte_end":336159,"line_start":51,"line_end":51,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336160,"byte_end":336163,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This structure encapsulates state necessary to validate a WebAssembly","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336164,"byte_end":336237,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ binary. This implements validation as defined by the [core","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336238,"byte_end":336300,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/ specification][core]. A `Validator` is designed, like","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336301,"byte_end":336358,"line_start":55,"line_end":55,"column_start":1,"column_end":58}},{"value":"/ [`Parser`], to accept incremental input over time.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336359,"byte_end":336413,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/ Additionally a `Validator` is also designed for parallel validation of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336414,"byte_end":336488,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ functions as they are received.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336489,"byte_end":336524,"line_start":58,"line_end":58,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336525,"byte_end":336528,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ It's expected that you'll be using a [`Parser`] in tandem with a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336529,"byte_end":336597,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/ `Validator`. As each [`Payload`](crate::Payload) is received from a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336598,"byte_end":336669,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/ [`Parser`] you'll pass it into a `Validator` to test the validity of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336670,"byte_end":336746,"line_start":62,"line_end":62,"column_start":1,"column_end":77}},{"value":"/ payload. Note that all payloads received from a [`Parser`] are expected to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336747,"byte_end":336825,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ be passed to a [`Validator`]. For example if you receive","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336826,"byte_end":336886,"line_start":64,"line_end":64,"column_start":1,"column_end":61}},{"value":"/ [`Payload::TypeSection`](crate::Payload) you'll call","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336887,"byte_end":336943,"line_start":65,"line_end":65,"column_start":1,"column_end":57}},{"value":"/ [`Validator::type_section`] to validate this.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336944,"byte_end":336993,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336994,"byte_end":336997,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The design of [`Validator`] is intended that you'll interleave, in your own","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":336998,"byte_end":337077,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ application's processing, calls to validation. Each variant, after it's","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":337078,"byte_end":337153,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/ received, will be validated and then your application would proceed as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":337154,"byte_end":337228,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/ usual. At all times, however, you'll have access to the [`Validator`] and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":337229,"byte_end":337306,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ the validation context up to that point. This enables applications to check","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":337307,"byte_end":337386,"line_start":72,"line_end":72,"column_start":1,"column_end":80}},{"value":"/ the types of functions and learn how many globals there are, for example.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":337387,"byte_end":337464,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":337465,"byte_end":337468,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [core]: https://webassembly.github.io/spec/core/valid/index.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":337469,"byte_end":337537,"line_start":75,"line_end":75,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4327},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":340829,"byte_end":340841,"line_start":158,"line_end":158,"column_start":12,"column_end":24},"name":"WasmFeatures","qualname":"::validator::WasmFeatures","value":"WasmFeatures { reference_types, multi_value, bulk_memory, module_linking, simd, threads, tail_call, deterministic_only, multi_memory, exceptions, memory64 }","parent":null,"children":[{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4338}],"decl_id":null,"docs":" Flags for features that are enabled for validation.\n","sig":null,"attributes":[{"value":"/ Flags for features that are enabled for validation.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":340726,"byte_end":340781,"line_start":156,"line_end":156,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4328},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":340922,"byte_end":340937,"line_start":160,"line_end":160,"column_start":9,"column_end":24},"name":"reference_types","qualname":"::validator::WasmFeatures::reference_types","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly reference types proposal (enabled by default)\n","sig":null,"attributes":[{"value":"/ The WebAssembly reference types proposal (enabled by default)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":340848,"byte_end":340913,"line_start":159,"line_end":159,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":4329},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341019,"byte_end":341030,"line_start":162,"line_end":162,"column_start":9,"column_end":20},"name":"multi_value","qualname":"::validator::WasmFeatures::multi_value","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly multi-value proposal (enabled by default)\n","sig":null,"attributes":[{"value":"/ The WebAssembly multi-value proposal (enabled by default)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":340949,"byte_end":341010,"line_start":161,"line_end":161,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":4330},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341123,"byte_end":341134,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"name":"bulk_memory","qualname":"::validator::WasmFeatures::bulk_memory","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly bulk memory operations proposal (enabled by default)\n","sig":null,"attributes":[{"value":"/ The WebAssembly bulk memory operations proposal (enabled by default)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341042,"byte_end":341114,"line_start":163,"line_end":163,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":4331},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341198,"byte_end":341212,"line_start":166,"line_end":166,"column_start":9,"column_end":23},"name":"module_linking","qualname":"::validator::WasmFeatures::module_linking","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly module linking proposal\n","sig":null,"attributes":[{"value":"/ The WebAssembly module linking proposal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341146,"byte_end":341189,"line_start":165,"line_end":165,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341266,"byte_end":341270,"line_start":168,"line_end":168,"column_start":9,"column_end":13},"name":"simd","qualname":"::validator::WasmFeatures::simd","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly SIMD proposal\n","sig":null,"attributes":[{"value":"/ The WebAssembly SIMD proposal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341224,"byte_end":341257,"line_start":167,"line_end":167,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4333},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341327,"byte_end":341334,"line_start":170,"line_end":170,"column_start":9,"column_end":16},"name":"threads","qualname":"::validator::WasmFeatures::threads","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly threads proposal\n","sig":null,"attributes":[{"value":"/ The WebAssembly threads proposal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341282,"byte_end":341318,"line_start":169,"line_end":169,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4334},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341393,"byte_end":341402,"line_start":172,"line_end":172,"column_start":9,"column_end":18},"name":"tail_call","qualname":"::validator::WasmFeatures::tail_call","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly tail-call proposal\n","sig":null,"attributes":[{"value":"/ The WebAssembly tail-call proposal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341346,"byte_end":341384,"line_start":171,"line_end":171,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":4335},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341485,"byte_end":341503,"line_start":174,"line_end":174,"column_start":9,"column_end":27},"name":"deterministic_only","qualname":"::validator::WasmFeatures::deterministic_only","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" Whether or not only deterministic instructions are allowed\n","sig":null,"attributes":[{"value":"/ Whether or not only deterministic instructions are allowed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341414,"byte_end":341476,"line_start":173,"line_end":173,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":4336},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341565,"byte_end":341577,"line_start":176,"line_end":176,"column_start":9,"column_end":21},"name":"multi_memory","qualname":"::validator::WasmFeatures::multi_memory","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly multi memory proposal\n","sig":null,"attributes":[{"value":"/ The WebAssembly multi memory proposal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341515,"byte_end":341556,"line_start":175,"line_end":175,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4337},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341645,"byte_end":341655,"line_start":178,"line_end":178,"column_start":9,"column_end":19},"name":"exceptions","qualname":"::validator::WasmFeatures::exceptions","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly exception handling proposal\n","sig":null,"attributes":[{"value":"/ The WebAssembly exception handling proposal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341589,"byte_end":341636,"line_start":177,"line_end":177,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4338},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341713,"byte_end":341721,"line_start":180,"line_end":180,"column_start":9,"column_end":17},"name":"memory64","qualname":"::validator::WasmFeatures::memory64","value":"bool","parent":{"krate":0,"index":4327},"children":[],"decl_id":null,"docs":" The WebAssembly memory64 proposal\n","sig":null,"attributes":[{"value":"/ The WebAssembly memory64 proposal","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341667,"byte_end":341704,"line_start":179,"line_end":179,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344010,"byte_end":344012,"line_start":286,"line_end":286,"column_start":5,"column_end":7},"name":"Ok","qualname":"::validator::ValidPayload::Ok","value":"ValidPayload::Ok","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":" The payload validated, no further action need be taken.\n","sig":null,"attributes":[{"value":"/ The payload validated, no further action need be taken.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":343946,"byte_end":344005,"line_start":285,"line_end":285,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344235,"byte_end":344244,"line_start":291,"line_end":291,"column_start":5,"column_end":14},"name":"Submodule","qualname":"::validator::ValidPayload::Submodule","value":"ValidPayload::Submodule(Parser)","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":" The payload validated, but it started a nested module.","sig":null,"attributes":[{"value":"/ The payload validated, but it started a nested module.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344018,"byte_end":344076,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344081,"byte_end":344084,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This result indicates that the specified parser should be used instead","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344089,"byte_end":344163,"line_start":289,"line_end":289,"column_start":5,"column_end":79}},{"value":"/ of the currently-used parser until this returned one ends.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344168,"byte_end":344230,"line_start":290,"line_end":290,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344303,"byte_end":344307,"line_start":293,"line_end":293,"column_start":5,"column_end":9},"name":"Func","qualname":"::validator::ValidPayload::Func","value":"ValidPayload::Func(FuncValidator<ValidatorResources>, FunctionBody)","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":" A function was found to be validate.\n","sig":null,"attributes":[{"value":"/ A function was found to be validate.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344258,"byte_end":344298,"line_start":292,"line_end":292,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":343923,"byte_end":343935,"line_start":284,"line_end":284,"column_start":10,"column_end":22},"name":"ValidPayload","qualname":"::validator::ValidPayload","value":"pub enum ValidPayload<'a> {\n    Ok,\n    Submodule(Parser),\n    Func(FuncValidator<ValidatorResources>, FunctionBody),\n}","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2077}],"decl_id":null,"docs":" Possible return values from [`Validator::payload`].\n","sig":null,"attributes":[{"value":"/ Possible return values from [`Validator::payload`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":343858,"byte_end":343913,"line_start":283,"line_end":283,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344646,"byte_end":344649,"line_start":302,"line_end":302,"column_start":12,"column_end":15},"name":"new","qualname":"<Validator>::new","value":"pub fn new() -> Validator","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Validator`] ready to validate a WebAssembly module.","sig":null,"attributes":[{"value":"/ Creates a new [`Validator`] ready to validate a WebAssembly module.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344386,"byte_end":344457,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344462,"byte_end":344465,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The new validator will receive payloads parsed from","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344470,"byte_end":344525,"line_start":299,"line_end":299,"column_start":5,"column_end":60}},{"value":"/ [`Parser`], and expects the first payload received to be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344530,"byte_end":344590,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ the version header from the parser.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344595,"byte_end":344634,"line_start":301,"line_end":301,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344788,"byte_end":344801,"line_start":307,"line_end":307,"column_start":12,"column_end":25},"name":"wasm_features","qualname":"<Validator>::wasm_features","value":"pub fn wasm_features(&mut Self, WasmFeatures) -> &mut Validator","parent":null,"children":[],"decl_id":null,"docs":" Configures the enabled WebAssembly features for this `Validator`.\n","sig":null,"attributes":[{"value":"/ Configures the enabled WebAssembly features for this `Validator`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344707,"byte_end":344776,"line_start":306,"line_end":306,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345320,"byte_end":345332,"line_start":319,"line_end":319,"column_start":12,"column_end":24},"name":"validate_all","qualname":"<Validator>::validate_all","value":"pub fn validate_all(&mut Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates an entire in-memory module with this validator.","sig":null,"attributes":[{"value":"/ Validates an entire in-memory module with this validator.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344915,"byte_end":344976,"line_start":312,"line_end":312,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344981,"byte_end":344984,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This function will internally create a [`Parser`] to parse the `bytes`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344989,"byte_end":345063,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ provided. The entire wasm module specified by `bytes` will be parsed and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345068,"byte_end":345144,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ validated. Parse and validation errors will be returned through","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345149,"byte_end":345216,"line_start":316,"line_end":316,"column_start":5,"column_end":72}},{"value":"/ `Err(_)`, and otherwise a successful validation means `Ok(())` is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345221,"byte_end":345290,"line_start":317,"line_end":317,"column_start":5,"column_end":74}},{"value":"/ returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345295,"byte_end":345308,"line_start":318,"line_end":318,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346619,"byte_end":346626,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"payload","qualname":"<Validator>::payload","value":"pub fn payload<'a>(&mut Self, &Payload) -> Result<ValidPayload>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to validate a single [`Payload`].","sig":null,"attributes":[{"value":"/ Convenience function to validate a single [`Payload`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345770,"byte_end":345828,"line_start":333,"line_end":333,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345833,"byte_end":345836,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used as a convenience. It will","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345841,"byte_end":345907,"line_start":335,"line_end":335,"column_start":5,"column_end":71}},{"value":"/ internally perform any validation necessary to validate the [`Payload`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345912,"byte_end":345987,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ provided. The convenience part is that you're likely already going to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":345992,"byte_end":346065,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ be matching on [`Payload`] in your application, at which point it's more","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346070,"byte_end":346146,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ appropriate to call the individual methods on [`Validator`] per-variant","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346151,"byte_end":346226,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ in [`Payload`], such as [`Validator::type_section`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346231,"byte_end":346287,"line_start":340,"line_end":340,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346292,"byte_end":346295,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`ValidPayload`] variant on success, indicating","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346300,"byte_end":346375,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/ one of a few possible actions that need to be taken after a payload is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346380,"byte_end":346454,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ validated. For example function contents are not validated here, they're","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346459,"byte_end":346535,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ returned through [`ValidPayload`] for validation by the caller.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":346540,"byte_end":346607,"line_start":345,"line_end":345,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":348800,"byte_end":348807,"line_start":395,"line_end":395,"column_start":12,"column_end":19},"name":"version","qualname":"<Validator>::version","value":"pub fn version(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::Version`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::Version`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":348738,"byte_end":348788,"line_start":394,"line_end":394,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":354396,"byte_end":354408,"line_start":557,"line_end":557,"column_start":12,"column_end":24},"name":"type_section","qualname":"<Validator>::type_section","value":"pub fn type_section(&mut Self, &crate::TypeSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::TypeSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::TypeSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":354330,"byte_end":354384,"line_start":556,"line_end":556,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":361662,"byte_end":361676,"line_start":754,"line_end":754,"column_start":12,"column_end":26},"name":"import_section","qualname":"<Validator>::import_section","value":"pub fn import_section(&mut Self, &crate::ImportSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ImportSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ImportSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":361594,"byte_end":361650,"line_start":753,"line_end":753,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":365255,"byte_end":365275,"line_start":835,"line_end":835,"column_start":12,"column_end":32},"name":"module_section_start","qualname":"<Validator>::module_section_start","value":"pub fn module_section_start(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ModuleSectionStart`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ModuleSectionStart`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":365182,"byte_end":365243,"line_start":834,"line_end":834,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":366097,"byte_end":366117,"line_start":857,"line_end":857,"column_start":12,"column_end":32},"name":"module_section_entry","qualname":"<Validator>::module_section_entry","value":"pub fn module_section_entry(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ModuleSectionEntry`](crate::Payload).","sig":null,"attributes":[{"value":"/ Validates [`Payload::ModuleSectionEntry`](crate::Payload).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":365751,"byte_end":365813,"line_start":851,"line_end":851,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":365818,"byte_end":365821,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ Note that this does not actually perform any validation itself. The","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":365826,"byte_end":365897,"line_start":853,"line_end":853,"column_start":5,"column_end":76}},{"value":"/ `ModuleSectionEntry` payload is associated with a sub-parser for the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":365902,"byte_end":365974,"line_start":854,"line_end":854,"column_start":5,"column_end":77}},{"value":"/ sub-module, and it's expected that the events from the [`Parser`]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":365979,"byte_end":366048,"line_start":855,"line_end":855,"column_start":5,"column_end":74}},{"value":"/ are fed into this validator.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":366053,"byte_end":366085,"line_start":856,"line_end":856,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":366402,"byte_end":366415,"line_start":865,"line_end":865,"column_start":12,"column_end":25},"name":"alias_section","qualname":"<Validator>::alias_section","value":"pub fn alias_section(&mut Self, &crate::AliasSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::AliasSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::AliasSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":366335,"byte_end":366390,"line_start":864,"line_end":864,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":370664,"byte_end":370680,"line_start":965,"line_end":965,"column_start":12,"column_end":28},"name":"instance_section","qualname":"<Validator>::instance_section","value":"pub fn instance_section(&mut Self, &crate::InstanceSectionReader)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::InstanceSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::InstanceSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":370594,"byte_end":370652,"line_start":964,"line_end":964,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":377209,"byte_end":377225,"line_start":1127,"line_end":1127,"column_start":12,"column_end":28},"name":"function_section","qualname":"<Validator>::function_section","value":"pub fn function_section(&mut Self, &crate::FunctionSectionReader)\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::FunctionSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::FunctionSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":377139,"byte_end":377197,"line_start":1126,"line_end":1126,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":378196,"byte_end":378209,"line_start":1155,"line_end":1155,"column_start":12,"column_end":25},"name":"table_section","qualname":"<Validator>::table_section","value":"pub fn table_section(&mut Self, &crate::TableSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::TableSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::TableSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":378129,"byte_end":378184,"line_start":1154,"line_end":1154,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":378788,"byte_end":378802,"line_start":1177,"line_end":1177,"column_start":12,"column_end":26},"name":"memory_section","qualname":"<Validator>::memory_section","value":"pub fn memory_section(&mut Self, &crate::MemorySectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":379236,"byte_end":379247,"line_start":1191,"line_end":1191,"column_start":12,"column_end":23},"name":"tag_section","qualname":"<Validator>::tag_section","value":"pub fn tag_section(&mut Self, &crate::TagSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":379901,"byte_end":379915,"line_start":1210,"line_end":1210,"column_start":12,"column_end":26},"name":"global_section","qualname":"<Validator>::global_section","value":"pub fn global_section(&mut Self, &crate::GlobalSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::GlobalSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::GlobalSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":379833,"byte_end":379889,"line_start":1209,"line_end":1209,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":383435,"byte_end":383449,"line_start":1301,"line_end":1301,"column_start":12,"column_end":26},"name":"export_section","qualname":"<Validator>::export_section","value":"pub fn export_section(&mut Self, &crate::ExportSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ExportSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ExportSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":383367,"byte_end":383423,"line_start":1300,"line_end":1300,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":386250,"byte_end":386263,"line_start":1372,"line_end":1372,"column_start":12,"column_end":25},"name":"start_section","qualname":"<Validator>::start_section","value":"pub fn start_section(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::StartSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::StartSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":386183,"byte_end":386238,"line_start":1371,"line_end":1371,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":386673,"byte_end":386688,"line_start":1383,"line_end":1383,"column_start":12,"column_end":27},"name":"element_section","qualname":"<Validator>::element_section","value":"pub fn element_section(&mut Self, &crate::ElementSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::ElementSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::ElementSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":386604,"byte_end":386661,"line_start":1382,"line_end":1382,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":388996,"byte_end":389014,"line_start":1438,"line_end":1438,"column_start":12,"column_end":30},"name":"data_count_section","qualname":"<Validator>::data_count_section","value":"pub fn data_count_section(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::DataCountSection`](crate::Payload)\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::DataCountSection`](crate::Payload)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":388925,"byte_end":388984,"line_start":1437,"line_end":1437,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":389464,"byte_end":389482,"line_start":1449,"line_end":1449,"column_start":12,"column_end":30},"name":"code_section_start","qualname":"<Validator>::code_section_start","value":"pub fn code_section_start(&mut Self, u32, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::CodeSectionStart`](crate::Payload).\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::CodeSectionStart`](crate::Payload).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":389392,"byte_end":389452,"line_start":1448,"line_end":1448,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391361,"byte_end":391379,"line_start":1487,"line_end":1487,"column_start":12,"column_end":30},"name":"code_section_entry","qualname":"<Validator>::code_section_entry","value":"pub fn code_section_entry(&mut Self)\n-> Result<FuncValidator<ValidatorResources>>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::CodeSectionEntry`](crate::Payload).","sig":null,"attributes":[{"value":"/ Validates [`Payload::CodeSectionEntry`](crate::Payload).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":390551,"byte_end":390611,"line_start":1474,"line_end":1474,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":390616,"byte_end":390619,"line_start":1475,"line_end":1475,"column_start":5,"column_end":8}},{"value":"/ This function will prepare a [`FuncValidator`] which can be used to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":390624,"byte_end":390695,"line_start":1476,"line_end":1476,"column_start":5,"column_end":76}},{"value":"/ validate the function. The function body provided will be parsed only","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":390700,"byte_end":390773,"line_start":1477,"line_end":1477,"column_start":5,"column_end":78}},{"value":"/ enough to create the function validation context. After this the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":390778,"byte_end":390846,"line_start":1478,"line_end":1478,"column_start":5,"column_end":73}},{"value":"/ [`OperatorsReader`](crate::readers::OperatorsReader) returned can be used to read the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":390851,"byte_end":390940,"line_start":1479,"line_end":1479,"column_start":5,"column_end":94}},{"value":"/ opcodes of the function as well as feed information into the validator.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":390945,"byte_end":391020,"line_start":1480,"line_end":1480,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391025,"byte_end":391028,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ Note that the returned [`FuncValidator`] is \"connected\" to this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391033,"byte_end":391100,"line_start":1482,"line_end":1482,"column_start":5,"column_end":72}},{"value":"/ [`Validator`] in that it uses the internal context of this validator for","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391105,"byte_end":391181,"line_start":1483,"line_end":1483,"column_start":5,"column_end":81}},{"value":"/ validating the function. The [`FuncValidator`] can be sent to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391186,"byte_end":391251,"line_start":1484,"line_end":1484,"column_start":5,"column_end":70}},{"value":"/ another thread, for example, to offload actual processing of functions","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391256,"byte_end":391330,"line_start":1485,"line_end":1485,"column_start":5,"column_end":79}},{"value":"/ elsewhere.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391335,"byte_end":391349,"line_start":1486,"line_end":1486,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391786,"byte_end":391798,"line_start":1495,"line_end":1495,"column_start":12,"column_end":24},"name":"data_section","qualname":"<Validator>::data_section","value":"pub fn data_section(&mut Self, &crate::DataSectionReader) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::DataSection`](crate::Payload).\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::DataSection`](crate::Payload).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":391719,"byte_end":391774,"line_start":1494,"line_end":1494,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":392670,"byte_end":392685,"line_start":1518,"line_end":1518,"column_start":12,"column_end":27},"name":"unknown_section","qualname":"<Validator>::unknown_section","value":"pub fn unknown_section(&mut Self, u8, &Range) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::UnknownSection`](crate::Payload).","sig":null,"attributes":[{"value":"/ Validates [`Payload::UnknownSection`](crate::Payload).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":392549,"byte_end":392607,"line_start":1515,"line_end":1515,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":392612,"byte_end":392615,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ Currently always returns an error.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":392620,"byte_end":392658,"line_start":1517,"line_end":1517,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":392908,"byte_end":392911,"line_start":1524,"line_end":1524,"column_start":12,"column_end":15},"name":"end","qualname":"<Validator>::end","value":"pub fn end(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Validates [`Payload::End`](crate::Payload).\n","sig":null,"attributes":[{"value":"/ Validates [`Payload::End`](crate::Payload).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":392849,"byte_end":392896,"line_start":1523,"line_end":1523,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":398864,"byte_end":398882,"line_start":1712,"line_end":1712,"column_start":12,"column_end":30},"name":"ValidatorResources","qualname":"::validator::ValidatorResources","value":"","parent":null,"children":[],"decl_id":null,"docs":" The implementation of [`WasmModuleResources`] used by [`Validator`].\n","sig":null,"attributes":[{"value":"/ The implementation of [`WasmModuleResources`] used by [`Validator`].","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":398780,"byte_end":398852,"line_start":1711,"line_end":1711,"column_start":1,"column_end":73}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3107,"byte_end":3112,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3784,"byte_end":3796,"line_start":77,"line_end":77,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71386,"byte_end":71393,"line_start":1933,"line_end":1933,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":73046,"byte_end":73053,"line_start":1983,"line_end":1983,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78046,"byte_end":78064,"line_start":89,"line_end":89,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78406,"byte_end":78424,"line_start":106,"line_end":106,"column_start":33,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78654,"byte_end":78672,"line_start":117,"line_end":117,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78794,"byte_end":78812,"line_start":126,"line_end":126,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79244,"byte_end":79263,"line_start":143,"line_end":143,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79606,"byte_end":79625,"line_start":160,"line_end":160,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79856,"byte_end":79875,"line_start":171,"line_end":171,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79997,"byte_end":80016,"line_start":180,"line_end":180,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":82977,"byte_end":82980,"line_start":264,"line_end":264,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":84052,"byte_end":84060,"line_start":311,"line_end":311,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":86422,"byte_end":86444,"line_start":49,"line_end":49,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":89123,"byte_end":89140,"line_start":121,"line_end":121,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":167582,"byte_end":167588,"line_start":1991,"line_end":1991,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":167873,"byte_end":167879,"line_start":2005,"line_end":2005,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":168174,"byte_end":168180,"line_start":2018,"line_end":2018,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":168541,"byte_end":168542,"line_start":2032,"line_end":2032,"column_start":70,"column_end":71},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181301,"byte_end":181307,"line_start":249,"line_end":249,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":642},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":208573,"byte_end":208579,"line_start":885,"line_end":885,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":208663,"byte_end":208670,"line_start":891,"line_end":891,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":225959,"byte_end":225976,"line_start":37,"line_end":37,"column_start":16,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":226003,"byte_end":226020,"line_start":39,"line_end":39,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":226220,"byte_end":226237,"line_start":49,"line_end":49,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231297,"byte_end":231307,"line_start":238,"line_end":238,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233590,"byte_end":233596,"line_start":339,"line_end":339,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233889,"byte_end":233895,"line_start":352,"line_end":352,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234048,"byte_end":234052,"line_start":361,"line_end":361,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":252785,"byte_end":252803,"line_start":29,"line_end":29,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":254584,"byte_end":254602,"line_start":80,"line_end":80,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":254995,"byte_end":255013,"line_start":97,"line_end":97,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":255132,"byte_end":255150,"line_start":103,"line_end":103,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":256246,"byte_end":256258,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":257939,"byte_end":257951,"line_start":93,"line_end":93,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":258418,"byte_end":258430,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":258825,"byte_end":258839,"line_start":133,"line_end":133,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":259286,"byte_end":259303,"line_start":150,"line_end":150,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":261279,"byte_end":261296,"line_start":208,"line_end":208,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":261693,"byte_end":261710,"line_start":224,"line_end":224,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":261828,"byte_end":261845,"line_start":230,"line_end":230,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263816,"byte_end":263833,"line_start":43,"line_end":43,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":266964,"byte_end":266981,"line_start":133,"line_end":133,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":267370,"byte_end":267387,"line_start":149,"line_end":149,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":267505,"byte_end":267522,"line_start":155,"line_end":155,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268997,"byte_end":269009,"line_start":52,"line_end":52,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269309,"byte_end":269327,"line_start":67,"line_end":67,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":270192,"byte_end":270210,"line_start":101,"line_end":101,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":270633,"byte_end":270653,"line_start":120,"line_end":120,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271208,"byte_end":271228,"line_start":143,"line_end":143,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":275061,"byte_end":275081,"line_start":253,"line_end":253,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":275479,"byte_end":275499,"line_start":269,"line_end":269,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":275620,"byte_end":275640,"line_start":275,"line_end":275,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":276822,"byte_end":276841,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":278027,"byte_end":278046,"line_start":73,"line_end":73,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":278441,"byte_end":278460,"line_start":89,"line_end":89,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":278580,"byte_end":278599,"line_start":95,"line_end":95,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":279634,"byte_end":279655,"line_start":26,"line_end":26,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280670,"byte_end":280691,"line_start":59,"line_end":59,"column_start":28,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":281083,"byte_end":281104,"line_start":75,"line_end":75,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":281226,"byte_end":281247,"line_start":81,"line_end":81,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282415,"byte_end":282434,"line_start":33,"line_end":33,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283770,"byte_end":283789,"line_start":73,"line_end":73,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":284184,"byte_end":284203,"line_start":89,"line_end":89,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":284323,"byte_end":284342,"line_start":95,"line_end":95,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285553,"byte_end":285572,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286603,"byte_end":286622,"line_start":69,"line_end":69,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":287017,"byte_end":287036,"line_start":85,"line_end":85,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":287156,"byte_end":287175,"line_start":91,"line_end":91,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/init_expr.rs","byte_start":288134,"byte_end":288142,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":288833,"byte_end":288854,"line_start":12,"line_end":12,"column_start":10,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":289848,"byte_end":289869,"line_start":45,"line_end":45,"column_start":28,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":290271,"byte_end":290292,"line_start":62,"line_end":62,"column_start":38,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":290414,"byte_end":290435,"line_start":68,"line_end":68,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":290748,"byte_end":290756,"line_start":83,"line_end":83,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291872,"byte_end":291890,"line_start":129,"line_end":129,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":292295,"byte_end":292313,"line_start":144,"line_end":144,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":292714,"byte_end":292732,"line_start":161,"line_end":161,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":292826,"byte_end":292844,"line_start":167,"line_end":167,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":293882,"byte_end":293902,"line_start":26,"line_end":26,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":294489,"byte_end":294509,"line_start":49,"line_end":49,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":294907,"byte_end":294927,"line_start":65,"line_end":65,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":295048,"byte_end":295068,"line_start":71,"line_end":71,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296119,"byte_end":296138,"line_start":27,"line_end":27,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":297116,"byte_end":297135,"line_start":59,"line_end":59,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":297530,"byte_end":297549,"line_start":75,"line_end":75,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":297669,"byte_end":297688,"line_start":81,"line_end":81,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":298207,"byte_end":298226,"line_start":16,"line_end":16,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":299547,"byte_end":299566,"line_start":56,"line_end":56,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":299968,"byte_end":299987,"line_start":73,"line_end":73,"column_start":38,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":300107,"byte_end":300126,"line_start":79,"line_end":79,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":300348,"byte_end":300360,"line_start":88,"line_end":88,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":301415,"byte_end":301425,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":301794,"byte_end":301806,"line_start":46,"line_end":46,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":302766,"byte_end":302773,"line_start":86,"line_end":86,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1500},{"krate":0,"index":1502}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303145,"byte_end":303159,"line_start":106,"line_end":106,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303485,"byte_end":303505,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304506,"byte_end":304521,"line_start":161,"line_end":161,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1521},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305603,"byte_end":305620,"line_start":202,"line_end":202,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":307818,"byte_end":307835,"line_start":259,"line_end":259,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":308224,"byte_end":308241,"line_start":275,"line_end":275,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":309198,"byte_end":309213,"line_start":23,"line_end":23,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":310535,"byte_end":310550,"line_start":81,"line_end":81,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":311672,"byte_end":311689,"line_start":117,"line_end":117,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":312086,"byte_end":312114,"line_start":135,"line_end":135,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314199,"byte_end":314225,"line_start":31,"line_end":31,"column_start":10,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314880,"byte_end":314906,"line_start":58,"line_end":58,"column_start":27,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":315369,"byte_end":315397,"line_start":77,"line_end":77,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316020,"byte_end":316034,"line_start":102,"line_end":102,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316455,"byte_end":316477,"line_start":119,"line_end":119,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":318466,"byte_end":318488,"line_start":168,"line_end":168,"column_start":28,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":318897,"byte_end":318919,"line_start":184,"line_end":184,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":319042,"byte_end":319064,"line_start":190,"line_end":190,"column_start":27,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320298,"byte_end":320316,"line_start":35,"line_end":35,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":321847,"byte_end":321865,"line_start":89,"line_end":89,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":322253,"byte_end":322271,"line_start":105,"line_end":105,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":322390,"byte_end":322408,"line_start":111,"line_end":111,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323868,"byte_end":323883,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":324044,"byte_end":324059,"line_start":56,"line_end":56,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1755},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":324508,"byte_end":324530,"line_start":81,"line_end":81,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":324821,"byte_end":324843,"line_start":95,"line_end":95,"column_start":22,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326411,"byte_end":326429,"line_start":27,"line_end":27,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327413,"byte_end":327431,"line_start":60,"line_end":60,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327823,"byte_end":327841,"line_start":76,"line_end":76,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327960,"byte_end":327978,"line_start":82,"line_end":82,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329019,"byte_end":329035,"line_start":27,"line_end":27,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329974,"byte_end":329990,"line_start":59,"line_end":59,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":330376,"byte_end":330392,"line_start":75,"line_end":75,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":330509,"byte_end":330525,"line_start":81,"line_end":81,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":331582,"byte_end":331599,"line_start":27,"line_end":27,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332995,"byte_end":333012,"line_start":69,"line_end":69,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":333404,"byte_end":333421,"line_start":85,"line_end":85,"column_start":38,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":333539,"byte_end":333556,"line_start":91,"line_end":91,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411865,"byte_end":411878,"line_start":17,"line_end":17,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341749,"byte_end":341761,"line_start":183,"line_end":183,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":342593,"byte_end":342598,"line_start":224,"line_end":224,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2050}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":342756,"byte_end":342763,"line_start":236,"line_end":236,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344370,"byte_end":344379,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2120},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2127},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":394869,"byte_end":394878,"line_start":1568,"line_end":1568,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":396255,"byte_end":396267,"line_start":1622,"line_end":1622,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":397183,"byte_end":397194,"line_start":1652,"line_end":1652,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":398932,"byte_end":398950,"line_start":1714,"line_end":1714,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":400079,"byte_end":400089,"line_start":1767,"line_end":1767,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":400609,"byte_end":400619,"line_start":1786,"line_end":1786,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":400809,"byte_end":400819,"line_start":1795,"line_end":1795,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":401358,"byte_end":401365,"line_start":1816,"line_end":1816,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":405714,"byte_end":405724,"line_start":1917,"line_end":1917,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":408036,"byte_end":408048,"line_start":1968,"line_end":1968,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":410718,"byte_end":410730,"line_start":2038,"line_end":2038,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":410880,"byte_end":410892,"line_start":2046,"line_end":2046,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":411018,"byte_end":411030,"line_start":2052,"line_end":2052,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3107,"byte_end":3112,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":3784,"byte_end":3796,"line_start":77,"line_end":77,"column_start":10,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":71386,"byte_end":71393,"line_start":1933,"line_end":1933,"column_start":10,"column_end":17},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/binary_reader.rs","byte_start":73046,"byte_end":73053,"line_start":1983,"line_end":1983,"column_start":21,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2774},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78046,"byte_end":78064,"line_start":89,"line_end":89,"column_start":22,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78406,"byte_end":78424,"line_start":106,"line_end":106,"column_start":33,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78654,"byte_end":78672,"line_start":117,"line_end":117,"column_start":31,"column_end":49},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":78794,"byte_end":78812,"line_start":126,"line_end":126,"column_start":23,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":259},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79244,"byte_end":79263,"line_start":143,"line_end":143,"column_start":22,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79606,"byte_end":79625,"line_start":160,"line_end":160,"column_start":33,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79856,"byte_end":79875,"line_start":171,"line_end":171,"column_start":31,"column_end":50},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":79997,"byte_end":80016,"line_start":180,"line_end":180,"column_start":23,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":82977,"byte_end":82980,"line_start":264,"line_end":264,"column_start":44,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":5967},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/module_resources.rs","byte_start":84052,"byte_end":84060,"line_start":311,"line_end":311,"column_start":23,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2549},"to":{"krate":0,"index":246}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":86422,"byte_end":86444,"line_start":49,"line_end":49,"column_start":6,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":89123,"byte_end":89140,"line_start":121,"line_end":121,"column_start":6,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":167582,"byte_end":167588,"line_start":1991,"line_end":1991,"column_start":25,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":167873,"byte_end":167879,"line_start":2005,"line_end":2005,"column_start":36,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":168174,"byte_end":168180,"line_start":2018,"line_end":2018,"column_start":34,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":168429,"byte_end":168446,"line_start":2031,"line_end":2031,"column_start":24,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":7546},"to":{"krate":0,"index":476}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":168449,"byte_end":168468,"line_start":2031,"line_end":2031,"column_start":44,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":7521},"to":{"krate":0,"index":476}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/operators_validator.rs","byte_start":168541,"byte_end":168542,"line_start":2032,"line_end":2032,"column_start":70,"column_end":71},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":478},"to":{"krate":0,"index":476}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":181301,"byte_end":181307,"line_start":249,"line_end":249,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":208573,"byte_end":208579,"line_start":885,"line_end":885,"column_start":18,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/parser.rs","byte_start":208663,"byte_end":208670,"line_start":891,"line_end":891,"column_start":21,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":558},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":225959,"byte_end":225976,"line_start":37,"line_end":37,"column_start":16,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2350},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":226003,"byte_end":226020,"line_start":39,"line_end":39,"column_start":23,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2350},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":226220,"byte_end":226237,"line_start":49,"line_end":49,"column_start":6,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":231297,"byte_end":231307,"line_start":238,"line_end":238,"column_start":6,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233590,"byte_end":233596,"line_start":339,"line_end":339,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":233889,"byte_end":233895,"line_start":352,"line_end":352,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/primitives.rs","byte_start":234048,"byte_end":234052,"line_start":361,"line_end":361,"column_start":6,"column_end":10},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":252785,"byte_end":252803,"line_start":29,"line_end":29,"column_start":10,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":254584,"byte_end":254602,"line_start":80,"line_end":80,"column_start":28,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3888},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":254995,"byte_end":255013,"line_start":97,"line_end":97,"column_start":38,"column_end":56},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3888},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/alias_section.rs","byte_start":255132,"byte_end":255150,"line_start":103,"line_end":103,"column_start":27,"column_end":45},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3888},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":256246,"byte_end":256258,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":257939,"byte_end":257951,"line_start":93,"line_end":93,"column_start":10,"column_end":22},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":258418,"byte_end":258430,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":857},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":258825,"byte_end":258839,"line_start":133,"line_end":133,"column_start":23,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":259286,"byte_end":259303,"line_start":150,"line_end":150,"column_start":10,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":261279,"byte_end":261296,"line_start":208,"line_end":208,"column_start":28,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":261693,"byte_end":261710,"line_start":224,"line_end":224,"column_start":38,"column_end":55},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/code_section.rs","byte_start":261828,"byte_end":261845,"line_start":230,"line_end":230,"column_start":27,"column_end":44},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":263816,"byte_end":263833,"line_start":43,"line_end":43,"column_start":10,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":266964,"byte_end":266981,"line_start":133,"line_end":133,"column_start":28,"column_end":45},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3951},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":267370,"byte_end":267387,"line_start":149,"line_end":149,"column_start":38,"column_end":55},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3951},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/data_section.rs","byte_start":267505,"byte_end":267522,"line_start":155,"line_end":155,"column_start":27,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3951},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":268997,"byte_end":269009,"line_start":52,"line_end":52,"column_start":10,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":269309,"byte_end":269327,"line_start":67,"line_end":67,"column_start":10,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":270192,"byte_end":270210,"line_start":101,"line_end":101,"column_start":27,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":994},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":270633,"byte_end":270653,"line_start":120,"line_end":120,"column_start":23,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":271208,"byte_end":271228,"line_start":143,"line_end":143,"column_start":10,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":275061,"byte_end":275081,"line_start":253,"line_end":253,"column_start":28,"column_end":48},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":275479,"byte_end":275499,"line_start":269,"line_end":269,"column_start":38,"column_end":58},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4003},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/element_section.rs","byte_start":275620,"byte_end":275640,"line_start":275,"line_end":275,"column_start":27,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":276822,"byte_end":276841,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":278027,"byte_end":278046,"line_start":73,"line_end":73,"column_start":28,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4023},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":278441,"byte_end":278460,"line_start":89,"line_end":89,"column_start":38,"column_end":57},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4023},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/export_section.rs","byte_start":278580,"byte_end":278599,"line_start":95,"line_end":95,"column_start":27,"column_end":46},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4023},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":279634,"byte_end":279655,"line_start":26,"line_end":26,"column_start":10,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":280670,"byte_end":280691,"line_start":59,"line_end":59,"column_start":28,"column_end":49},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4030},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":281083,"byte_end":281104,"line_start":75,"line_end":75,"column_start":38,"column_end":59},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4030},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/function_section.rs","byte_start":281226,"byte_end":281247,"line_start":81,"line_end":81,"column_start":27,"column_end":48},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4030},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":282415,"byte_end":282434,"line_start":33,"line_end":33,"column_start":10,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":283770,"byte_end":283789,"line_start":73,"line_end":73,"column_start":28,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4049},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":284184,"byte_end":284203,"line_start":89,"line_end":89,"column_start":38,"column_end":57},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4049},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/global_section.rs","byte_start":284323,"byte_end":284342,"line_start":95,"line_end":95,"column_start":27,"column_end":46},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4049},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":285553,"byte_end":285572,"line_start":34,"line_end":34,"column_start":10,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":286603,"byte_end":286622,"line_start":69,"line_end":69,"column_start":28,"column_end":47},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4069},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":287017,"byte_end":287036,"line_start":85,"line_end":85,"column_start":38,"column_end":57},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4069},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/import_section.rs","byte_start":287156,"byte_end":287175,"line_start":91,"line_end":91,"column_start":27,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4069},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/init_expr.rs","byte_start":288134,"byte_end":288142,"line_start":24,"line_end":24,"column_start":10,"column_end":18},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":288833,"byte_end":288854,"line_start":12,"line_end":12,"column_start":10,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":289848,"byte_end":289869,"line_start":45,"line_end":45,"column_start":28,"column_end":49},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4088},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":290271,"byte_end":290292,"line_start":62,"line_end":62,"column_start":38,"column_end":59},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4088},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":290414,"byte_end":290435,"line_start":68,"line_end":68,"column_start":27,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4088},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":290748,"byte_end":290756,"line_start":83,"line_end":83,"column_start":10,"column_end":18},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":291872,"byte_end":291890,"line_start":129,"line_end":129,"column_start":10,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":292295,"byte_end":292313,"line_start":144,"line_end":144,"column_start":28,"column_end":46},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4102},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":292714,"byte_end":292732,"line_start":161,"line_end":161,"column_start":38,"column_end":56},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4102},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/instance_section.rs","byte_start":292826,"byte_end":292844,"line_start":167,"line_end":167,"column_start":27,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4102},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":293882,"byte_end":293902,"line_start":26,"line_end":26,"column_start":10,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":294489,"byte_end":294509,"line_start":49,"line_end":49,"column_start":28,"column_end":48},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1332},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":294907,"byte_end":294927,"line_start":65,"line_end":65,"column_start":38,"column_end":58},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1332},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/linking_section.rs","byte_start":295048,"byte_end":295068,"line_start":71,"line_end":71,"column_start":27,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1332},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":296119,"byte_end":296138,"line_start":27,"line_end":27,"column_start":10,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":297116,"byte_end":297135,"line_start":59,"line_end":59,"column_start":28,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4123},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":297530,"byte_end":297549,"line_start":75,"line_end":75,"column_start":38,"column_end":57},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4123},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/memory_section.rs","byte_start":297669,"byte_end":297688,"line_start":81,"line_end":81,"column_start":27,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4123},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":298207,"byte_end":298226,"line_start":16,"line_end":16,"column_start":10,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":299547,"byte_end":299566,"line_start":56,"line_end":56,"column_start":28,"column_end":47},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1425},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":299968,"byte_end":299987,"line_start":73,"line_end":73,"column_start":38,"column_end":57},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1425},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":300107,"byte_end":300126,"line_start":79,"line_end":79,"column_start":27,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/module_section.rs","byte_start":300348,"byte_end":300360,"line_start":88,"line_end":88,"column_start":10,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":301415,"byte_end":301425,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":301794,"byte_end":301806,"line_start":46,"line_end":46,"column_start":10,"column_end":22},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":302766,"byte_end":302773,"line_start":86,"line_end":86,"column_start":10,"column_end":17},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303145,"byte_end":303159,"line_start":106,"line_end":106,"column_start":10,"column_end":24},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":303485,"byte_end":303505,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":304506,"byte_end":304521,"line_start":161,"line_end":161,"column_start":10,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":305603,"byte_end":305620,"line_start":202,"line_end":202,"column_start":10,"column_end":27},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":307818,"byte_end":307835,"line_start":259,"line_end":259,"column_start":28,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1524},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/name_section.rs","byte_start":308224,"byte_end":308241,"line_start":275,"line_end":275,"column_start":27,"column_end":44},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1524},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":309198,"byte_end":309213,"line_start":23,"line_end":23,"column_start":10,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":310535,"byte_end":310550,"line_start":81,"line_end":81,"column_start":27,"column_end":42},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":311672,"byte_end":311689,"line_start":117,"line_end":117,"column_start":23,"column_end":40},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1580},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/operators.rs","byte_start":312086,"byte_end":312114,"line_start":135,"line_end":135,"column_start":23,"column_end":51},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1588},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314199,"byte_end":314225,"line_start":31,"line_end":31,"column_start":10,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":314880,"byte_end":314906,"line_start":58,"line_end":58,"column_start":27,"column_end":53},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1616},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":315369,"byte_end":315397,"line_start":77,"line_end":77,"column_start":23,"column_end":51},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1632},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316020,"byte_end":316034,"line_start":102,"line_end":102,"column_start":10,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":316455,"byte_end":316477,"line_start":119,"line_end":119,"column_start":10,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":318466,"byte_end":318488,"line_start":168,"line_end":168,"column_start":28,"column_end":50},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":318897,"byte_end":318919,"line_start":184,"line_end":184,"column_start":38,"column_end":60},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/producers_section.rs","byte_start":319042,"byte_end":319064,"line_start":190,"line_end":190,"column_start":27,"column_end":49},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1646},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":320298,"byte_end":320316,"line_start":35,"line_end":35,"column_start":10,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":321847,"byte_end":321865,"line_start":89,"line_end":89,"column_start":28,"column_end":46},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":322253,"byte_end":322271,"line_start":105,"line_end":105,"column_start":38,"column_end":56},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1698},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/reloc_section.rs","byte_start":322390,"byte_end":322408,"line_start":111,"line_end":111,"column_start":27,"column_end":45},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1698},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":323868,"byte_end":323883,"line_start":47,"line_end":47,"column_start":9,"column_end":24},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":324044,"byte_end":324059,"line_start":56,"line_end":56,"column_start":22,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1746},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":324508,"byte_end":324530,"line_start":81,"line_end":81,"column_start":9,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/section_reader.rs","byte_start":324821,"byte_end":324843,"line_start":95,"line_end":95,"column_start":22,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":326411,"byte_end":326429,"line_start":27,"line_end":27,"column_start":10,"column_end":28},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327413,"byte_end":327431,"line_start":60,"line_end":60,"column_start":28,"column_end":46},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4271},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327823,"byte_end":327841,"line_start":76,"line_end":76,"column_start":38,"column_end":56},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4271},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/table_section.rs","byte_start":327960,"byte_end":327978,"line_start":82,"line_end":82,"column_start":27,"column_end":45},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4271},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329019,"byte_end":329035,"line_start":27,"line_end":27,"column_start":10,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":329974,"byte_end":329990,"line_start":59,"line_end":59,"column_start":28,"column_end":44},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4278},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":330376,"byte_end":330392,"line_start":75,"line_end":75,"column_start":38,"column_end":54},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4278},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/tag_section.rs","byte_start":330509,"byte_end":330525,"line_start":81,"line_end":81,"column_start":27,"column_end":43},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4278},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":331582,"byte_end":331599,"line_start":27,"line_end":27,"column_start":10,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":332995,"byte_end":333012,"line_start":69,"line_end":69,"column_start":28,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4285},"to":{"krate":0,"index":1737}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":333404,"byte_end":333421,"line_start":85,"line_end":85,"column_start":38,"column_end":55},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4285},"to":{"krate":0,"index":1744}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/readers/type_section.rs","byte_start":333539,"byte_end":333556,"line_start":91,"line_end":91,"column_start":27,"column_end":44},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4285},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator/func.rs","byte_start":411865,"byte_end":411878,"line_start":17,"line_end":17,"column_start":30,"column_end":43},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":341749,"byte_end":341761,"line_start":183,"line_end":183,"column_start":18,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4327},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":342593,"byte_end":342598,"line_start":224,"line_end":224,"column_start":18,"column_end":23},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4347},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":342756,"byte_end":342763,"line_start":236,"line_end":236,"column_start":6,"column_end":13},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":344370,"byte_end":344379,"line_start":296,"line_end":296,"column_start":6,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":394869,"byte_end":394878,"line_start":1568,"line_end":1568,"column_start":30,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4292},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":396255,"byte_end":396267,"line_start":1622,"line_end":1622,"column_start":6,"column_end":18},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":397183,"byte_end":397194,"line_start":1652,"line_end":1652,"column_start":30,"column_end":41},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4308},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":398932,"byte_end":398950,"line_start":1714,"line_end":1714,"column_start":30,"column_end":48},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2192},"to":{"krate":0,"index":303}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":400079,"byte_end":400089,"line_start":1767,"line_end":1767,"column_start":13,"column_end":23},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":400609,"byte_end":400619,"line_start":1786,"line_end":1786,"column_start":34,"column_end":44},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":400809,"byte_end":400819,"line_start":1795,"line_end":1795,"column_start":23,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":401358,"byte_end":401365,"line_start":1816,"line_end":1816,"column_start":6,"column_end":13},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":405714,"byte_end":405724,"line_start":1917,"line_end":1917,"column_start":6,"column_end":16},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":408036,"byte_end":408048,"line_start":1968,"line_end":1968,"column_start":9,"column_end":21},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":410718,"byte_end":410730,"line_start":2038,"line_end":2038,"column_start":36,"column_end":48},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2234},"to":{"krate":2,"index":3312}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":410880,"byte_end":410892,"line_start":2046,"line_end":2046,"column_start":39,"column_end":51},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2234},"to":{"krate":2,"index":3316}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmparser-0.81.0/src/validator.rs","byte_start":411018,"byte_end":411030,"line_start":2052,"line_end":2052,"column_start":21,"column_end":33},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2234},"to":{"krate":2,"index":2994}}]}