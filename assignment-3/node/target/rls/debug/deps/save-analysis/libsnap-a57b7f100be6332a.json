{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5","program":"/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","snap","--edition=2018","/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=a57b7f100be6332a","-C","extra-filename=-a57b7f100be6332a","--out-dir","/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps","-L","dependency=/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps/libsnap-a57b7f100be6332a.rmeta"},"prelude":{"crate_id":{"name":"snap","disambiguator":[9765305011545800903,0]},"crate_root":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src","external_crates":[{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[731825893227783439,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17620493357780722015,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17104879904101875706,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16830480400437399750,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7171606794823467103,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1962125835969742563,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9581088599378972321,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[813795769934850431,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17725418628365393926,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5893038469516244934,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17002347431842942188,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3247696082052491306,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1250632192672038569,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6011250054333313481,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[13264462261958304631,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[11374198430379246765,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[9483954524752636596,0]}}],"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":0,"byte_end":3326,"line_start":1,"line_end":109,"column_start":1,"column_end":15}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":2872,"byte_end":2877,"line_start":90,"line_end":90,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":2879,"byte_end":2885,"line_start":90,"line_end":90,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/raw.rs","byte_start":69125,"byte_end":69141,"line_start":13,"line_end":13,"column_start":27,"column_end":43},"alias_span":null,"name":"max_compress_len","value":"","parent":{"krate":0,"index":276}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/raw.rs","byte_start":69143,"byte_end":69150,"line_start":13,"line_end":13,"column_start":45,"column_end":52},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":276}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/raw.rs","byte_start":69181,"byte_end":69195,"line_start":14,"line_end":14,"column_start":29,"column_end":43},"alias_span":null,"name":"decompress_len","value":"","parent":{"krate":0,"index":276}},{"kind":"Use","ref_id":{"krate":0,"index":483},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/raw.rs","byte_start":69197,"byte_end":69204,"line_start":14,"line_end":14,"column_start":45,"column_end":52},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":276}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87206,"byte_end":87220,"line_start":17,"line_end":17,"column_start":23,"column_end":37},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":399}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":0,"byte_end":3326,"line_start":1,"line_end":109,"column_start":1,"column_end":15},"name":"","qualname":"::","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":34},{"krate":0,"index":129},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":204},{"krate":0,"index":248},{"krate":0,"index":276},{"krate":0,"index":291},{"krate":0,"index":398},{"krate":0,"index":399}],"decl_id":null,"docs":"This crate provides an implementation of the\n[Snappy compression format](https://github.com/google/snappy/blob/master/format_description.txt),\nas well as the\n[framing format](https://github.com/google/snappy/blob/master/framing_format.txt).\nThe goal of Snappy is to provide reasonable compression at high speed. On a\nmodern CPU, Snappy can compress data at about 300 MB/sec or more and can\ndecompress data at about 800 MB/sec or more.","sig":null,"attributes":[{"value":"*\nThis crate provides an implementation of the\n[Snappy compression format](https://github.com/google/snappy/blob/master/format_description.txt),\nas well as the\n[framing format](https://github.com/google/snappy/blob/master/framing_format.txt).\nThe goal of Snappy is to provide reasonable compression at high speed. On a\nmodern CPU, Snappy can compress data at about 300 MB/sec or more and can\ndecompress data at about 800 MB/sec or more.\n\n# Install\n\nTo use this crate with\n[Cargo](https://doc.rust-lang.org/cargo/),\nsimply add it as a dependency to your `Cargo.toml`:\n\n```ignore\n[dependencies]\nsnap = \"1\"\n```\n\n# Overview\n\nThis crate provides two ways to use Snappy. The first way is through the\n[`read::FrameDecoder`](read/struct.FrameDecoder.html)\nand\n[`write::FrameEncoder`](write/struct.FrameEncoder.html)\ntypes, which implement the `std::io::Read` and `std::io::Write` traits with the\nSnappy frame format. Unless you have a specific reason to the contrary, you\nshould only use the Snappy frame format. Specifically, the Snappy frame format\npermits streaming compression or decompression.\n\nThe second way is through the\n[`raw::Decoder`](raw/struct.Decoder.html)\nand\n[`raw::Encoder`](raw/struct.Encoder.html)\ntypes. These types provide lower level control to the raw Snappy format, and\ndon't support a streaming interface directly. You should only use these types\nif you know you specifically need the Snappy raw format.\n\nFinally, the `Error` type in this crate provides an exhaustive list of error\nconditions that are probably useless in most circumstances. Therefore,\n`From<snap::Error> for io::Error` is implemented in this crate, which will let\nyou automatically convert a Snappy error to an `std::io::Error` (when using\n`?`) with an appropriate error message to display to an end user.\n\n# Example: compress data on `stdin`\n\nThis program reads data from `stdin`, compresses it and emits it to `stdout`.\nThis example can be found in `examples/compress.rs`:\n\n```no_run\nuse std::io;\n\nfn main() {\n    let stdin = io::stdin();\n    let stdout = io::stdout();\n\n    let mut rdr = stdin.lock();\n    // Wrap the stdout writer in a Snappy writer.\n    let mut wtr = snap::write::FrameEncoder::new(stdout.lock());\n    io::copy(&mut rdr, &mut wtr).expect(\"I/O operation failed\");\n}\n```\n\n# Example: decompress data on `stdin`\n\nThis program reads data from `stdin`, decompresses it and emits it to `stdout`.\nThis example can be found in `examples/decompress.rs`:\n\n```no_run\nuse std::io;\n\nfn main() {\n    let stdin = io::stdin();\n    let stdout = io::stdout();\n\n    // Wrap the stdin reader in a Snappy reader.\n    let mut rdr = snap::read::FrameDecoder::new(stdin.lock());\n    let mut wtr = stdout.lock();\n    io::copy(&mut rdr, &mut wtr).expect(\"I/O operation failed\");\n}\n```\n*/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":0,"byte_end":2770,"line_start":1,"line_end":83,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":2772,"byte_end":2794,"line_start":85,"line_end":85,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":8718,"byte_end":8734,"line_start":42,"line_end":42,"column_start":8,"column_end":24},"name":"max_compress_len","qualname":"::compress::max_compress_len","value":"pub fn max_compress_len(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum compressed size given the uncompressed size.","sig":null,"attributes":[{"value":"/ Returns the maximum compressed size given the uncompressed size.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":8549,"byte_end":8617,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":8618,"byte_end":8621,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ If the uncompressed size exceeds the maximum allowable size then this","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":8622,"byte_end":8695,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/ returns 0.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":8696,"byte_end":8710,"line_start":41,"line_end":41,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9558,"byte_end":9565,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::compress::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":86}],"decl_id":null,"docs":" Encoder is a raw encoder for compressing bytes in the Snappy format.","sig":null,"attributes":[{"value":"/ Encoder is a raw encoder for compressing bytes in the Snappy format.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":8993,"byte_end":9065,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9066,"byte_end":9069,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Thie encoder does not use the Snappy frame format and simply compresses the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9070,"byte_end":9149,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ given bytes in one big Snappy block (that is, it has a single header).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9150,"byte_end":9224,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9225,"byte_end":9228,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unless you explicitly need the low-level control, you should use","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9229,"byte_end":9297,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/ [`read::FrameEncoder`](../read/struct.FrameEncoder.html)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9298,"byte_end":9358,"line_start":61,"line_end":61,"column_start":1,"column_end":61}},{"value":"/ or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9359,"byte_end":9365,"line_start":62,"line_end":62,"column_start":1,"column_end":7}},{"value":"/ [`write::FrameEncoder`](../write/struct.FrameEncoder.html)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9366,"byte_end":9428,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ instead, which compresses to the Snappy frame format.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9429,"byte_end":9486,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9487,"byte_end":9490,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ It is beneficial to reuse an Encoder when possible.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9491,"byte_end":9546,"line_start":66,"line_end":66,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9853,"byte_end":9856,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"pub fn new() -> Encoder","parent":null,"children":[],"decl_id":null,"docs":" Return a new encoder that can be used for compressing bytes.\n","sig":null,"attributes":[{"value":"/ Return a new encoder that can be used for compressing bytes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9777,"byte_end":9841,"line_start":79,"line_end":79,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10563,"byte_end":10571,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"compress","qualname":"<Encoder>::compress","value":"pub fn compress(&mut Self, &[u8], &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Compresses all bytes in `input` into `output`.","sig":null,"attributes":[{"value":"/ Compresses all bytes in `input` into `output`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9945,"byte_end":9995,"line_start":84,"line_end":84,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10000,"byte_end":10003,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ `input` can be any arbitrary sequence of bytes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10008,"byte_end":10059,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10064,"byte_end":10067,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ `output` must be large enough to hold the maximum possible compressed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10072,"byte_end":10145,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ size of `input`, which can be computed using `max_compress_len`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10150,"byte_end":10218,"line_start":89,"line_end":89,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10223,"byte_end":10226,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ On success, this returns the number of bytes written to `output`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10231,"byte_end":10300,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10305,"byte_end":10308,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10313,"byte_end":10325,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10330,"byte_end":10333,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This method returns an error in the following circumstances:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10338,"byte_end":10402,"line_start":95,"line_end":95,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10407,"byte_end":10410,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * The total number of bytes to compress exceeds `2^32 - 1`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10415,"byte_end":10478,"line_start":97,"line_end":97,"column_start":5,"column_end":68}},{"value":"/ * `output` has length less than `max_compress_len(input.len())`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":10483,"byte_end":10551,"line_start":98,"line_end":98,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12865,"byte_end":12877,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Encoder>::compress_vec","value":"pub fn compress_vec(&mut Self, &[u8]) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Compresses all bytes in `input` into a freshly allocated `Vec`.","sig":null,"attributes":[{"value":"/ Compresses all bytes in `input` into a freshly allocated `Vec`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12505,"byte_end":12572,"line_start":156,"line_end":156,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12577,"byte_end":12580,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ This is just like the `compress` method, except it allocates a `Vec`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12585,"byte_end":12657,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ with the right size for you. (This is intended to be a convenience","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12662,"byte_end":12732,"line_start":159,"line_end":159,"column_start":5,"column_end":75}},{"value":"/ method.)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12737,"byte_end":12749,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12754,"byte_end":12757,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This method returns an error under the same circumstances that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12762,"byte_end":12828,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ `compress` does.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":12833,"byte_end":12853,"line_start":163,"line_end":163,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34016,"byte_end":34030,"line_start":30,"line_end":30,"column_start":8,"column_end":22},"name":"decompress_len","qualname":"::decompress::decompress_len","value":"pub fn decompress_len(&[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the decompressed size (in bytes) of the compressed bytes given.","sig":null,"attributes":[{"value":"/ Returns the decompressed size (in bytes) of the compressed bytes given.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33639,"byte_end":33714,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33715,"byte_end":33718,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ `input` must be a sequence of bytes returned by a conforming Snappy","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33719,"byte_end":33790,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ compressor.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33791,"byte_end":33806,"line_start":22,"line_end":22,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33807,"byte_end":33810,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33811,"byte_end":33823,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33824,"byte_end":33827,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function returns an error in the following circumstances:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33828,"byte_end":33894,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33895,"byte_end":33898,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ * An invalid Snappy header was seen.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33899,"byte_end":33939,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"/ * The total space required for decompression exceeds `2^32 - 1`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":33940,"byte_end":34008,"line_start":29,"line_end":29,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":483},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34616,"byte_end":34623,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decompress::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":484}],"decl_id":null,"docs":" Decoder is a raw decoder for decompressing bytes in the Snappy format.","sig":null,"attributes":[{"value":"/ Decoder is a raw decoder for decompressing bytes in the Snappy format.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34165,"byte_end":34239,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34240,"byte_end":34243,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This decoder does not use the Snappy frame format and simply decompresses","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34244,"byte_end":34321,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ the given bytes as if it were returned from `Encoder`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34322,"byte_end":34380,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34381,"byte_end":34384,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Unless you explicitly need the low-level control, you should use","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34385,"byte_end":34453,"line_start":42,"line_end":42,"column_start":1,"column_end":69}},{"value":"/ [`read::FrameDecoder`](../read/struct.FrameDecoder.html)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34454,"byte_end":34514,"line_start":43,"line_end":43,"column_start":1,"column_end":61}},{"value":"/ instead, which decompresses the Snappy frame format.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34515,"byte_end":34571,"line_start":44,"line_end":44,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34791,"byte_end":34794,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"pub fn new() -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Return a new decoder that can be used for decompressing bytes.\n","sig":null,"attributes":[{"value":"/ Return a new decoder that can be used for decompressing bytes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34713,"byte_end":34779,"line_start":52,"line_end":52,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35593,"byte_end":35603,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decoder>::decompress","value":"pub fn decompress(&mut Self, &[u8], &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses all bytes in `input` into `output`.","sig":null,"attributes":[{"value":"/ Decompresses all bytes in `input` into `output`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34852,"byte_end":34904,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34909,"byte_end":34912,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ `input` must be a sequence of bytes returned by a conforming Snappy","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34917,"byte_end":34988,"line_start":59,"line_end":59,"column_start":5,"column_end":76}},{"value":"/ compressor.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34993,"byte_end":35008,"line_start":60,"line_end":60,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35013,"byte_end":35016,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The size of `output` must be large enough to hold all decompressed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35021,"byte_end":35091,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ bytes from the `input`. The size required can be queried with the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35096,"byte_end":35165,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ `decompress_len` function.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35170,"byte_end":35200,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35205,"byte_end":35208,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ On success, this returns the number of bytes written to `output`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35213,"byte_end":35282,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35287,"byte_end":35290,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35295,"byte_end":35307,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35312,"byte_end":35315,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method returns an error in the following circumstances:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35320,"byte_end":35384,"line_start":70,"line_end":70,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35389,"byte_end":35392,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ * Invalid compressed Snappy data was seen.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35397,"byte_end":35443,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/ * The total space required for decompression exceeds `2^32 - 1`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35448,"byte_end":35516,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ * `output` has length less than `decompress_len(input)`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":35521,"byte_end":35581,"line_start":74,"line_end":74,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36606,"byte_end":36620,"line_start":105,"line_end":105,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decoder>::decompress_vec","value":"pub fn decompress_vec(&mut Self, &[u8]) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses all bytes in `input` into a freshly allocated `Vec`.","sig":null,"attributes":[{"value":"/ Decompresses all bytes in `input` into a freshly allocated `Vec`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36240,"byte_end":36309,"line_start":97,"line_end":97,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36314,"byte_end":36317,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is just like the `decompress` method, except it allocates a `Vec`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36322,"byte_end":36396,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ with the right size for you. (This is intended to be a convenience","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36401,"byte_end":36471,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/ method.)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36476,"byte_end":36488,"line_start":101,"line_end":101,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36493,"byte_end":36496,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method returns an error under the same circumstances that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36501,"byte_end":36567,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/ `decompress` does.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":36572,"byte_end":36594,"line_start":104,"line_end":104,"column_start":5,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52102,"byte_end":52108,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenient type alias for `Result<T, snap::Error>`.\n","sig":null,"attributes":[{"value":"/ A convenient type alias for `Result<T, snap::Error>`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52035,"byte_end":52092,"line_start":5,"line_end":5,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52453,"byte_end":52467,"line_start":15,"line_end":15,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::error::IntoInnerError","value":"IntoInnerError {  }","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"decl_id":null,"docs":" `IntoInnerError` occurs when consuming an encoder fails.","sig":null,"attributes":[{"value":"/ `IntoInnerError` occurs when consuming an encoder fails.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52141,"byte_end":52201,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52202,"byte_end":52205,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Consuming the encoder causes a flush to happen. If the flush fails, then","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52206,"byte_end":52282,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ this error is returned, which contains both the original encoder and the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52283,"byte_end":52359,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ error that occurred.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52360,"byte_end":52384,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52385,"byte_end":52388,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The type parameter `W` is the unconsumed writer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52389,"byte_end":52441,"line_start":14,"line_end":14,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52818,"byte_end":52823,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"error","qualname":"<IntoInnerError<W>>::error","value":"pub fn error(&Self) -> &io::Error","parent":null,"children":[],"decl_id":null,"docs":" Returns the error which caused the call to `into_inner` to fail.","sig":null,"attributes":[{"value":"/ Returns the error which caused the call to `into_inner` to fail.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52652,"byte_end":52720,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52725,"byte_end":52728,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This error was returned when attempting to flush the internal buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52733,"byte_end":52806,"line_start":27,"line_end":27,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53057,"byte_end":53067,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoInnerError<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying writer which generated the error.","sig":null,"attributes":[{"value":"/ Returns the underlying writer which generated the error.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52876,"byte_end":52936,"line_start":32,"line_end":32,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52941,"byte_end":52944,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The returned value can be used for error recovery, such as","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52949,"byte_end":53011,"line_start":34,"line_end":34,"column_start":5,"column_end":67}},{"value":"/ re-inspecting the buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53016,"byte_end":53045,"line_start":35,"line_end":35,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":497},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54093,"byte_end":54099,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"TooBig","qualname":"::error::Error::TooBig","value":"Error::TooBig { given, max }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when the given input is too big. This can happen\n during compression or decompression.\n","sig":null,"attributes":[{"value":"/ This error occurs when the given input is too big. This can happen","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53973,"byte_end":54043,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ during compression or decompression.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54048,"byte_end":54088,"line_start":67,"line_end":67,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":500},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54418,"byte_end":54432,"line_start":77,"line_end":77,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::error::Error::BufferTooSmall","value":"Error::BufferTooSmall { given, min }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when the given buffer is too small to contain the\n maximum possible compressed bytes or the total number of decompressed\n bytes.\n","sig":null,"attributes":[{"value":"/ This error occurs when the given buffer is too small to contain the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54249,"byte_end":54320,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ maximum possible compressed bytes or the total number of decompressed","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54325,"byte_end":54398,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ bytes.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54403,"byte_end":54413,"line_start":76,"line_end":76,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54658,"byte_end":54663,"line_start":84,"line_end":84,"column_start":5,"column_end":10},"name":"Empty","qualname":"::error::Error::Empty","value":"Error::Empty","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when trying to decompress a zero length buffer.\n","sig":null,"attributes":[{"value":"/ This error occurs when trying to decompress a zero length buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54584,"byte_end":54653,"line_start":83,"line_end":83,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":505},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54749,"byte_end":54755,"line_start":86,"line_end":86,"column_start":5,"column_end":11},"name":"Header","qualname":"::error::Error::Header","value":"Error::Header","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when an invalid header is found during decompression.\n","sig":null,"attributes":[{"value":"/ This error occurs when an invalid header is found during decompression.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54669,"byte_end":54744,"line_start":85,"line_end":85,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":507},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55068,"byte_end":55082,"line_start":92,"line_end":92,"column_start":5,"column_end":19},"name":"HeaderMismatch","qualname":"::error::Error::HeaderMismatch","value":"Error::HeaderMismatch { expected_len, got_len }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when there is a mismatch between the number of\n decompressed bytes reported in the header and the number of\n actual decompressed bytes. In this error case, the number of actual\n decompressed bytes is always less than the number reported in the\n header.\n","sig":null,"attributes":[{"value":"/ This error occurs when there is a mismatch between the number of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54761,"byte_end":54829,"line_start":87,"line_end":87,"column_start":5,"column_end":73}},{"value":"/ decompressed bytes reported in the header and the number of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54834,"byte_end":54897,"line_start":88,"line_end":88,"column_start":5,"column_end":68}},{"value":"/ actual decompressed bytes. In this error case, the number of actual","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54902,"byte_end":54973,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ decompressed bytes is always less than the number reported in the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":54978,"byte_end":55047,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ header.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55052,"byte_end":55063,"line_start":91,"line_end":91,"column_start":5,"column_end":16}}]},{"kind":"StructVariant","id":{"krate":0,"index":510},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55401,"byte_end":55408,"line_start":101,"line_end":101,"column_start":5,"column_end":12},"name":"Literal","qualname":"::error::Error::Literal","value":"Error::Literal { len, src_len, dst_len }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs during decompression when there was a problem\n reading a literal.\n","sig":null,"attributes":[{"value":"/ This error occurs during decompression when there was a problem","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55302,"byte_end":55369,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/ reading a literal.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55374,"byte_end":55396,"line_start":100,"line_end":100,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":514},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55766,"byte_end":55774,"line_start":111,"line_end":111,"column_start":5,"column_end":13},"name":"CopyRead","qualname":"::error::Error::CopyRead","value":"Error::CopyRead { len, src_len }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs during decompression when there was a problem\n reading a copy.\n","sig":null,"attributes":[{"value":"/ This error occurs during decompression when there was a problem","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55670,"byte_end":55737,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/ reading a copy.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55742,"byte_end":55761,"line_start":110,"line_end":110,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":517},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56113,"byte_end":56122,"line_start":120,"line_end":120,"column_start":5,"column_end":14},"name":"CopyWrite","qualname":"::error::Error::CopyWrite","value":"Error::CopyWrite { len, dst_len }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs during decompression when there was a problem\n writing a copy to the decompression buffer.\n","sig":null,"attributes":[{"value":"/ This error occurs during decompression when there was a problem","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":55989,"byte_end":56056,"line_start":118,"line_end":118,"column_start":5,"column_end":72}},{"value":"/ writing a copy to the decompression buffer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56061,"byte_end":56108,"line_start":119,"line_end":119,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":520},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56540,"byte_end":56546,"line_start":129,"line_end":129,"column_start":5,"column_end":11},"name":"Offset","qualname":"::error::Error::Offset","value":"Error::Offset { offset, dst_pos }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs during decompression when an invalid copy offset\n is found. An offset is invalid if it is zero or if it is out of bounds.\n","sig":null,"attributes":[{"value":"/ This error occurs during decompression when an invalid copy offset","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56385,"byte_end":56455,"line_start":127,"line_end":127,"column_start":5,"column_end":75}},{"value":"/ is found. An offset is invalid if it is zero or if it is out of bounds.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56460,"byte_end":56535,"line_start":128,"line_end":128,"column_start":5,"column_end":80}}]},{"kind":"StructVariant","id":{"krate":0,"index":523},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56982,"byte_end":56994,"line_start":139,"line_end":139,"column_start":5,"column_end":17},"name":"StreamHeader","qualname":"::error::Error::StreamHeader","value":"Error::StreamHeader { byte }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when a stream header chunk type was expected but got\n a different chunk type.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[{"value":"/ This error occurs when a stream header chunk type was expected but got","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56794,"byte_end":56868,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ a different chunk type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56873,"byte_end":56900,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/ This error only occurs when reading a Snappy frame formatted stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":56905,"byte_end":56977,"line_start":138,"line_end":138,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":525},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57251,"byte_end":57271,"line_start":146,"line_end":146,"column_start":5,"column_end":25},"name":"StreamHeaderMismatch","qualname":"::error::Error::StreamHeaderMismatch","value":"Error::StreamHeaderMismatch { bytes }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when the magic stream headers bytes do not match\n what is expected.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[{"value":"/ This error occurs when the magic stream headers bytes do not match","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57073,"byte_end":57143,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ what is expected.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57148,"byte_end":57169,"line_start":144,"line_end":144,"column_start":5,"column_end":26}},{"value":"/ This error only occurs when reading a Snappy frame formatted stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57174,"byte_end":57246,"line_start":145,"line_end":145,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":527},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57490,"byte_end":57510,"line_start":152,"line_end":152,"column_start":5,"column_end":25},"name":"UnsupportedChunkType","qualname":"::error::Error::UnsupportedChunkType","value":"Error::UnsupportedChunkType { byte }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when an unsupported chunk type is seen.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[{"value":"/ This error occurs when an unsupported chunk type is seen.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57347,"byte_end":57408,"line_start":150,"line_end":150,"column_start":5,"column_end":66}},{"value":"/ This error only occurs when reading a Snappy frame formatted stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57413,"byte_end":57485,"line_start":151,"line_end":151,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":529},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57813,"byte_end":57835,"line_start":159,"line_end":159,"column_start":5,"column_end":27},"name":"UnsupportedChunkLength","qualname":"::error::Error::UnsupportedChunkLength","value":"Error::UnsupportedChunkLength { len, header }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when trying to read a chunk with an unexpected or\n incorrect length when reading a Snappy frame formatted stream.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[{"value":"/ This error occurs when trying to read a chunk with an unexpected or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57589,"byte_end":57660,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/ incorrect length when reading a Snappy frame formatted stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57665,"byte_end":57731,"line_start":157,"line_end":157,"column_start":5,"column_end":71}},{"value":"/ This error only occurs when reading a Snappy frame formatted stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":57736,"byte_end":57808,"line_start":158,"line_end":158,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":532},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58153,"byte_end":58161,"line_start":167,"line_end":167,"column_start":5,"column_end":13},"name":"Checksum","qualname":"::error::Error::Checksum","value":"Error::Checksum { expected, got }","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" This error occurs when a checksum validity check fails.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[{"value":"/ This error occurs when a checksum validity check fails.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58012,"byte_end":58071,"line_start":165,"line_end":165,"column_start":5,"column_end":64}},{"value":"/ This error only occurs when reading a Snappy frame formatted stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58076,"byte_end":58148,"line_start":166,"line_end":166,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":496},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53961,"byte_end":53966,"line_start":65,"line_end":65,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    TooBig {\n        given: u64,\n        max: u64,\n    },\n    BufferTooSmall {\n        given: u64,\n        min: u64,\n    },\n    Empty,\n    Header,\n    HeaderMismatch {\n        expected_len: u64,\n        got_len: u64,\n    },\n    Literal {\n        len: u64,\n        src_len: u64,\n        dst_len: u64,\n    },\n    CopyRead {\n        len: u64,\n        src_len: u64,\n    },\n    CopyWrite {\n        len: u64,\n        dst_len: u64,\n    },\n    Offset {\n        offset: u64,\n        dst_pos: u64,\n    },\n    StreamHeader {\n        byte: u8,\n    },\n    StreamHeaderMismatch {\n        bytes: Vec<u8>,\n    },\n    UnsupportedChunkType {\n        byte: u8,\n    },\n    UnsupportedChunkLength {\n        len: u64,\n        header: bool,\n    },\n    Checksum {\n        expected: u32,\n        got: u32,\n    },\n}","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":532}],"decl_id":null,"docs":" Error describes all the possible errors that may occur during Snappy\n compression or decompression.","sig":null,"attributes":[{"value":"/ Error describes all the possible errors that may occur during Snappy","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53454,"byte_end":53526,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ compression or decompression.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53527,"byte_end":53560,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53561,"byte_end":53564,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Note that it's unlikely that you'll need to care about the specific error","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53565,"byte_end":53642,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ reported since all of them indicate a corrupt Snappy data or a limitation","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53643,"byte_end":53720,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ that cannot be worked around. Therefore,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53721,"byte_end":53765,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ `From<snap::Error> for std::io::Error` is provided so that any Snappy","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53766,"byte_end":53839,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ errors will be converted to a `std::io::Error` automatically when using","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53840,"byte_end":53915,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ `try!`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53916,"byte_end":53927,"line_start":63,"line_end":63,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":276},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::raw","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/raw.rs","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":288}],"decl_id":null,"docs":"This module provides a raw Snappy encoder and decoder.","sig":null,"attributes":[{"value":"*\nThis module provides a raw Snappy encoder and decoder.\n\nA raw Snappy encoder/decoder can only compress/decompress a fixed amount of\ndata at a time. For this reason, this module is lower level and more difficult\nto use than the higher level streaming readers and writers exposed as part of\nthe [`read`](../read/index.html) and [`write`](../write/index.html) modules.\n\nGenerally, one only needs to use the raw format if some other source is\ngenerating raw Snappy compressed data and you have no choice but to do the\nsame. Otherwise, the Snappy frame format should probably always be preferred.\n*/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/raw.rs","byte_start":68500,"byte_end":69098,"line_start":1,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":291},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::read","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":353},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":371},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396}],"decl_id":null,"docs":"This module provides two `std::io::Read` implementations:","sig":null,"attributes":[{"value":"*\nThis module provides two `std::io::Read` implementations:\n\n* [`read::FrameDecoder`](struct.FrameDecoder.html)\n  wraps another `std::io::Read` implemenation, and decompresses data encoded\n  using the Snappy frame format. Use this if you have a compressed data source\n  and wish to read it as uncompressed data.\n* [`read::FrameEncoder`](struct.FrameEncoder.html)\n  wraps another `std::io::Read` implemenation, and compresses data encoded\n  using the Snappy frame format. Use this if you have uncompressed data source\n  and wish to read it as compressed data.\n\nTypically, `read::FrameDecoder` is the version that you'll want.\n*/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":69208,"byte_end":69837,"line_start":1,"line_end":14,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":71009,"byte_end":71021,"line_start":47,"line_end":47,"column_start":12,"column_end":24},"name":"FrameDecoder","qualname":"::read::FrameDecoder","value":"FrameDecoder {  }","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"decl_id":null,"docs":" A reader for decompressing a Snappy stream.","sig":null,"attributes":[{"value":"/ A reader for decompressing a Snappy stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70471,"byte_end":70518,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70519,"byte_end":70522,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This `FrameDecoder` wraps any other reader that implements `std::io::Read`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70523,"byte_end":70602,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ Bytes read from this reader are decompressed using the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70603,"byte_end":70661,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/ [Snappy frame format](https://github.com/google/snappy/blob/master/framing_format.txt)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70662,"byte_end":70752,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/ (file extension `sz`, MIME type `application/x-snappy-framed`).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70753,"byte_end":70820,"line_start":42,"line_end":42,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70821,"byte_end":70824,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This reader can potentially make many small reads from the underlying","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70825,"byte_end":70898,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ stream depending on its format, therefore, passing in a buffered reader","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70899,"byte_end":70974,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ may be beneficial.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":70975,"byte_end":70997,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72030,"byte_end":72033,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameDecoder<R>>::new","value":"pub fn new(R) -> FrameDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new reader for streaming Snappy decompression.\n","sig":null,"attributes":[{"value":"/ Create a new reader for streaming Snappy decompression.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":71959,"byte_end":72018,"line_start":71,"line_end":71,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72452,"byte_end":72459,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FrameDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader in this decoder.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader in this decoder.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72378,"byte_end":72440,"line_start":85,"line_end":85,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72715,"byte_end":72722,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FrameDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader in this decoder.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader in this decoder.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72502,"byte_end":72572,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72577,"byte_end":72580,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72585,"byte_end":72657,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ this decoder is continued to be used.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72662,"byte_end":72703,"line_start":93,"line_end":93,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79823,"byte_end":79835,"line_start":267,"line_end":267,"column_start":12,"column_end":24},"name":"FrameEncoder","qualname":"::read::FrameEncoder","value":"FrameEncoder {  }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"decl_id":null,"docs":" A reader for compressing data using snappy as it is read.","sig":null,"attributes":[{"value":"/ A reader for compressing data using snappy as it is read.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79021,"byte_end":79082,"line_start":251,"line_end":251,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79083,"byte_end":79086,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ This `FrameEncoder` wraps any other reader that implements `std::io::Read`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79087,"byte_end":79166,"line_start":253,"line_end":253,"column_start":1,"column_end":80}},{"value":"/ Bytes read from this reader are compressed using the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79167,"byte_end":79223,"line_start":254,"line_end":254,"column_start":1,"column_end":57}},{"value":"/ [Snappy frame format](https://github.com/google/snappy/blob/master/framing_format.txt)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79224,"byte_end":79314,"line_start":255,"line_end":255,"column_start":1,"column_end":91}},{"value":"/ (file extension `sz`, MIME type `application/x-snappy-framed`).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79315,"byte_end":79382,"line_start":256,"line_end":256,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79383,"byte_end":79386,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Usually you'll want","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79387,"byte_end":79410,"line_start":258,"line_end":258,"column_start":1,"column_end":24}},{"value":"/ [`read::FrameDecoder`](struct.FrameDecoder.html)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79411,"byte_end":79463,"line_start":259,"line_end":259,"column_start":1,"column_end":53}},{"value":"/ (for decompressing while reading) or","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79464,"byte_end":79504,"line_start":260,"line_end":260,"column_start":1,"column_end":41}},{"value":"/ [`write::FrameEncoder`](../write/struct.FrameEncoder.html)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79505,"byte_end":79567,"line_start":261,"line_end":261,"column_start":1,"column_end":63}},{"value":"/ (for compressing while writing) instead.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79568,"byte_end":79612,"line_start":262,"line_end":262,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79613,"byte_end":79616,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ Unlike `FrameDecoder`, this will attempt to make large reads roughly","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79617,"byte_end":79689,"line_start":264,"line_end":264,"column_start":1,"column_end":73}},{"value":"/ equivalent to the size of a single Snappy block. Therefore, callers may not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79690,"byte_end":79769,"line_start":265,"line_end":265,"column_start":1,"column_end":80}},{"value":"/ benefit from using a buffered reader.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":79770,"byte_end":79811,"line_start":266,"line_end":266,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":81040,"byte_end":81043,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameEncoder<R>>::new","value":"pub fn new(R) -> FrameEncoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new reader for streaming Snappy compression.\n","sig":null,"attributes":[{"value":"/ Create a new reader for streaming Snappy compression.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":80971,"byte_end":81028,"line_start":296,"line_end":296,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":81535,"byte_end":81542,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FrameEncoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader in this decoder.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader in this decoder.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":81461,"byte_end":81523,"line_start":312,"line_end":312,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":81804,"byte_end":81811,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FrameEncoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader in this decoder.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader in this decoder.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":81591,"byte_end":81661,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":81666,"byte_end":81669,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the stream may result in surprising results if","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":81674,"byte_end":81746,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ this encoder is continued to be used.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":81751,"byte_end":81792,"line_start":320,"line_end":320,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":399},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":439},{"krate":0,"index":448},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468}],"decl_id":null,"docs":"This module provides a `std::io::Write` implementation:","sig":null,"attributes":[{"value":"*\nThis module provides a `std::io::Write` implementation:\n\n- `write::FrameEncoder` wraps another `std::io::Write` implemenation, and\n  compresses data encoded using the Snappy frame format. Use this if you have\n  uncompressed data source and wish to write it as compressed data.\n\nIt would also be possible to provide a `write::FrameDecoder`, which decompresses\ndata as it writes it, but it hasn't been implemented yet.\n*/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":86655,"byte_end":87078,"line_start":1,"line_end":10,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":435},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87948,"byte_end":87960,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"FrameEncoder","qualname":"::write::FrameEncoder","value":"FrameEncoder {  }","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438}],"decl_id":null,"docs":" A writer for compressing a Snappy stream.","sig":null,"attributes":[{"value":"/ A writer for compressing a Snappy stream.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87368,"byte_end":87413,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87414,"byte_end":87417,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This `FrameEncoder` wraps any other writer that implements `io::Write`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87418,"byte_end":87493,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ Bytes written to this writer are compressed using the [Snappy frame","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87494,"byte_end":87565,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ format](https://github.com/google/snappy/blob/master/framing_format.txt)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87566,"byte_end":87642,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ (file extension `sz`, MIME type `application/x-snappy-framed`).","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87643,"byte_end":87710,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87711,"byte_end":87714,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Writes are buffered automatically, so there's no need to wrap the given","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87715,"byte_end":87790,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ writer in a `std::io::BufWriter`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87791,"byte_end":87828,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87829,"byte_end":87832,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The writer will be flushed automatically when it is dropped. If an error","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87833,"byte_end":87909,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ occurs, it is ignored.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":87910,"byte_end":87936,"line_start":35,"line_end":35,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":89531,"byte_end":89534,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameEncoder<W>>::new","value":"pub fn new(W) -> FrameEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new writer for streaming Snappy compression.\n","sig":null,"attributes":[{"value":"/ Create a new writer for streaming Snappy compression.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":89462,"byte_end":89519,"line_start":72,"line_end":72,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90219,"byte_end":90229,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FrameEncoder<W>>::into_inner","value":"pub fn into_inner(Self) -> Result<W, IntoInnerError<FrameEncoder<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming and flushing this writer.","sig":null,"attributes":[{"value":"/ Returns the underlying stream, consuming and flushing this writer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":89979,"byte_end":90049,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90054,"byte_end":90057,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If flushing the writer caused an error, then an `IntoInnerError` is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90062,"byte_end":90133,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ returned, which contains both the writer and the original writer.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90138,"byte_end":90207,"line_start":90,"line_end":90,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90529,"byte_end":90536,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FrameEncoder<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer in this encoder.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer in this encoder.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90455,"byte_end":90517,"line_start":98,"line_end":98,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90829,"byte_end":90836,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FrameEncoder<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer in this encoder.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer in this encoder.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90603,"byte_end":90665,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90670,"byte_end":90673,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Note that mutating the output/input state of the stream may corrupt","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90678,"byte_end":90749,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ this encoder, so care must be taken when using this method.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90754,"byte_end":90817,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9646,"byte_end":9653,"line_start":72,"line_end":72,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9763,"byte_end":9770,"line_start":78,"line_end":78,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":13236,"byte_end":13241,"line_start":181,"line_end":181,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":27315,"byte_end":27322,"line_start":490,"line_end":490,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":28567,"byte_end":28577,"line_start":521,"line_end":521,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":28732,"byte_end":28742,"line_start":528,"line_end":528,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":28856,"byte_end":28866,"line_start":535,"line_end":535,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/crc32.rs","byte_start":29439,"byte_end":29450,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34699,"byte_end":34706,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":37225,"byte_end":37235,"line_start":125,"line_end":125,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":47290,"byte_end":47296,"line_start":351,"line_end":351,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":49135,"byte_end":49149,"line_start":395,"line_end":395,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":49530,"byte_end":49538,"line_start":410,"line_end":410,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52516,"byte_end":52530,"line_start":20,"line_end":20,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53152,"byte_end":53166,"line_start":41,"line_end":41,"column_start":46,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53199,"byte_end":53213,"line_start":43,"line_end":43,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53338,"byte_end":53352,"line_start":49,"line_end":49,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58331,"byte_end":58336,"line_start":175,"line_end":175,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58449,"byte_end":58454,"line_start":181,"line_end":181,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58478,"byte_end":58483,"line_start":183,"line_end":183,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":60939,"byte_end":60944,"line_start":240,"line_end":240,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":60971,"byte_end":60976,"line_start":242,"line_end":242,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/frame.rs","byte_start":65766,"byte_end":65775,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":71937,"byte_end":71949,"line_start":70,"line_end":70,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72806,"byte_end":72818,"line_start":99,"line_end":99,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":78536,"byte_end":78548,"line_start":236,"line_end":236,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":80949,"byte_end":80961,"line_start":295,"line_end":295,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":82335,"byte_end":82347,"line_start":336,"line_end":336,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":83208,"byte_end":83213,"line_start":360,"line_end":360,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":85245,"byte_end":85257,"line_start":407,"line_end":407,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":85593,"byte_end":85598,"line_start":418,"line_end":418,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":89440,"byte_end":89452,"line_start":71,"line_end":71,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90941,"byte_end":90953,"line_start":112,"line_end":112,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":91229,"byte_end":91241,"line_start":122,"line_end":122,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":92736,"byte_end":92741,"line_start":164,"line_end":164,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":93682,"byte_end":93694,"line_start":195,"line_end":195,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":93953,"byte_end":93958,"line_start":204,"line_end":204,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":3284,"byte_end":3287,"line_start":106,"line_end":106,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":276}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":3297,"byte_end":3301,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":291}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/lib.rs","byte_start":3320,"byte_end":3325,"line_start":109,"line_end":109,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":399}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9646,"byte_end":9653,"line_start":72,"line_end":72,"column_start":21,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":9763,"byte_end":9770,"line_start":78,"line_end":78,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":13236,"byte_end":13241,"line_start":181,"line_end":181,"column_start":14,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":27315,"byte_end":27322,"line_start":490,"line_end":490,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":28567,"byte_end":28577,"line_start":521,"line_end":521,"column_start":10,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":28732,"byte_end":28742,"line_start":528,"line_end":528,"column_start":20,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":3227}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/compress.rs","byte_start":28856,"byte_end":28866,"line_start":535,"line_end":535,"column_start":23,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":3240}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/crc32.rs","byte_start":29439,"byte_end":29450,"line_start":16,"line_end":16,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":471},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":34699,"byte_end":34706,"line_start":51,"line_end":51,"column_start":6,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":37225,"byte_end":37235,"line_start":125,"line_end":125,"column_start":14,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":47290,"byte_end":47296,"line_start":351,"line_end":351,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":49135,"byte_end":49149,"line_start":395,"line_end":395,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/decompress.rs","byte_start":49530,"byte_end":49538,"line_start":410,"line_end":410,"column_start":6,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":52516,"byte_end":52530,"line_start":20,"line_end":20,"column_start":9,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53152,"byte_end":53166,"line_start":41,"line_end":41,"column_start":46,"column_end":60},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":216},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53199,"byte_end":53213,"line_start":43,"line_end":43,"column_start":26,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":53338,"byte_end":53352,"line_start":49,"line_end":49,"column_start":24,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58331,"byte_end":58336,"line_start":175,"line_end":175,"column_start":26,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":3806},"to":{"krate":2,"index":2922}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58449,"byte_end":58454,"line_start":181,"line_end":181,"column_start":13,"column_end":18},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":58478,"byte_end":58483,"line_start":183,"line_end":183,"column_start":20,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":60939,"byte_end":60944,"line_start":240,"line_end":240,"column_start":28,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":496},"to":{"krate":1,"index":2341}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/error.rs","byte_start":60971,"byte_end":60976,"line_start":242,"line_end":242,"column_start":23,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":496},"to":{"krate":2,"index":9420}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/frame.rs","byte_start":65766,"byte_end":65775,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":71937,"byte_end":71949,"line_start":70,"line_end":70,"column_start":19,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":72806,"byte_end":72818,"line_start":99,"line_end":99,"column_start":32,"column_end":44},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":343},"to":{"krate":1,"index":4346}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":78536,"byte_end":78548,"line_start":236,"line_end":236,"column_start":47,"column_end":59},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":80949,"byte_end":80961,"line_start":295,"line_end":295,"column_start":19,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":82335,"byte_end":82347,"line_start":336,"line_end":336,"column_start":32,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":365},"to":{"krate":1,"index":4346}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":83208,"byte_end":83213,"line_start":360,"line_end":360,"column_start":19,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":85245,"byte_end":85257,"line_start":407,"line_end":407,"column_start":47,"column_end":59},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/read.rs","byte_start":85593,"byte_end":85598,"line_start":418,"line_end":418,"column_start":47,"column_end":52},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":89440,"byte_end":89452,"line_start":71,"line_end":71,"column_start":20,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":90941,"byte_end":90953,"line_start":112,"line_end":112,"column_start":29,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":3251}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":91229,"byte_end":91241,"line_start":122,"line_end":122,"column_start":34,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":435},"to":{"krate":1,"index":4406}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":92736,"byte_end":92741,"line_start":164,"line_end":164,"column_start":20,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":93682,"byte_end":93694,"line_start":195,"line_end":195,"column_start":48,"column_end":60},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":435},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/snap-1.0.5/src/write.rs","byte_start":93953,"byte_end":93958,"line_start":204,"line_end":204,"column_start":48,"column_end":53},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":439},"to":{"krate":2,"index":9413}}]}