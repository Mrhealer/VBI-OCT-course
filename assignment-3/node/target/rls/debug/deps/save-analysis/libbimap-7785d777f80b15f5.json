{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1","program":"/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bimap","--edition=2018","/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=7785d777f80b15f5","-C","extra-filename=-7785d777f80b15f5","--out-dir","/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps","-L","dependency=/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/healer/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/healer/Documents/VIB/VBI-OCT-course/assignment-2/node/target/rls/debug/deps/libbimap-7785d777f80b15f5.rmeta"},"prelude":{"crate_id":{"name":"bimap","disambiguator":[9256401130649367128,0]},"crate_root":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src","external_crates":[{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[731825893227783439,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","num":2,"id":{"name":"core","disambiguator":[17620493357780722015,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17104879904101875706,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16830480400437399750,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7171606794823467103,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1962125835969742563,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9581088599378972321,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[813795769934850431,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17725418628365393926,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5893038469516244934,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17002347431842942188,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3247696082052491306,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1250632192672038569,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[6011250054333313481,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[13264462261958304631,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[11374198430379246765,0]}},{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[9483954524752636596,0]}}],"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":0,"byte_end":9270,"line_start":1,"line_end":283,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":85},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6803,"byte_end":6813,"line_start":205,"line_end":205,"column_start":16,"column_end":26},"alias_span":null,"name":"BiBTreeMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6892,"byte_end":6901,"line_start":210,"line_end":210,"column_start":15,"column_end":24},"alias_span":null,"name":"BiHashMap","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":0,"byte_end":9270,"line_start":1,"line_end":283,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":32},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":683},{"krate":0,"index":704},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":722},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":606}],"decl_id":null,"docs":" A fast two-way bijective map.","sig":null,"attributes":[{"value":"/ A fast two-way bijective map.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":34,"byte_end":37,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A bimap is a [bijective map] between values of type `L`, called left values,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":38,"byte_end":118,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ and values of type `R`, called right values. This means every left value is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":119,"byte_end":198,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ associated with exactly one right value and vice versa. Compare this to a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":199,"byte_end":276,"line_start":5,"line_end":5,"column_start":1,"column_end":78}},{"value":"/ [`HashMap`] or [`BTreeMap`], where every key is associated with exactly one","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":277,"byte_end":356,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ value but a value can be associated with more than one key.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":357,"byte_end":420,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":421,"byte_end":424,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This crate provides two kinds of bimap: a [`BiHashMap`] and a","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":425,"byte_end":490,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/ [`BiBTreeMap`]. Internally, each one is composed of two maps, one for the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":491,"byte_end":568,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ left-to-right direction and one for right-to-left. As such, the big-O","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":569,"byte_end":642,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ performance of the `get`, `remove`, `insert`, and `contains` methods are the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":643,"byte_end":723,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ same as those of the backing map.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":724,"byte_end":761,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":762,"byte_end":765,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ For convenience, the type definition [`BiMap`] corresponds to a `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":766,"byte_end":846,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ If you're using this crate without the standard library, it instead","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":847,"byte_end":918,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ corresponds to a `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":919,"byte_end":953,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":954,"byte_end":957,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":958,"byte_end":972,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":973,"byte_end":976,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":977,"byte_end":984,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use bimap::BiMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":985,"byte_end":1006,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1007,"byte_end":1010,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let mut elements = BiMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1011,"byte_end":1047,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1048,"byte_end":1051,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // insert chemicals and their corresponding symbols","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1052,"byte_end":1107,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ elements.insert(\"hydrogen\", \"H\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1108,"byte_end":1145,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/ elements.insert(\"carbon\", \"C\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1146,"byte_end":1181,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ elements.insert(\"bromine\", \"Br\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1182,"byte_end":1219,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/ elements.insert(\"neodymium\", \"Nd\");","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1220,"byte_end":1259,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1260,"byte_end":1263,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // retrieve chemical symbol by name (left to right)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1264,"byte_end":1319,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(elements.get_by_left(&\"bromine\"), Some(&\"Br\"));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1320,"byte_end":1382,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(elements.get_by_left(&\"oxygen\"), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1383,"byte_end":1437,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1438,"byte_end":1441,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // retrieve name by chemical symbol (right to left)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1442,"byte_end":1497,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(elements.get_by_right(&\"C\"), Some(&\"carbon\"));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1498,"byte_end":1559,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(elements.get_by_right(&\"Al\"), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1560,"byte_end":1611,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1612,"byte_end":1615,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // check membership","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1616,"byte_end":1639,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ assert!(elements.contains_left(&\"hydrogen\"));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1640,"byte_end":1689,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/ assert!(!elements.contains_right(&\"He\"));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1690,"byte_end":1735,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1736,"byte_end":1739,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // remove elements","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1740,"byte_end":1762,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1763,"byte_end":1778,"line_start":45,"line_end":45,"column_start":1,"column_end":16}},{"value":"/     elements.remove_by_left(&\"neodymium\"),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1779,"byte_end":1825,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     Some((\"neodymium\", \"Nd\"))","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1826,"byte_end":1859,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1860,"byte_end":1866,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(elements.remove_by_right(&\"Nd\"), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1867,"byte_end":1921,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1922,"byte_end":1925,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // iterate over elements","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1926,"byte_end":1954,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ for (left, right) in &elements {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1955,"byte_end":1991,"line_start":52,"line_end":52,"column_start":1,"column_end":37}},{"value":"/     println!(\"the chemical symbol for {} is {}\", left, right);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":1992,"byte_end":2058,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2059,"byte_end":2064,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2065,"byte_end":2072,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2073,"byte_end":2076,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ## Insertion and overwriting","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2077,"byte_end":2109,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2110,"byte_end":2113,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Consider the following example:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2114,"byte_end":2149,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2150,"byte_end":2153,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2154,"byte_end":2161,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ use bimap::BiMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2162,"byte_end":2183,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2184,"byte_end":2187,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut bimap = BiMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2188,"byte_end":2221,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2222,"byte_end":2247,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/ bimap.insert('b', 1); // what to do here?","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2248,"byte_end":2293,"line_start":66,"line_end":66,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2294,"byte_end":2301,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2302,"byte_end":2305,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ In order to maintain the bijection, the bimap cannot have both left-right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2306,"byte_end":2383,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/ pairs `('a', 1)` and `('b', 1)`. Otherwise, the right-value `1` would have","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2384,"byte_end":2462,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ two left values associated with it. Either we should allow the call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2463,"byte_end":2537,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ `insert` to go through and overwrite `('a', 1)`, or not let `('b', 1)` be","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2538,"byte_end":2615,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/ inserted at all. This crate allows for both possibilities. To insert with","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2616,"byte_end":2693,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ overwriting, use [`insert`], and to insert without overwriting, use","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2694,"byte_end":2765,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"/ [`insert_no_overwrite`]. The return type of `insert` is the `enum`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2766,"byte_end":2836,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/ [`Overwritten`], which indicates what values, if any, were overwritten; the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2837,"byte_end":2916,"line_start":76,"line_end":76,"column_start":1,"column_end":80}},{"value":"/ return type of `insert_no_overwrite` is a `Result` indicating if the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2917,"byte_end":2989,"line_start":77,"line_end":77,"column_start":1,"column_end":73}},{"value":"/ insertion was successful.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":2990,"byte_end":3019,"line_start":78,"line_end":78,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3020,"byte_end":3023,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This is especially important when dealing with types that can be equal while","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3024,"byte_end":3104,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"/ having different data. Unlike a `HashMap` or `BTreeMap`, which [doesn't","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3105,"byte_end":3180,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ update an equal key upon insertion], a bimap updates both the left values","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3181,"byte_end":3258,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"/ and the right values.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3259,"byte_end":3284,"line_start":83,"line_end":83,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3285,"byte_end":3288,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3289,"byte_end":3296,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use bimap::{BiMap, Overwritten};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3297,"byte_end":3333,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/ use std::cmp::Ordering;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3334,"byte_end":3361,"line_start":87,"line_end":87,"column_start":1,"column_end":28}},{"value":"/ use std::hash::{Hash, Hasher};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3362,"byte_end":3396,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3397,"byte_end":3400,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone, Copy, Debug)]","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3401,"byte_end":3434,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/ struct Foo {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3435,"byte_end":3451,"line_start":91,"line_end":91,"column_start":1,"column_end":17}},{"value":"/     important: char,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3452,"byte_end":3476,"line_start":92,"line_end":92,"column_start":1,"column_end":25}},{"value":"/     unimportant: u32,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3477,"byte_end":3502,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3503,"byte_end":3508,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3509,"byte_end":3512,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ // equality only depends on the important data","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3513,"byte_end":3563,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/ impl PartialEq for Foo {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3564,"byte_end":3592,"line_start":97,"line_end":97,"column_start":1,"column_end":29}},{"value":"/     fn eq(&self, other: &Foo) -> bool {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3593,"byte_end":3636,"line_start":98,"line_end":98,"column_start":1,"column_end":44}},{"value":"/         self.important == other.important","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3637,"byte_end":3682,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3683,"byte_end":3692,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3693,"byte_end":3698,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3699,"byte_end":3702,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ impl Eq for Foo {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3703,"byte_end":3725,"line_start":103,"line_end":103,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3726,"byte_end":3729,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ impl PartialOrd for Foo {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3730,"byte_end":3759,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/     fn partial_cmp(&self, other: &Foo) -> Option<Ordering> {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3760,"byte_end":3824,"line_start":106,"line_end":106,"column_start":1,"column_end":65}},{"value":"/         Some(self.cmp(other))","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3825,"byte_end":3858,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3859,"byte_end":3868,"line_start":108,"line_end":108,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3869,"byte_end":3874,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3875,"byte_end":3878,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // ordering only depends on the important data","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3879,"byte_end":3929,"line_start":111,"line_end":111,"column_start":1,"column_end":51}},{"value":"/ impl Ord for Foo {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3930,"byte_end":3952,"line_start":112,"line_end":112,"column_start":1,"column_end":23}},{"value":"/     fn cmp(&self, other: &Foo) -> Ordering {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":3953,"byte_end":4001,"line_start":113,"line_end":113,"column_start":1,"column_end":49}},{"value":"/         self.important.cmp(&other.important)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4002,"byte_end":4050,"line_start":114,"line_end":114,"column_start":1,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4051,"byte_end":4060,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4061,"byte_end":4066,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4067,"byte_end":4070,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // hash only depends on the important data","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4071,"byte_end":4117,"line_start":118,"line_end":118,"column_start":1,"column_end":47}},{"value":"/ impl Hash for Foo {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4118,"byte_end":4141,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/     fn hash<H: Hasher>(&self, state: &mut H) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4142,"byte_end":4192,"line_start":120,"line_end":120,"column_start":1,"column_end":51}},{"value":"/         self.important.hash(state);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4193,"byte_end":4232,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4233,"byte_end":4242,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4243,"byte_end":4248,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4249,"byte_end":4252,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ // create two Foos that are equal but have different data","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4253,"byte_end":4314,"line_start":125,"line_end":125,"column_start":1,"column_end":62}},{"value":"/ let foo1 = Foo {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4315,"byte_end":4335,"line_start":126,"line_end":126,"column_start":1,"column_end":21}},{"value":"/     important: 'a',","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4336,"byte_end":4359,"line_start":127,"line_end":127,"column_start":1,"column_end":24}},{"value":"/     unimportant: 1,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4360,"byte_end":4383,"line_start":128,"line_end":128,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4384,"byte_end":4390,"line_start":129,"line_end":129,"column_start":1,"column_end":7}},{"value":"/ let foo2 = Foo {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4391,"byte_end":4411,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"/     important: 'a',","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4412,"byte_end":4435,"line_start":131,"line_end":131,"column_start":1,"column_end":24}},{"value":"/     unimportant: 2,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4436,"byte_end":4459,"line_start":132,"line_end":132,"column_start":1,"column_end":24}},{"value":"/ };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4460,"byte_end":4466,"line_start":133,"line_end":133,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(foo1, foo2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4467,"byte_end":4494,"line_start":134,"line_end":134,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4495,"byte_end":4498,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ // insert both Foos into a bimap","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4499,"byte_end":4535,"line_start":136,"line_end":136,"column_start":1,"column_end":37}},{"value":"/ let mut bimap = BiMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4536,"byte_end":4569,"line_start":137,"line_end":137,"column_start":1,"column_end":34}},{"value":"/ bimap.insert(foo1, 99);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4570,"byte_end":4597,"line_start":138,"line_end":138,"column_start":1,"column_end":28}},{"value":"/ let overwritten = bimap.insert(foo2, 100);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4598,"byte_end":4644,"line_start":139,"line_end":139,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4645,"byte_end":4648,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ // foo1 is overwritten and returned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4649,"byte_end":4688,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"/ match overwritten {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4689,"byte_end":4712,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"/     Overwritten::Left(foo, 99) => assert_eq!(foo.unimportant, foo1.unimportant),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4713,"byte_end":4797,"line_start":143,"line_end":143,"column_start":1,"column_end":85}},{"value":"/     _ => unreachable!(),","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4798,"byte_end":4826,"line_start":144,"line_end":144,"column_start":1,"column_end":29}},{"value":"/ };","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4827,"byte_end":4833,"line_start":145,"line_end":145,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4834,"byte_end":4837,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ // foo2 is in the bimap","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4838,"byte_end":4865,"line_start":147,"line_end":147,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4866,"byte_end":4881,"line_start":148,"line_end":148,"column_start":1,"column_end":16}},{"value":"/     bimap.get_by_right(&100).unwrap().unimportant,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4882,"byte_end":4936,"line_start":149,"line_end":149,"column_start":1,"column_end":55}},{"value":"/     foo2.unimportant","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4937,"byte_end":4961,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4962,"byte_end":4968,"line_start":151,"line_end":151,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4969,"byte_end":4976,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4977,"byte_end":4980,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Note that the `FromIterator` and `Extend` implementations for both","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":4981,"byte_end":5051,"line_start":154,"line_end":154,"column_start":1,"column_end":71}},{"value":"/ `BiHashMap` and `BiBTreeMap` use the `insert` method internally, meaning","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5052,"byte_end":5128,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ that values from the original iterator/collection can be silently","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5129,"byte_end":5198,"line_start":156,"line_end":156,"column_start":1,"column_end":70}},{"value":"/ overwritten.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5199,"byte_end":5215,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5216,"byte_end":5219,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5220,"byte_end":5227,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ use bimap::BiMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5228,"byte_end":5249,"line_start":160,"line_end":160,"column_start":1,"column_end":22}},{"value":"/ use std::iter::FromIterator;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5250,"byte_end":5282,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5283,"byte_end":5286,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // note that both 'b' and 'c' have the right-value 2","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5287,"byte_end":5343,"line_start":163,"line_end":163,"column_start":1,"column_end":57}},{"value":"/ let mut bimap = BiMap::from_iter(vec![('a', 1), ('b', 2), ('c', 2)]);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5344,"byte_end":5417,"line_start":164,"line_end":164,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5418,"byte_end":5421,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // ('b', 2) was overwritten by ('c', 2)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5422,"byte_end":5465,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(bimap.len(), 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5466,"byte_end":5497,"line_start":167,"line_end":167,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(bimap.get_by_left(&'b'), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5498,"byte_end":5544,"line_start":168,"line_end":168,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(bimap.get_by_left(&'c'), Some(&2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5545,"byte_end":5595,"line_start":169,"line_end":169,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5596,"byte_end":5603,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5604,"byte_end":5607,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ## `no_std` compatibility","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5608,"byte_end":5637,"line_start":172,"line_end":172,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5638,"byte_end":5641,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This crate can be used without the standard library when the `std` feature","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5642,"byte_end":5720,"line_start":174,"line_end":174,"column_start":1,"column_end":79}},{"value":"/ is disabled. If you choose to do this, only `BiBTreeMap` is available, not","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5721,"byte_end":5799,"line_start":175,"line_end":175,"column_start":1,"column_end":79}},{"value":"/ `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5800,"byte_end":5816,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5817,"byte_end":5820,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ## serde compatibility","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5821,"byte_end":5847,"line_start":178,"line_end":178,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5848,"byte_end":5851,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ When the `serde` feature is enabled, implementations of `Serialize` and","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5852,"byte_end":5927,"line_start":180,"line_end":180,"column_start":1,"column_end":76}},{"value":"/ `Deserialize` are provided for [`BiHashMap`] and [`BiBTreeMap`], allowing","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":5928,"byte_end":6005,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/ them to be serialized or deserialized painlessly. See the [`serde`] module","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6006,"byte_end":6084,"line_start":182,"line_end":182,"column_start":1,"column_end":79}},{"value":"/ for examples and more information.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6085,"byte_end":6123,"line_start":183,"line_end":183,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6124,"byte_end":6127,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ [bijective map]: https://en.wikipedia.org/wiki/Bijection","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6128,"byte_end":6188,"line_start":185,"line_end":185,"column_start":1,"column_end":61}},{"value":"/ [doesn't update an equal key upon insertion]:","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6189,"byte_end":6238,"line_start":186,"line_end":186,"column_start":1,"column_end":50}},{"value":"/ https://doc.rust-lang.org/std/collections/index.html#insert-and-complex-keys","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6239,"byte_end":6319,"line_start":187,"line_end":187,"column_start":1,"column_end":81}},{"value":"/ [`HashMap`]: https://doc.rust-lang.org/std/collections/struct.HashMap.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6320,"byte_end":6398,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ [`BTreeMap`]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6399,"byte_end":6479,"line_start":189,"line_end":189,"column_start":1,"column_end":81}},{"value":"/ [`insert`]: BiHashMap::insert","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6480,"byte_end":6513,"line_start":190,"line_end":190,"column_start":1,"column_end":34}},{"value":"/ [`insert_no_overwrite`]: BiHashMap::insert_no_overwrite","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6514,"byte_end":6573,"line_start":191,"line_end":191,"column_start":1,"column_end":60}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6599,"byte_end":6621,"line_start":194,"line_end":194,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"btree","qualname":"::btree","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":90},{"krate":0,"index":125},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":153},{"krate":0,"index":159},{"krate":0,"index":165},{"krate":0,"index":169},{"krate":0,"index":173},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":204},{"krate":0,"index":209},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":258},{"krate":0,"index":263},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":277},{"krate":0,"index":663},{"krate":0,"index":668},{"krate":0,"index":285},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":673},{"krate":0,"index":678},{"krate":0,"index":307},{"krate":0,"index":313},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":329},{"krate":0,"index":332}],"decl_id":null,"docs":" A bimap backed by two `BTreeMap`s.\n","sig":null,"attributes":[{"value":"/ A bimap backed by two `BTreeMap`s.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":10519,"byte_end":10557,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11016,"byte_end":11026,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"BiBTreeMap","qualname":"::btree::BiBTreeMap","value":"BiBTreeMap {  }","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" A bimap backed by two `BTreeMap`s.","sig":null,"attributes":[{"value":"/ A bimap backed by two `BTreeMap`s.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":10846,"byte_end":10884,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":10885,"byte_end":10888,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation] for more details and examples.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":10889,"byte_end":10960,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":10961,"byte_end":10964,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [module-level documentation]: crate","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":10965,"byte_end":11004,"line_start":24,"line_end":24,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11382,"byte_end":11385,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BiBTreeMap<L, R>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `BiBTreeMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11186,"byte_end":11220,"line_start":35,"line_end":35,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11225,"byte_end":11228,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11233,"byte_end":11247,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11252,"byte_end":11255,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11260,"byte_end":11267,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11272,"byte_end":11298,"line_start":40,"line_end":40,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11303,"byte_end":11306,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let bimap = BiBTreeMap::<char, i32>::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11311,"byte_end":11358,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11363,"byte_end":11370,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11851,"byte_end":11854,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"len","qualname":"<BiBTreeMap<L, R>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of left-right pairs in the bimap.","sig":null,"attributes":[{"value":"/ Returns the number of left-right pairs in the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11516,"byte_end":11572,"line_start":51,"line_end":51,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11577,"byte_end":11580,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11585,"byte_end":11599,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11604,"byte_end":11607,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11612,"byte_end":11619,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11624,"byte_end":11650,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11655,"byte_end":11658,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11663,"byte_end":11701,"line_start":58,"line_end":58,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11706,"byte_end":11731,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11736,"byte_end":11761,"line_start":60,"line_end":60,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11766,"byte_end":11791,"line_start":61,"line_end":61,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(bimap.len(), 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11796,"byte_end":11827,"line_start":62,"line_end":62,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11832,"byte_end":11839,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12330,"byte_end":12338,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BiBTreeMap<L, R>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bimap contains no left-right pairs, and `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if the bimap contains no left-right pairs, and `false`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11914,"byte_end":11987,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11992,"byte_end":12006,"line_start":69,"line_end":69,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12011,"byte_end":12014,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12019,"byte_end":12033,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12038,"byte_end":12041,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12046,"byte_end":12053,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12058,"byte_end":12084,"line_start":74,"line_end":74,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12089,"byte_end":12092,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12097,"byte_end":12135,"line_start":76,"line_end":76,"column_start":5,"column_end":43}},{"value":"/ assert!(bimap.is_empty());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12140,"byte_end":12170,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12175,"byte_end":12200,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/ assert!(!bimap.is_empty());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12205,"byte_end":12236,"line_start":79,"line_end":79,"column_start":5,"column_end":36}},{"value":"/ bimap.remove_by_right(&1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12241,"byte_end":12271,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ assert!(bimap.is_empty());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12276,"byte_end":12306,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12311,"byte_end":12318,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12751,"byte_end":12756,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"clear","qualname":"<BiBTreeMap<L, R>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all left-right pairs from the bimap.","sig":null,"attributes":[{"value":"/ Removes all left-right pairs from the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12402,"byte_end":12450,"line_start":87,"line_end":87,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12455,"byte_end":12458,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12463,"byte_end":12477,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12482,"byte_end":12485,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12490,"byte_end":12497,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12502,"byte_end":12528,"line_start":92,"line_end":92,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12533,"byte_end":12536,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12541,"byte_end":12579,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12584,"byte_end":12609,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12614,"byte_end":12639,"line_start":96,"line_end":96,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12644,"byte_end":12669,"line_start":97,"line_end":97,"column_start":5,"column_end":30}},{"value":"/ bimap.clear();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12674,"byte_end":12692,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/ assert!(bimap.len() == 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12697,"byte_end":12727,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12732,"byte_end":12739,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13360,"byte_end":13364,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"iter","qualname":"<BiBTreeMap<L, R>>::iter","value":"pub fn iter(&Self) -> Iter<, L, R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the left-right pairs in the bimap in ascending\n order by left value.","sig":null,"attributes":[{"value":"/ Creates an iterator over the left-right pairs in the bimap in ascending","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12847,"byte_end":12922,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ order by left value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12927,"byte_end":12951,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12956,"byte_end":12959,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `(&L, &R)`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":12964,"byte_end":13008,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13013,"byte_end":13016,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13021,"byte_end":13035,"line_start":111,"line_end":111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13040,"byte_end":13043,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13048,"byte_end":13055,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13060,"byte_end":13086,"line_start":114,"line_end":114,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13091,"byte_end":13094,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13099,"byte_end":13137,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13142,"byte_end":13167,"line_start":117,"line_end":117,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13172,"byte_end":13197,"line_start":118,"line_end":118,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13202,"byte_end":13227,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13232,"byte_end":13235,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ for (left, right) in bimap.iter() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13240,"byte_end":13279,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/     println!(\"({}, {})\", left, right);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13284,"byte_end":13326,"line_start":122,"line_end":122,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13331,"byte_end":13336,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13341,"byte_end":13348,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13956,"byte_end":13967,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"left_values","qualname":"<BiBTreeMap<L, R>>::left_values","value":"pub fn left_values(&Self) -> LeftValues<, L, R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the left values in the bimap in ascending\n order.","sig":null,"attributes":[{"value":"/ Creates an iterator over the left values in the bimap in ascending","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13471,"byte_end":13541,"line_start":131,"line_end":131,"column_start":5,"column_end":75}},{"value":"/ order.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13546,"byte_end":13556,"line_start":132,"line_end":132,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13561,"byte_end":13564,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `&L`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13569,"byte_end":13607,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13612,"byte_end":13615,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13620,"byte_end":13634,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13639,"byte_end":13642,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13647,"byte_end":13654,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13659,"byte_end":13685,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13690,"byte_end":13693,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13698,"byte_end":13736,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13741,"byte_end":13766,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13771,"byte_end":13796,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13801,"byte_end":13826,"line_start":144,"line_end":144,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13831,"byte_end":13834,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ for char_value in bimap.left_values() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13839,"byte_end":13882,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/     println!(\"{}\", char_value);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13887,"byte_end":13922,"line_start":147,"line_end":147,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13927,"byte_end":13932,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":13937,"byte_end":13944,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14571,"byte_end":14583,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"right_values","qualname":"<BiBTreeMap<L, R>>::right_values","value":"pub fn right_values(&Self) -> RightValues<, L, R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the right values in the bimap in ascending\n order.","sig":null,"attributes":[{"value":"/ Creates an iterator over the right values in the bimap in ascending","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14086,"byte_end":14157,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/ order.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14162,"byte_end":14172,"line_start":157,"line_end":157,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14177,"byte_end":14180,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `&R`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14185,"byte_end":14223,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14228,"byte_end":14231,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14236,"byte_end":14250,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14255,"byte_end":14258,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14263,"byte_end":14270,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14275,"byte_end":14301,"line_start":164,"line_end":164,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14306,"byte_end":14309,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14314,"byte_end":14352,"line_start":166,"line_end":166,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14357,"byte_end":14382,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14387,"byte_end":14412,"line_start":168,"line_end":168,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14417,"byte_end":14442,"line_start":169,"line_end":169,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14447,"byte_end":14450,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ for int_value in bimap.right_values() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14455,"byte_end":14498,"line_start":171,"line_end":171,"column_start":5,"column_end":48}},{"value":"/     println!(\"{}\", int_value);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14503,"byte_end":14537,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14542,"byte_end":14547,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14552,"byte_end":14559,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15257,"byte_end":15268,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"get_by_left","qualname":"<BiBTreeMap<L, R>>::get_by_left","value":"pub fn get_by_left<Q>(&Self, &Q) -> Option<&R> where L: Borrow<Q>, Q: Ord +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the right value corresponding to the given left\n value.","sig":null,"attributes":[{"value":"/ Returns a reference to the right value corresponding to the given left","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14704,"byte_end":14778,"line_start":181,"line_end":181,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14783,"byte_end":14793,"line_start":182,"line_end":182,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14798,"byte_end":14801,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's left type, but the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14806,"byte_end":14878,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ ordering on the borrowed form *must* match the ordering on the left","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14883,"byte_end":14954,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14959,"byte_end":14968,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14973,"byte_end":14976,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":14981,"byte_end":14995,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15000,"byte_end":15003,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15008,"byte_end":15015,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15020,"byte_end":15046,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15051,"byte_end":15054,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15059,"byte_end":15097,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15102,"byte_end":15127,"line_start":194,"line_end":194,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(bimap.get_by_left(&'a'), Some(&1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15132,"byte_end":15182,"line_start":195,"line_end":195,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(bimap.get_by_left(&'z'), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15187,"byte_end":15233,"line_start":196,"line_end":196,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15238,"byte_end":15245,"line_start":197,"line_end":197,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15996,"byte_end":16008,"line_start":223,"line_end":223,"column_start":12,"column_end":24},"name":"get_by_right","qualname":"<BiBTreeMap<L, R>>::get_by_right","value":"pub fn get_by_right<Q>(&Self, &Q) -> Option<&L> where R: Borrow<Q>, Q: Ord +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the left value corresponding to the given right\n value.","sig":null,"attributes":[{"value":"/ Returns a reference to the left value corresponding to the given right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15441,"byte_end":15515,"line_start":206,"line_end":206,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15520,"byte_end":15530,"line_start":207,"line_end":207,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15535,"byte_end":15538,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's right type, but the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15543,"byte_end":15616,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ ordering on the borrowed form *must* match the ordering on the right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15621,"byte_end":15693,"line_start":210,"line_end":210,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15698,"byte_end":15707,"line_start":211,"line_end":211,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15712,"byte_end":15715,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15720,"byte_end":15734,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15739,"byte_end":15742,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15747,"byte_end":15754,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15759,"byte_end":15785,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15790,"byte_end":15793,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15798,"byte_end":15836,"line_start":218,"line_end":218,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15841,"byte_end":15866,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(bimap.get_by_right(&1), Some(&'a'));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15871,"byte_end":15922,"line_start":220,"line_end":220,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(bimap.get_by_right(&2), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15927,"byte_end":15972,"line_start":221,"line_end":221,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":15977,"byte_end":15984,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16722,"byte_end":16735,"line_start":248,"line_end":248,"column_start":12,"column_end":25},"name":"contains_left","qualname":"<BiBTreeMap<L, R>>::contains_left","value":"pub fn contains_left<Q>(&Self, &Q) -> bool where L: Borrow<Q>, Q: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bimap contains the given left value and `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if the bimap contains the given left value and `false`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16183,"byte_end":16256,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16261,"byte_end":16275,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16280,"byte_end":16283,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's left type, but the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16288,"byte_end":16360,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/ ordering on the borrowed form *must* match the ordering on the left","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16365,"byte_end":16436,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16441,"byte_end":16450,"line_start":236,"line_end":236,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16455,"byte_end":16458,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16463,"byte_end":16477,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16482,"byte_end":16485,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16490,"byte_end":16497,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16502,"byte_end":16528,"line_start":241,"line_end":241,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16533,"byte_end":16536,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16541,"byte_end":16579,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16584,"byte_end":16609,"line_start":244,"line_end":244,"column_start":5,"column_end":30}},{"value":"/ assert!(bimap.contains_left(&'a'));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16614,"byte_end":16653,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/ assert!(!bimap.contains_left(&'b'));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16658,"byte_end":16698,"line_start":246,"line_end":246,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16703,"byte_end":16710,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17434,"byte_end":17448,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"contains_right","qualname":"<BiBTreeMap<L, R>>::contains_right","value":"pub fn contains_right<Q>(&Self, &Q) -> bool where R: Borrow<Q>, Q: Ord +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains the given right value and `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains the given right value and `false`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16896,"byte_end":16968,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16973,"byte_end":16987,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":16992,"byte_end":16995,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's right type, but the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17000,"byte_end":17073,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/ ordering on the borrowed form *must* match the ordering on the right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17078,"byte_end":17150,"line_start":260,"line_end":260,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17155,"byte_end":17164,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17169,"byte_end":17172,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17177,"byte_end":17191,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17196,"byte_end":17199,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17204,"byte_end":17211,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17216,"byte_end":17242,"line_start":266,"line_end":266,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17247,"byte_end":17250,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17255,"byte_end":17293,"line_start":268,"line_end":268,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17298,"byte_end":17323,"line_start":269,"line_end":269,"column_start":5,"column_end":30}},{"value":"/ assert!(bimap.contains_right(&1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17328,"byte_end":17366,"line_start":270,"line_end":270,"column_start":5,"column_end":43}},{"value":"/ assert!(!bimap.contains_right(&2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17371,"byte_end":17410,"line_start":271,"line_end":271,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17415,"byte_end":17422,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18344,"byte_end":18358,"line_start":303,"line_end":303,"column_start":12,"column_end":26},"name":"remove_by_left","qualname":"<BiBTreeMap<L, R>>::remove_by_left","value":"pub fn remove_by_left<Q>(&mut Self, &Q) -> Option<(L, R)> where L: Borrow<Q>,\nQ: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Removes the left-right pair corresponding to the given left value.","sig":null,"attributes":[{"value":"/ Removes the left-right pair corresponding to the given left value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17611,"byte_end":17681,"line_start":281,"line_end":281,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17686,"byte_end":17689,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returns the previous left-right pair if the map contained the left value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17694,"byte_end":17770,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ and `None` otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17775,"byte_end":17800,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17805,"byte_end":17808,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's left type, but the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17813,"byte_end":17885,"line_start":286,"line_end":286,"column_start":5,"column_end":77}},{"value":"/ ordering on the borrowed form *must* match the ordering on the left","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17890,"byte_end":17961,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17966,"byte_end":17975,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17980,"byte_end":17983,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":17988,"byte_end":18002,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18007,"byte_end":18010,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18015,"byte_end":18022,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18027,"byte_end":18053,"line_start":293,"line_end":293,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18058,"byte_end":18061,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18066,"byte_end":18104,"line_start":295,"line_end":295,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18109,"byte_end":18134,"line_start":296,"line_end":296,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18139,"byte_end":18164,"line_start":297,"line_end":297,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18169,"byte_end":18194,"line_start":298,"line_end":298,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18199,"byte_end":18202,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bimap.remove_by_left(&'b'), Some(('b', 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18207,"byte_end":18266,"line_start":300,"line_end":300,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(bimap.remove_by_left(&'b'), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18271,"byte_end":18320,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18325,"byte_end":18332,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19678,"byte_end":19693,"line_start":341,"line_end":341,"column_start":12,"column_end":27},"name":"remove_by_right","qualname":"<BiBTreeMap<L, R>>::remove_by_right","value":"pub fn remove_by_right<Q>(&mut Self, &Q) -> Option<(L, R)> where R: Borrow<Q>,\nQ: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Removes the left-right pair corresponding to the given right value.","sig":null,"attributes":[{"value":"/ Removes the left-right pair corresponding to the given right value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":18943,"byte_end":19014,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19019,"byte_end":19022,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Returns the previous left-right pair if the map contained the right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19027,"byte_end":19098,"line_start":321,"line_end":321,"column_start":5,"column_end":76}},{"value":"/ value and `None` otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19103,"byte_end":19134,"line_start":322,"line_end":322,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19139,"byte_end":19142,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's right type, but the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19147,"byte_end":19220,"line_start":324,"line_end":324,"column_start":5,"column_end":78}},{"value":"/ ordering on the borrowed form *must* match the ordering on the right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19225,"byte_end":19297,"line_start":325,"line_end":325,"column_start":5,"column_end":77}},{"value":"/ type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19302,"byte_end":19311,"line_start":326,"line_end":326,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19316,"byte_end":19319,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19324,"byte_end":19338,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19343,"byte_end":19346,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19351,"byte_end":19358,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19363,"byte_end":19389,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19394,"byte_end":19397,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19402,"byte_end":19440,"line_start":333,"line_end":333,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19445,"byte_end":19470,"line_start":334,"line_end":334,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19475,"byte_end":19500,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19505,"byte_end":19530,"line_start":336,"line_end":336,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19535,"byte_end":19538,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bimap.remove_by_right(&2), Some(('b', 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19543,"byte_end":19601,"line_start":338,"line_end":338,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(bimap.remove_by_right(&2), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19606,"byte_end":19654,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":19659,"byte_end":19666,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22631,"byte_end":22637,"line_start":406,"line_end":406,"column_start":12,"column_end":18},"name":"insert","qualname":"<BiBTreeMap<L, R>>::insert","value":"pub fn insert(&mut Self, L, R) -> Overwritten<L, R>","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given left-right pair into the bimap.","sig":null,"attributes":[{"value":"/ Inserts the given left-right pair into the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20279,"byte_end":20332,"line_start":357,"line_end":357,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20337,"byte_end":20340,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Returns an enum `Overwritten` representing any left-right pairs that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20345,"byte_end":20417,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ were overwritten by the call to `insert`. The example below details","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20422,"byte_end":20493,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ all possible enum variants that can be returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20498,"byte_end":20550,"line_start":361,"line_end":361,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20555,"byte_end":20558,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Warnings","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20563,"byte_end":20577,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20582,"byte_end":20585,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Somewhat paradoxically, calling `insert()` can actually reduce the size","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20590,"byte_end":20665,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ of the bimap! This is because of the invariant that each left value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20670,"byte_end":20741,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/ maps to exactly one right value and vice versa.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20746,"byte_end":20797,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20802,"byte_end":20805,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20810,"byte_end":20824,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20829,"byte_end":20832,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20837,"byte_end":20844,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use bimap::{BiBTreeMap, Overwritten};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20849,"byte_end":20890,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20895,"byte_end":20898,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20903,"byte_end":20941,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(bimap.len(), 0); // {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20946,"byte_end":20983,"line_start":375,"line_end":375,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20988,"byte_end":20991,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ // no values are overwritten.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":20996,"byte_end":21029,"line_start":377,"line_end":377,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(bimap.insert('a', 1), Overwritten::Neither);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21034,"byte_end":21093,"line_start":378,"line_end":378,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(bimap.len(), 1); // {'a' <> 1}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21098,"byte_end":21143,"line_start":379,"line_end":379,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21148,"byte_end":21151,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ // no values are overwritten.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21156,"byte_end":21189,"line_start":381,"line_end":381,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(bimap.insert('b', 2), Overwritten::Neither);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21194,"byte_end":21253,"line_start":382,"line_end":382,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(bimap.len(), 2); // {'a' <> 1, 'b' <> 2}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21258,"byte_end":21313,"line_start":383,"line_end":383,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21318,"byte_end":21321,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ // ('a', 1) already exists, so inserting ('a', 4) overwrites 'a', the left value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21326,"byte_end":21411,"line_start":385,"line_end":385,"column_start":5,"column_end":90}},{"value":"/ // the previous left-right pair ('a', 1) is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21416,"byte_end":21473,"line_start":386,"line_end":386,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(bimap.insert('a', 4), Overwritten::Left('a', 1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21478,"byte_end":21542,"line_start":387,"line_end":387,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(bimap.len(), 2); // {'a' <> 4, 'b' <> 2}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21547,"byte_end":21602,"line_start":388,"line_end":388,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21607,"byte_end":21610,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ // ('b', 2) already exists, so inserting ('c', 2) overwrites 2, the right value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21615,"byte_end":21699,"line_start":390,"line_end":390,"column_start":5,"column_end":89}},{"value":"/ // the previous left-right pair ('b', 2) is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21704,"byte_end":21761,"line_start":391,"line_end":391,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(bimap.insert('c', 2), Overwritten::Right('b', 2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21766,"byte_end":21831,"line_start":392,"line_end":392,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(bimap.len(), 2); // {'a' <> 1, 'c' <> 2}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21836,"byte_end":21891,"line_start":393,"line_end":393,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21896,"byte_end":21899,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ // both ('a', 4) and ('c', 2) already exist, so inserting ('a', 2) overwrites both.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21904,"byte_end":21991,"line_start":395,"line_end":395,"column_start":5,"column_end":92}},{"value":"/ // ('a', 4) has the overwritten left value ('a'), so it's the first tuple returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":21996,"byte_end":22083,"line_start":396,"line_end":396,"column_start":5,"column_end":92}},{"value":"/ // ('c', 2) has the overwritten right value (2), so it's the second tuple returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22088,"byte_end":22175,"line_start":397,"line_end":397,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(bimap.insert('a', 2), Overwritten::Both(('a', 4), ('c', 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22180,"byte_end":22256,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(bimap.len(), 1); // {'a' <> 2} // bimap is smaller than before!","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22261,"byte_end":22339,"line_start":399,"line_end":399,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22344,"byte_end":22347,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ // ('a', 2) already exists, so inserting ('a', 2) overwrites the pair.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22352,"byte_end":22426,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ // the previous left-right pair ('a', 2) is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22431,"byte_end":22488,"line_start":402,"line_end":402,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(bimap.insert('a', 2), Overwritten::Pair('a', 2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22493,"byte_end":22557,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(bimap.len(), 1); // {'a' <> 2}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22562,"byte_end":22607,"line_start":404,"line_end":404,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":22612,"byte_end":22619,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":24225,"byte_end":24244,"line_start":443,"line_end":443,"column_start":12,"column_end":31},"name":"insert_no_overwrite","qualname":"<BiBTreeMap<L, R>>::insert_no_overwrite","value":"pub fn insert_no_overwrite(&mut Self, L, R) -> Result<(), (L, R)>","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given left-right pair into the bimap without overwriting any\n existing values.","sig":null,"attributes":[{"value":"/ Inserts the given left-right pair into the bimap without overwriting any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23474,"byte_end":23550,"line_start":425,"line_end":425,"column_start":5,"column_end":81}},{"value":"/ existing values.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23555,"byte_end":23575,"line_start":426,"line_end":426,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23580,"byte_end":23583,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if the pair was successfully inserted into the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23588,"byte_end":23662,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ If either value exists in the map, `Err((left, right)` is returned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23667,"byte_end":23737,"line_start":429,"line_end":429,"column_start":5,"column_end":75}},{"value":"/ with the attempted left-right pair and the map is unchanged.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23742,"byte_end":23806,"line_start":430,"line_end":430,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23811,"byte_end":23814,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23819,"byte_end":23833,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23838,"byte_end":23841,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23846,"byte_end":23853,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23858,"byte_end":23884,"line_start":435,"line_end":435,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23889,"byte_end":23892,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23897,"byte_end":23935,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(bimap.insert_no_overwrite('a', 1), Ok(()));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":23940,"byte_end":23998,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(bimap.insert_no_overwrite('b', 2), Ok(()));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":24003,"byte_end":24061,"line_start":439,"line_end":439,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(bimap.insert_no_overwrite('a', 3), Err(('a', 3)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":24066,"byte_end":24131,"line_start":440,"line_end":440,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(bimap.insert_no_overwrite('c', 2), Err(('c', 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":24136,"byte_end":24201,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":24206,"byte_end":24213,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25642,"byte_end":25652,"line_start":485,"line_end":485,"column_start":12,"column_end":22},"name":"left_range","qualname":"<BiBTreeMap<L, R>>::left_range","value":"pub fn left_range<T, A>(&Self, A) -> LeftRange<, L, R> where L: Borrow<T>,\nA: RangeBounds<T>, T: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the left-right pairs lying within a range of\n left values in the bimap in ascending order by left.","sig":null,"attributes":[{"value":"/ Creates an iterator over the left-right pairs lying within a range of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":24873,"byte_end":24946,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ left values in the bimap in ascending order by left.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":24951,"byte_end":25007,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25012,"byte_end":25015,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `(&L, &R)`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25020,"byte_end":25064,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25069,"byte_end":25072,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The range bounds may be any borrowed form of the bimap's left type, but","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25077,"byte_end":25152,"line_start":466,"line_end":466,"column_start":5,"column_end":80}},{"value":"/ the ordering on the borrowed form *must* match the ordering on the left","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25157,"byte_end":25232,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25237,"byte_end":25246,"line_start":468,"line_end":468,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25251,"byte_end":25254,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25259,"byte_end":25273,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25278,"byte_end":25281,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25286,"byte_end":25293,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25298,"byte_end":25324,"line_start":473,"line_end":473,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25329,"byte_end":25332,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25337,"byte_end":25375,"line_start":475,"line_end":475,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25380,"byte_end":25405,"line_start":476,"line_end":476,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25410,"byte_end":25435,"line_start":477,"line_end":477,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25440,"byte_end":25465,"line_start":478,"line_end":478,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('d', 4);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25470,"byte_end":25495,"line_start":479,"line_end":479,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25500,"byte_end":25503,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ for (left, right) in bimap.left_range('b'..'d') {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25508,"byte_end":25561,"line_start":481,"line_end":481,"column_start":5,"column_end":58}},{"value":"/     println!(\"({}, {})\", left, right);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25566,"byte_end":25608,"line_start":482,"line_end":482,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25613,"byte_end":25618,"line_start":483,"line_end":483,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":25623,"byte_end":25630,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26793,"byte_end":26804,"line_start":522,"line_end":522,"column_start":12,"column_end":23},"name":"right_range","qualname":"<BiBTreeMap<L, R>>::right_range","value":"pub fn right_range<T, A>(&Self, A) -> RightRange<, L, R> where R: Borrow<T>,\nA: RangeBounds<T>, T: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the left-right pairs lying within a range of\n right values in the bimap in ascending order by right.","sig":null,"attributes":[{"value":"/ Creates an iterator over the left-right pairs lying within a range of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26023,"byte_end":26096,"line_start":498,"line_end":498,"column_start":5,"column_end":78}},{"value":"/ right values in the bimap in ascending order by right.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26101,"byte_end":26159,"line_start":499,"line_end":499,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26164,"byte_end":26167,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `(&L, &R)`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26172,"byte_end":26216,"line_start":501,"line_end":501,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26221,"byte_end":26224,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ The range bounds may be any borrowed form of the bimap's right type, but","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26229,"byte_end":26305,"line_start":503,"line_end":503,"column_start":5,"column_end":81}},{"value":"/ the ordering on the borrowed form *must* match the ordering on the right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26310,"byte_end":26386,"line_start":504,"line_end":504,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26391,"byte_end":26400,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26405,"byte_end":26408,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26413,"byte_end":26427,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26432,"byte_end":26435,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26440,"byte_end":26447,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiBTreeMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26452,"byte_end":26478,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26483,"byte_end":26486,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiBTreeMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26491,"byte_end":26529,"line_start":512,"line_end":512,"column_start":5,"column_end":43}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26534,"byte_end":26559,"line_start":513,"line_end":513,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26564,"byte_end":26589,"line_start":514,"line_end":514,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26594,"byte_end":26619,"line_start":515,"line_end":515,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('d', 4);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26624,"byte_end":26649,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26654,"byte_end":26657,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ for (left, right) in bimap.right_range(2..4) {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26662,"byte_end":26712,"line_start":518,"line_end":518,"column_start":5,"column_end":55}},{"value":"/     println!(\"({}, {})\", left, right);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26717,"byte_end":26759,"line_start":519,"line_end":519,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26764,"byte_end":26769,"line_start":520,"line_end":520,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":26774,"byte_end":26781,"line_start":521,"line_end":521,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29990,"byte_end":29998,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::btree::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":" An owning iterator over the left-right pairs in a `BiBTreeMap`.\n","sig":null,"attributes":[{"value":"/ An owning iterator over the left-right pairs in a `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29911,"byte_end":29978,"line_start":679,"line_end":679,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":204},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31140,"byte_end":31144,"line_start":723,"line_end":723,"column_start":12,"column_end":16},"name":"Iter","qualname":"::btree::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":208}],"decl_id":null,"docs":" An iterator over the left-right pairs in a `BiBTreeMap`.","sig":null,"attributes":[{"value":"/ An iterator over the left-right pairs in a `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30962,"byte_end":31022,"line_start":718,"line_end":718,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31023,"byte_end":31026,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method of `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31027,"byte_end":31093,"line_start":720,"line_end":720,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31094,"byte_end":31097,"line_start":721,"line_end":721,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: BiBTreeMap::iter","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31098,"byte_end":31128,"line_start":722,"line_end":722,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":231},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31966,"byte_end":31976,"line_start":754,"line_end":754,"column_start":12,"column_end":22},"name":"LeftValues","qualname":"::btree::LeftValues","value":"LeftValues {  }","parent":null,"children":[{"krate":0,"index":235}],"decl_id":null,"docs":" An iterator over the left values in a `BiBTreeMap`.","sig":null,"attributes":[{"value":"/ An iterator over the left values in a `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31772,"byte_end":31827,"line_start":749,"line_end":749,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31828,"byte_end":31831,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`left_values`] method of `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31832,"byte_end":31905,"line_start":751,"line_end":751,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31906,"byte_end":31909,"line_start":752,"line_end":752,"column_start":1,"column_end":4}},{"value":"/ [`left_values`]: BiBTreeMap::left_values","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31910,"byte_end":31954,"line_start":753,"line_end":753,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32799,"byte_end":32810,"line_start":785,"line_end":785,"column_start":12,"column_end":23},"name":"RightValues","qualname":"::btree::RightValues","value":"RightValues {  }","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" An iterator over the right values in a `BiBTreeMap`.","sig":null,"attributes":[{"value":"/ An iterator over the right values in a `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32601,"byte_end":32657,"line_start":780,"line_end":780,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32658,"byte_end":32661,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`right_values`] method of `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32662,"byte_end":32736,"line_start":782,"line_end":782,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32737,"byte_end":32740,"line_start":783,"line_end":783,"column_start":1,"column_end":4}},{"value":"/ [`right_values`]: BiBTreeMap::right_values","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32741,"byte_end":32787,"line_start":784,"line_end":784,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":663},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33659,"byte_end":33668,"line_start":817,"line_end":817,"column_start":12,"column_end":21},"name":"LeftRange","qualname":"::btree::LeftRange","value":"LeftRange {  }","parent":null,"children":[{"krate":0,"index":667}],"decl_id":null,"docs":" An iterator over a range of left-right pairs in a `BiBTreeMap`.","sig":null,"attributes":[{"value":"/ An iterator over a range of left-right pairs in a `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33439,"byte_end":33506,"line_start":811,"line_end":811,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33507,"byte_end":33510,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`left_range`] method of `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33511,"byte_end":33583,"line_start":813,"line_end":813,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33584,"byte_end":33587,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ [`left_range`]: BiBTreeMap::left_range","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33588,"byte_end":33630,"line_start":815,"line_end":815,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":673},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34540,"byte_end":34550,"line_start":849,"line_end":849,"column_start":12,"column_end":22},"name":"RightRange","qualname":"::btree::RightRange","value":"RightRange {  }","parent":null,"children":[{"krate":0,"index":677}],"decl_id":null,"docs":" An iterator over a range of left-right pairs in a `BiBTreeMap`.","sig":null,"attributes":[{"value":"/ An iterator over a range of left-right pairs in a `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34317,"byte_end":34384,"line_start":843,"line_end":843,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34385,"byte_end":34388,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`right_range`] method of `BiBTreeMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34389,"byte_end":34462,"line_start":845,"line_end":845,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34463,"byte_end":34466,"line_start":846,"line_end":846,"column_start":1,"column_end":4}},{"value":"/ [`right_range`]: BiBTreeMap::right_range","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34467,"byte_end":34511,"line_start":847,"line_end":847,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":338},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hash","qualname":"::hash","value":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":391},{"krate":0,"index":396},{"krate":0,"index":408},{"krate":0,"index":437},{"krate":0,"index":443},{"krate":0,"index":461},{"krate":0,"index":467},{"krate":0,"index":472},{"krate":0,"index":479},{"krate":0,"index":488},{"krate":0,"index":496},{"krate":0,"index":504},{"krate":0,"index":510},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":527},{"krate":0,"index":532},{"krate":0,"index":536},{"krate":0,"index":540},{"krate":0,"index":548},{"krate":0,"index":553},{"krate":0,"index":557},{"krate":0,"index":561},{"krate":0,"index":569},{"krate":0,"index":574},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":590},{"krate":0,"index":595}],"decl_id":null,"docs":" A bimap backed by two `HashMap`s.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6816,"byte_end":6839,"line_start":207,"line_end":207,"column_start":1,"column_end":24}},{"value":"/ A bimap backed by two `HashMap`s.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":45429,"byte_end":45466,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":45869,"byte_end":45878,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"BiHashMap","qualname":"::hash::BiHashMap","value":"BiHashMap {  }","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":" A bimap backed by two `HashMap`s.","sig":null,"attributes":[{"value":"/ A bimap backed by two `HashMap`s.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":45700,"byte_end":45737,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":45738,"byte_end":45741,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation] for more details and examples.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":45742,"byte_end":45813,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":45814,"byte_end":45817,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [module-level documentation]: crate","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":45818,"byte_end":45857,"line_start":20,"line_end":20,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46350,"byte_end":46353,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BiHashMap<L, R, hash_map::RandomState, hash_map::RandomState>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `BiHashMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46157,"byte_end":46190,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46195,"byte_end":46198,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46203,"byte_end":46217,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46222,"byte_end":46225,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46230,"byte_end":46237,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46242,"byte_end":46267,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46272,"byte_end":46275,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let bimap = BiHashMap::<char, i32>::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46280,"byte_end":46326,"line_start":38,"line_end":38,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46331,"byte_end":46338,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46755,"byte_end":46768,"line_start":57,"line_end":57,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BiHashMap<L, R, hash_map::RandomState, hash_map::RandomState>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `BiHashMap` with the given capacity.","sig":null,"attributes":[{"value":"/ Creates a new empty `BiHashMap` with the given capacity.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46482,"byte_end":46542,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46547,"byte_end":46550,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46555,"byte_end":46569,"line_start":49,"line_end":49,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46574,"byte_end":46577,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46582,"byte_end":46589,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46594,"byte_end":46619,"line_start":52,"line_end":52,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46624,"byte_end":46627,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let bimap = BiHashMap::<char, i32>::with_capacity(10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46632,"byte_end":46690,"line_start":54,"line_end":54,"column_start":5,"column_end":63}},{"value":"/ assert!(bimap.capacity() >= 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46695,"byte_end":46731,"line_start":55,"line_end":55,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46736,"byte_end":46743,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47370,"byte_end":47373,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"len","qualname":"<BiHashMap<L, R, LS, RS>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of left-right pairs in the bimap.","sig":null,"attributes":[{"value":"/ Returns the number of left-right pairs in the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47037,"byte_end":47093,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47098,"byte_end":47101,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47106,"byte_end":47120,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47125,"byte_end":47128,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47133,"byte_end":47140,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47145,"byte_end":47170,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47175,"byte_end":47178,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47183,"byte_end":47220,"line_start":77,"line_end":77,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47225,"byte_end":47250,"line_start":78,"line_end":78,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47255,"byte_end":47280,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47285,"byte_end":47310,"line_start":80,"line_end":80,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(bimap.len(), 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47315,"byte_end":47346,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47351,"byte_end":47358,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47847,"byte_end":47855,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BiHashMap<L, R, LS, RS>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bimap contains no left-right pairs, and `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if the bimap contains no left-right pairs, and `false`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47433,"byte_end":47506,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47511,"byte_end":47525,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47530,"byte_end":47533,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47538,"byte_end":47552,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47557,"byte_end":47560,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47565,"byte_end":47572,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47577,"byte_end":47602,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47607,"byte_end":47610,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47615,"byte_end":47652,"line_start":95,"line_end":95,"column_start":5,"column_end":42}},{"value":"/ assert!(bimap.is_empty());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47657,"byte_end":47687,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47692,"byte_end":47717,"line_start":97,"line_end":97,"column_start":5,"column_end":30}},{"value":"/ assert!(!bimap.is_empty());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47722,"byte_end":47753,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ bimap.remove_by_right(&1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47758,"byte_end":47788,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/ assert!(bimap.is_empty());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47793,"byte_end":47823,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47828,"byte_end":47835,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48254,"byte_end":48262,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BiHashMap<L, R, LS, RS>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns a lower bound on the number of left-right pairs the `BiHashMap`\n can store without reallocating memory.","sig":null,"attributes":[{"value":"/ Returns a lower bound on the number of left-right pairs the `BiHashMap`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47919,"byte_end":47994,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"/ can store without reallocating memory.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":47999,"byte_end":48041,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48046,"byte_end":48049,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48054,"byte_end":48068,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48073,"byte_end":48076,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48081,"byte_end":48088,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48093,"byte_end":48118,"line_start":112,"line_end":112,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48123,"byte_end":48126,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let bimap = BiHashMap::<char, i32>::with_capacity(10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48131,"byte_end":48189,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ assert!(bimap.capacity() >= 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48194,"byte_end":48230,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48235,"byte_end":48242,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48706,"byte_end":48711,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"clear","qualname":"<BiHashMap<L, R, LS, RS>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all left-right pairs from the bimap.","sig":null,"attributes":[{"value":"/ Removes all left-right pairs from the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48359,"byte_end":48407,"line_start":121,"line_end":121,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48412,"byte_end":48415,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48420,"byte_end":48434,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48439,"byte_end":48442,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48447,"byte_end":48454,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48459,"byte_end":48484,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48489,"byte_end":48492,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48497,"byte_end":48534,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48539,"byte_end":48564,"line_start":129,"line_end":129,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48569,"byte_end":48594,"line_start":130,"line_end":130,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48599,"byte_end":48624,"line_start":131,"line_end":131,"column_start":5,"column_end":30}},{"value":"/ bimap.clear();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48629,"byte_end":48647,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/ assert!(bimap.len() == 0);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48652,"byte_end":48682,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48687,"byte_end":48694,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49299,"byte_end":49303,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"iter","qualname":"<BiHashMap<L, R, LS, RS>>::iter","value":"pub fn iter(&Self) -> Iter<, L, R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the left-right pairs in the bimap in arbitrary\n order.","sig":null,"attributes":[{"value":"/ Creates an iterator over the left-right pairs in the bimap in arbitrary","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48802,"byte_end":48877,"line_start":140,"line_end":140,"column_start":5,"column_end":80}},{"value":"/ order.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48882,"byte_end":48892,"line_start":141,"line_end":141,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48897,"byte_end":48900,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `(&L, &R)`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48905,"byte_end":48949,"line_start":143,"line_end":143,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48954,"byte_end":48957,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48962,"byte_end":48976,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48981,"byte_end":48984,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":48989,"byte_end":48996,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49001,"byte_end":49026,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49031,"byte_end":49034,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49039,"byte_end":49076,"line_start":150,"line_end":150,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49081,"byte_end":49106,"line_start":151,"line_end":151,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49111,"byte_end":49136,"line_start":152,"line_end":152,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49141,"byte_end":49166,"line_start":153,"line_end":153,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49171,"byte_end":49174,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ for (left, right) in bimap.iter() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49179,"byte_end":49218,"line_start":155,"line_end":155,"column_start":5,"column_end":44}},{"value":"/     println!(\"({}, {})\", left, right);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49223,"byte_end":49265,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49270,"byte_end":49275,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49280,"byte_end":49287,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49893,"byte_end":49904,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"left_values","qualname":"<BiHashMap<L, R, LS, RS>>::left_values","value":"pub fn left_values(&Self) -> LeftValues<, L, R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the left values in the bimap in arbitrary\n order.","sig":null,"attributes":[{"value":"/ Creates an iterator over the left values in the bimap in arbitrary","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49410,"byte_end":49480,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ order.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49485,"byte_end":49495,"line_start":166,"line_end":166,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49500,"byte_end":49503,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `&L`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49508,"byte_end":49546,"line_start":168,"line_end":168,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49551,"byte_end":49554,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49559,"byte_end":49573,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49578,"byte_end":49581,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49586,"byte_end":49593,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49598,"byte_end":49623,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49628,"byte_end":49631,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49636,"byte_end":49673,"line_start":175,"line_end":175,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49678,"byte_end":49703,"line_start":176,"line_end":176,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49708,"byte_end":49733,"line_start":177,"line_end":177,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49738,"byte_end":49763,"line_start":178,"line_end":178,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49768,"byte_end":49771,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ for char_value in bimap.left_values() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49776,"byte_end":49819,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/     println!(\"{}\", char_value);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49824,"byte_end":49859,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49864,"byte_end":49869,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":49874,"byte_end":49881,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50506,"byte_end":50518,"line_start":209,"line_end":209,"column_start":12,"column_end":24},"name":"right_values","qualname":"<BiHashMap<L, R, LS, RS>>::right_values","value":"pub fn right_values(&Self) -> RightValues<, L, R>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator over the right values in the bimap in arbitrary\n order.","sig":null,"attributes":[{"value":"/ Creates an iterator over the right values in the bimap in arbitrary","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50023,"byte_end":50094,"line_start":190,"line_end":190,"column_start":5,"column_end":76}},{"value":"/ order.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50099,"byte_end":50109,"line_start":191,"line_end":191,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50114,"byte_end":50117,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `&R`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50122,"byte_end":50160,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50165,"byte_end":50168,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50173,"byte_end":50187,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50192,"byte_end":50195,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50200,"byte_end":50207,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50212,"byte_end":50237,"line_start":198,"line_end":198,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50242,"byte_end":50245,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50250,"byte_end":50287,"line_start":200,"line_end":200,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50292,"byte_end":50317,"line_start":201,"line_end":201,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50322,"byte_end":50347,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50352,"byte_end":50377,"line_start":203,"line_end":203,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50382,"byte_end":50385,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ for int_value in bimap.right_values() {","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50390,"byte_end":50433,"line_start":205,"line_end":205,"column_start":5,"column_end":48}},{"value":"/     println!(\"{}\", int_value);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50438,"byte_end":50472,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50477,"byte_end":50482,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50487,"byte_end":50494,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51261,"byte_end":51273,"line_start":237,"line_end":237,"column_start":12,"column_end":24},"name":"with_hashers","qualname":"<BiHashMap<L, R, LS, RS>>::with_hashers","value":"pub fn with_hashers(LS, RS) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `BiHashMap` using `hash_builder_left` to hash left\n values and `hash_builder_right` to hash right values.","sig":null,"attributes":[{"value":"/ Creates a new empty `BiHashMap` using `hash_builder_left` to hash left","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50770,"byte_end":50844,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/ values and `hash_builder_right` to hash right values.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50849,"byte_end":50906,"line_start":224,"line_end":224,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50911,"byte_end":50914,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50919,"byte_end":50933,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50938,"byte_end":50941,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50946,"byte_end":50953,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50958,"byte_end":51006,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51011,"byte_end":51036,"line_start":230,"line_end":230,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51041,"byte_end":51044,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let s_left = RandomState::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51049,"byte_end":51085,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/ let s_right = RandomState::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51090,"byte_end":51127,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/ let mut bimap = BiHashMap::<char, i32>::with_hashers(s_left, s_right);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51132,"byte_end":51206,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ bimap.insert('a', 42);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51211,"byte_end":51237,"line_start":235,"line_end":235,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51242,"byte_end":51249,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52045,"byte_end":52070,"line_start":259,"line_end":259,"column_start":12,"column_end":37},"name":"with_capacity_and_hashers","qualname":"<BiHashMap<L, R, LS, RS>>::with_capacity_and_hashers","value":"pub fn with_capacity_and_hashers(usize, LS, RS) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `BiHashMap` with the given capacity, using\n `hash_builder_left` to hash left values and `hash_builder_right` to\n hash right values.","sig":null,"attributes":[{"value":"/ Creates a new empty `BiHashMap` with the given capacity, using","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51498,"byte_end":51564,"line_start":244,"line_end":244,"column_start":5,"column_end":71}},{"value":"/ `hash_builder_left` to hash left values and `hash_builder_right` to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51569,"byte_end":51640,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ hash right values.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51645,"byte_end":51667,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51672,"byte_end":51675,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51680,"byte_end":51694,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51699,"byte_end":51702,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51707,"byte_end":51714,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use std::collections::hash_map::RandomState;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51719,"byte_end":51767,"line_start":251,"line_end":251,"column_start":5,"column_end":53}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51772,"byte_end":51797,"line_start":252,"line_end":252,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51802,"byte_end":51805,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let s_left = RandomState::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51810,"byte_end":51846,"line_start":254,"line_end":254,"column_start":5,"column_end":41}},{"value":"/ let s_right = RandomState::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51851,"byte_end":51888,"line_start":255,"line_end":255,"column_start":5,"column_end":42}},{"value":"/ let bimap = BiHashMap::<char, i32>::with_capacity_and_hashers(10, s_left, s_right);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51893,"byte_end":51980,"line_start":256,"line_end":256,"column_start":5,"column_end":92}},{"value":"/ assert!(bimap.capacity() >= 10);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":51985,"byte_end":52021,"line_start":257,"line_end":257,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52026,"byte_end":52033,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52929,"byte_end":52940,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"get_by_left","qualname":"<BiHashMap<L, R, LS, RS>>::get_by_left","value":"pub fn get_by_left<Q>(&Self, &Q) -> Option<&R> where L: Borrow<Q>, Q: Eq +\nHash + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the right value corresponding to the given left\n value.","sig":null,"attributes":[{"value":"/ Returns a reference to the right value corresponding to the given left","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52389,"byte_end":52463,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52468,"byte_end":52478,"line_start":271,"line_end":271,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52483,"byte_end":52486,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's left type, but `Eq`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52491,"byte_end":52564,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/ and `Hash` on the borrowed form *must* match those for the left type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52569,"byte_end":52642,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52647,"byte_end":52650,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52655,"byte_end":52669,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52674,"byte_end":52677,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52682,"byte_end":52689,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52694,"byte_end":52719,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52724,"byte_end":52727,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52732,"byte_end":52769,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52774,"byte_end":52799,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(bimap.get_by_left(&'a'), Some(&1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52804,"byte_end":52854,"line_start":283,"line_end":283,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(bimap.get_by_left(&'z'), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52859,"byte_end":52905,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":52910,"byte_end":52917,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53661,"byte_end":53673,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"get_by_right","qualname":"<BiHashMap<L, R, LS, RS>>::get_by_right","value":"pub fn get_by_right<Q>(&Self, &Q) -> Option<&L> where R: Borrow<Q>, Q: Eq +\nHash + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the left value corresponding to the given right\n value.","sig":null,"attributes":[{"value":"/ Returns a reference to the left value corresponding to the given right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53119,"byte_end":53193,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53198,"byte_end":53208,"line_start":295,"line_end":295,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53213,"byte_end":53216,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's right type, but `Eq`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53221,"byte_end":53295,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ and `Hash` on the borrowed form *must* match those for the right type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53300,"byte_end":53374,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53379,"byte_end":53382,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53387,"byte_end":53401,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53406,"byte_end":53409,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53414,"byte_end":53421,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53426,"byte_end":53451,"line_start":303,"line_end":303,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53456,"byte_end":53459,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53464,"byte_end":53501,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53506,"byte_end":53531,"line_start":306,"line_end":306,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(bimap.get_by_right(&1), Some(&'a'));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53536,"byte_end":53587,"line_start":307,"line_end":307,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(bimap.get_by_right(&2), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53592,"byte_end":53637,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53642,"byte_end":53649,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54380,"byte_end":54393,"line_start":334,"line_end":334,"column_start":12,"column_end":25},"name":"contains_left","qualname":"<BiHashMap<L, R, LS, RS>>::contains_left","value":"pub fn contains_left<Q>(&Self, &Q) -> bool where L: Borrow<Q>, Q: Eq + Hash +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the bimap contains the given left value and `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if the bimap contains the given left value and `false`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53854,"byte_end":53927,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53932,"byte_end":53946,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53951,"byte_end":53954,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's left type, but `Eq`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":53959,"byte_end":54032,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ and `Hash` on the borrowed form *must* match those for the left type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54037,"byte_end":54110,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54115,"byte_end":54118,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54123,"byte_end":54137,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54142,"byte_end":54145,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54150,"byte_end":54157,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54162,"byte_end":54187,"line_start":327,"line_end":327,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54192,"byte_end":54195,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54200,"byte_end":54237,"line_start":329,"line_end":329,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54242,"byte_end":54267,"line_start":330,"line_end":330,"column_start":5,"column_end":30}},{"value":"/ assert!(bimap.contains_left(&'a'));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54272,"byte_end":54311,"line_start":331,"line_end":331,"column_start":5,"column_end":44}},{"value":"/ assert!(!bimap.contains_left(&'b'));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54316,"byte_end":54356,"line_start":332,"line_end":332,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54361,"byte_end":54368,"line_start":333,"line_end":333,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55085,"byte_end":55099,"line_start":358,"line_end":358,"column_start":12,"column_end":26},"name":"contains_right","qualname":"<BiHashMap<L, R, LS, RS>>::contains_right","value":"pub fn contains_right<Q>(&Self, &Q) -> bool where R: Borrow<Q>, Q: Eq + Hash +\n?Sized","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains the given right value and `false`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains the given right value and `false`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54560,"byte_end":54632,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54637,"byte_end":54651,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54656,"byte_end":54659,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's right type, but `Eq`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54664,"byte_end":54738,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ and `Hash` on the borrowed form *must* match those for the right type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54743,"byte_end":54817,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54822,"byte_end":54825,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54830,"byte_end":54844,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54849,"byte_end":54852,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54857,"byte_end":54864,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54869,"byte_end":54894,"line_start":351,"line_end":351,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54899,"byte_end":54902,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54907,"byte_end":54944,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54949,"byte_end":54974,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ assert!(bimap.contains_right(&1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":54979,"byte_end":55017,"line_start":355,"line_end":355,"column_start":5,"column_end":43}},{"value":"/ assert!(!bimap.contains_right(&2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55022,"byte_end":55061,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55066,"byte_end":55073,"line_start":357,"line_end":357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55988,"byte_end":56002,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"remove_by_left","qualname":"<BiHashMap<L, R, LS, RS>>::remove_by_left","value":"pub fn remove_by_left<Q>(&mut Self, &Q) -> Option<(L, R)> where L: Borrow<Q>,\nQ: Eq + Hash + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Removes the left-right pair corresponding to the given left value.","sig":null,"attributes":[{"value":"/ Removes the left-right pair corresponding to the given left value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55268,"byte_end":55338,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55343,"byte_end":55346,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Returns the previous left-right pair if the map contained the left value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55351,"byte_end":55427,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ and `None` otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55432,"byte_end":55457,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55462,"byte_end":55465,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's left type, but `Eq`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55470,"byte_end":55543,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/ and `Hash` on the borrowed form *must* match those for the left type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55548,"byte_end":55621,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55626,"byte_end":55629,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55634,"byte_end":55648,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55653,"byte_end":55656,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55661,"byte_end":55668,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55673,"byte_end":55698,"line_start":377,"line_end":377,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55703,"byte_end":55706,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55711,"byte_end":55748,"line_start":379,"line_end":379,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55753,"byte_end":55778,"line_start":380,"line_end":380,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55783,"byte_end":55808,"line_start":381,"line_end":381,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55813,"byte_end":55838,"line_start":382,"line_end":382,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55843,"byte_end":55846,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bimap.remove_by_left(&'b'), Some(('b', 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55851,"byte_end":55910,"line_start":384,"line_end":384,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(bimap.remove_by_left(&'b'), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55915,"byte_end":55964,"line_start":385,"line_end":385,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":55969,"byte_end":55976,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57315,"byte_end":57330,"line_start":424,"line_end":424,"column_start":12,"column_end":27},"name":"remove_by_right","qualname":"<BiHashMap<L, R, LS, RS>>::remove_by_right","value":"pub fn remove_by_right<Q>(&mut Self, &Q) -> Option<(L, R)> where R: Borrow<Q>,\nQ: Eq + Hash + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Removes the left-right pair corresponding to the given right value.","sig":null,"attributes":[{"value":"/ Removes the left-right pair corresponding to the given right value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56593,"byte_end":56664,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56669,"byte_end":56672,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Returns the previous left-right pair if the map contained the right","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56677,"byte_end":56748,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/ value and `None` otherwise.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56753,"byte_end":56784,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56789,"byte_end":56792,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ The input may be any borrowed form of the bimap's right type, but `Eq`","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56797,"byte_end":56871,"line_start":408,"line_end":408,"column_start":5,"column_end":79}},{"value":"/ and `Hash` on the borrowed form *must* match those for the right type.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56876,"byte_end":56950,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56955,"byte_end":56958,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56963,"byte_end":56977,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56982,"byte_end":56985,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":56990,"byte_end":56997,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57002,"byte_end":57027,"line_start":414,"line_end":414,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57032,"byte_end":57035,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57040,"byte_end":57077,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57082,"byte_end":57107,"line_start":417,"line_end":417,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57112,"byte_end":57137,"line_start":418,"line_end":418,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57142,"byte_end":57167,"line_start":419,"line_end":419,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57172,"byte_end":57175,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bimap.remove_by_right(&2), Some(('b', 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57180,"byte_end":57238,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(bimap.remove_by_right(&2), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57243,"byte_end":57291,"line_start":422,"line_end":422,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57296,"byte_end":57303,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":60272,"byte_end":60278,"line_start":489,"line_end":489,"column_start":12,"column_end":18},"name":"insert","qualname":"<BiHashMap<L, R, LS, RS>>::insert","value":"pub fn insert(&mut Self, L, R) -> Overwritten<L, R>","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given left-right pair into the bimap.","sig":null,"attributes":[{"value":"/ Inserts the given left-right pair into the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57922,"byte_end":57975,"line_start":440,"line_end":440,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57980,"byte_end":57983,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Returns an enum `Overwritten` representing any left-right pairs that","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":57988,"byte_end":58060,"line_start":442,"line_end":442,"column_start":5,"column_end":77}},{"value":"/ were overwritten by the call to `insert`. The example below details","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58065,"byte_end":58136,"line_start":443,"line_end":443,"column_start":5,"column_end":76}},{"value":"/ all possible enum variants that can be returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58141,"byte_end":58193,"line_start":444,"line_end":444,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58198,"byte_end":58201,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Warnings","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58206,"byte_end":58220,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58225,"byte_end":58228,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ Somewhat paradoxically, calling `insert()` can actually reduce the size","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58233,"byte_end":58308,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ of the bimap! This is because of the invariant that each left value","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58313,"byte_end":58384,"line_start":449,"line_end":449,"column_start":5,"column_end":76}},{"value":"/ maps to exactly one right value and vice versa.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58389,"byte_end":58440,"line_start":450,"line_end":450,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58445,"byte_end":58448,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58453,"byte_end":58467,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58472,"byte_end":58475,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58480,"byte_end":58487,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/ use bimap::{BiHashMap, Overwritten};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58492,"byte_end":58532,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58537,"byte_end":58540,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58545,"byte_end":58582,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(bimap.len(), 0); // {}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58587,"byte_end":58624,"line_start":458,"line_end":458,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58629,"byte_end":58632,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ // no values are overwritten.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58637,"byte_end":58670,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(bimap.insert('a', 1), Overwritten::Neither);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58675,"byte_end":58734,"line_start":461,"line_end":461,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(bimap.len(), 1); // {'a' <> 1}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58739,"byte_end":58784,"line_start":462,"line_end":462,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58789,"byte_end":58792,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ // no values are overwritten.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58797,"byte_end":58830,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(bimap.insert('b', 2), Overwritten::Neither);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58835,"byte_end":58894,"line_start":465,"line_end":465,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(bimap.len(), 2); // {'a' <> 1, 'b' <> 2}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58899,"byte_end":58954,"line_start":466,"line_end":466,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58959,"byte_end":58962,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ // ('a', 1) already exists, so inserting ('a', 4) overwrites 'a', the left value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":58967,"byte_end":59052,"line_start":468,"line_end":468,"column_start":5,"column_end":90}},{"value":"/ // the previous left-right pair ('a', 1) is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59057,"byte_end":59114,"line_start":469,"line_end":469,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(bimap.insert('a', 4), Overwritten::Left('a', 1));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59119,"byte_end":59183,"line_start":470,"line_end":470,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(bimap.len(), 2); // {'a' <> 4, 'b' <> 2}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59188,"byte_end":59243,"line_start":471,"line_end":471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59248,"byte_end":59251,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ // ('b', 2) already exists, so inserting ('c', 2) overwrites 2, the right value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59256,"byte_end":59340,"line_start":473,"line_end":473,"column_start":5,"column_end":89}},{"value":"/ // the previous left-right pair ('b', 2) is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59345,"byte_end":59402,"line_start":474,"line_end":474,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(bimap.insert('c', 2), Overwritten::Right('b', 2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59407,"byte_end":59472,"line_start":475,"line_end":475,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(bimap.len(), 2); // {'a' <> 1, 'c' <> 2}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59477,"byte_end":59532,"line_start":476,"line_end":476,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59537,"byte_end":59540,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ // both ('a', 4) and ('c', 2) already exist, so inserting ('a', 2) overwrites both.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59545,"byte_end":59632,"line_start":478,"line_end":478,"column_start":5,"column_end":92}},{"value":"/ // ('a', 4) has the overwritten left value ('a'), so it's the first tuple returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59637,"byte_end":59724,"line_start":479,"line_end":479,"column_start":5,"column_end":92}},{"value":"/ // ('c', 2) has the overwritten right value (2), so it's the second tuple returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59729,"byte_end":59816,"line_start":480,"line_end":480,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(bimap.insert('a', 2), Overwritten::Both(('a', 4), ('c', 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59821,"byte_end":59897,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(bimap.len(), 1); // {'a' <> 2} // bimap is smaller than before!","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59902,"byte_end":59980,"line_start":482,"line_end":482,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59985,"byte_end":59988,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ // ('a', 2) already exists, so inserting ('a', 2) overwrites the pair.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":59993,"byte_end":60067,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ // the previous left-right pair ('a', 2) is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":60072,"byte_end":60129,"line_start":485,"line_end":485,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(bimap.insert('a', 2), Overwritten::Pair('a', 2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":60134,"byte_end":60198,"line_start":486,"line_end":486,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(bimap.len(), 1); // {'a' <> 2}","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":60203,"byte_end":60248,"line_start":487,"line_end":487,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":60253,"byte_end":60260,"line_start":488,"line_end":488,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61864,"byte_end":61883,"line_start":526,"line_end":526,"column_start":12,"column_end":31},"name":"insert_no_overwrite","qualname":"<BiHashMap<L, R, LS, RS>>::insert_no_overwrite","value":"pub fn insert_no_overwrite(&mut Self, L, R) -> Result<(), (L, R)>","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given left-right pair into the bimap without overwriting any\n existing values.","sig":null,"attributes":[{"value":"/ Inserts the given left-right pair into the bimap without overwriting any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61115,"byte_end":61191,"line_start":508,"line_end":508,"column_start":5,"column_end":81}},{"value":"/ existing values.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61196,"byte_end":61216,"line_start":509,"line_end":509,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61221,"byte_end":61224,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if the pair was successfully inserted into the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61229,"byte_end":61303,"line_start":511,"line_end":511,"column_start":5,"column_end":79}},{"value":"/ If either value exists in the map, `Err((left, right)` is returned","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61308,"byte_end":61378,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ with the attempted left-right pair and the map is unchanged.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61383,"byte_end":61447,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61452,"byte_end":61455,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61460,"byte_end":61474,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61479,"byte_end":61482,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61487,"byte_end":61494,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61499,"byte_end":61524,"line_start":518,"line_end":518,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61529,"byte_end":61532,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61537,"byte_end":61574,"line_start":520,"line_end":520,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(bimap.insert_no_overwrite('a', 1), Ok(()));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61579,"byte_end":61637,"line_start":521,"line_end":521,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(bimap.insert_no_overwrite('b', 2), Ok(()));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61642,"byte_end":61700,"line_start":522,"line_end":522,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(bimap.insert_no_overwrite('a', 3), Err(('a', 3)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61705,"byte_end":61770,"line_start":523,"line_end":523,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(bimap.insert_no_overwrite('c', 2), Err(('c', 2)));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61775,"byte_end":61840,"line_start":524,"line_end":524,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":61845,"byte_end":61852,"line_start":525,"line_end":525,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62794,"byte_end":62800,"line_start":555,"line_end":555,"column_start":12,"column_end":18},"name":"retain","qualname":"<BiHashMap<L, R, LS, RS>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&L, &R) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62144,"byte_end":62201,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62206,"byte_end":62209,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all left-right pairs `(l, r)` such that `f(&l,","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62214,"byte_end":62287,"line_start":537,"line_end":537,"column_start":5,"column_end":78}},{"value":"/ &r)` returns `false`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62292,"byte_end":62317,"line_start":538,"line_end":538,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62322,"byte_end":62325,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62330,"byte_end":62344,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62349,"byte_end":62352,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62357,"byte_end":62364,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ use bimap::BiHashMap;","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62369,"byte_end":62394,"line_start":543,"line_end":543,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62399,"byte_end":62402,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiHashMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62407,"byte_end":62444,"line_start":545,"line_end":545,"column_start":5,"column_end":42}},{"value":"/ bimap.insert('a', 1);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62449,"byte_end":62474,"line_start":546,"line_end":546,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('b', 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62479,"byte_end":62504,"line_start":547,"line_end":547,"column_start":5,"column_end":30}},{"value":"/ bimap.insert('c', 3);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62509,"byte_end":62534,"line_start":548,"line_end":548,"column_start":5,"column_end":30}},{"value":"/ bimap.retain(|&l, &r| r >= 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62539,"byte_end":62573,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(bimap.len(), 2);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62578,"byte_end":62609,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(bimap.get_by_left(&'b'), Some(&2));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62614,"byte_end":62664,"line_start":551,"line_end":551,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(bimap.get_by_left(&'c'), Some(&3));","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62669,"byte_end":62719,"line_start":552,"line_end":552,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(bimap.get_by_left(&'a'), None);","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62724,"byte_end":62770,"line_start":553,"line_end":553,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":62775,"byte_end":62782,"line_start":554,"line_end":554,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67289,"byte_end":67297,"line_start":737,"line_end":737,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::hash::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":513}],"decl_id":null,"docs":" An owning iterator over the left-right pairs in a `BiHashMap`.\n","sig":null,"attributes":[{"value":"/ An owning iterator over the left-right pairs in a `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67211,"byte_end":67277,"line_start":736,"line_end":736,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":527},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68025,"byte_end":68029,"line_start":767,"line_end":767,"column_start":12,"column_end":16},"name":"Iter","qualname":"::hash::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":531}],"decl_id":null,"docs":" An iterator over the left-right pairs in a `BiHashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the left-right pairs in a `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67850,"byte_end":67909,"line_start":762,"line_end":762,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67910,"byte_end":67913,"line_start":763,"line_end":763,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`iter`] method of `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67914,"byte_end":67979,"line_start":764,"line_end":764,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67980,"byte_end":67983,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: BiHashMap::iter","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67984,"byte_end":68013,"line_start":766,"line_end":766,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":548},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68670,"byte_end":68680,"line_start":792,"line_end":792,"column_start":12,"column_end":22},"name":"LeftValues","qualname":"::hash::LeftValues","value":"LeftValues {  }","parent":null,"children":[{"krate":0,"index":552}],"decl_id":null,"docs":" An iterator over the left values in a `BiHashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the left values in a `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68479,"byte_end":68533,"line_start":787,"line_end":787,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68534,"byte_end":68537,"line_start":788,"line_end":788,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`left_values`] method of `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68538,"byte_end":68610,"line_start":789,"line_end":789,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68611,"byte_end":68614,"line_start":790,"line_end":790,"column_start":1,"column_end":4}},{"value":"/ [`left_values`]: BiHashMap::left_values","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68615,"byte_end":68658,"line_start":791,"line_end":791,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":569},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69325,"byte_end":69336,"line_start":817,"line_end":817,"column_start":12,"column_end":23},"name":"RightValues","qualname":"::hash::RightValues","value":"RightValues {  }","parent":null,"children":[{"krate":0,"index":573}],"decl_id":null,"docs":" An iterator over the right values in a `BiHashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the right values in a `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69130,"byte_end":69185,"line_start":812,"line_end":812,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69186,"byte_end":69189,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`right_values`] method of `BiHashMap`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69190,"byte_end":69263,"line_start":814,"line_end":814,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69264,"byte_end":69267,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ [`right_values`]: BiHashMap::right_values","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69268,"byte_end":69313,"line_start":816,"line_end":816,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":603},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7030,"byte_end":7035,"line_start":215,"line_end":215,"column_start":10,"column_end":15},"name":"BiMap","qualname":"::BiMap","value":"BiHashMap<L, R>","parent":null,"children":[],"decl_id":null,"docs":" Type definition for convenience and compatibility with older versions of\n this crate.\n","sig":null,"attributes":[{"value":"/ Type definition for convenience and compatibility with older versions of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6904,"byte_end":6980,"line_start":212,"line_end":212,"column_start":1,"column_end":77}},{"value":"/ this crate.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6981,"byte_end":6996,"line_start":213,"line_end":213,"column_start":1,"column_end":16}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6997,"byte_end":7020,"line_start":214,"line_end":214,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":686},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7587,"byte_end":7594,"line_start":230,"line_end":230,"column_start":5,"column_end":12},"name":"Neither","qualname":"::Overwritten::Neither","value":"Overwritten::Neither","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Neither the left nor the right value previously existed in the bimap.\n","sig":null,"attributes":[{"value":"/ Neither the left nor the right value previously existed in the bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7509,"byte_end":7582,"line_start":229,"line_end":229,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":688},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7700,"byte_end":7704,"line_start":234,"line_end":234,"column_start":5,"column_end":9},"name":"Left","qualname":"::Overwritten::Left","value":"Overwritten::Left(L, R)","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" The left value existed in the bimap, and the previous left-right pair is\n returned.\n","sig":null,"attributes":[{"value":"/ The left value existed in the bimap, and the previous left-right pair is","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7601,"byte_end":7677,"line_start":232,"line_end":232,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7682,"byte_end":7695,"line_start":233,"line_end":233,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":692},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7817,"byte_end":7822,"line_start":238,"line_end":238,"column_start":5,"column_end":10},"name":"Right","qualname":"::Overwritten::Right","value":"Overwritten::Right(L, R)","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" The right value existed in the bimap, and the previous left-right pair\n is returned.\n","sig":null,"attributes":[{"value":"/ The right value existed in the bimap, and the previous left-right pair","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7717,"byte_end":7791,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7796,"byte_end":7812,"line_start":237,"line_end":237,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":696},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7947,"byte_end":7951,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"Pair","qualname":"::Overwritten::Pair","value":"Overwritten::Pair(L, R)","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" The left-right pair already existed in the bimap, and the previous\n left-right pair is returned.\n","sig":null,"attributes":[{"value":"/ The left-right pair already existed in the bimap, and the previous","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7835,"byte_end":7905,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ left-right pair is returned.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7910,"byte_end":7942,"line_start":241,"line_end":241,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":700},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8217,"byte_end":8221,"line_start":248,"line_end":248,"column_start":5,"column_end":9},"name":"Both","qualname":"::Overwritten::Both","value":"Overwritten::Both((L, R), (L, R))","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Both the left and the right value existed in the bimap, but as part of\n separate pairs. The first tuple is the left-right pair of the\n previous left value, and the second is the left-right pair of the\n previous right value.\n","sig":null,"attributes":[{"value":"/ Both the left and the right value existed in the bimap, but as part of","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7964,"byte_end":8038,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ separate pairs. The first tuple is the left-right pair of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8043,"byte_end":8108,"line_start":245,"line_end":245,"column_start":5,"column_end":70}},{"value":"/ previous left value, and the second is the left-right pair of the","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8113,"byte_end":8182,"line_start":246,"line_end":246,"column_start":5,"column_end":74}},{"value":"/ previous right value.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8187,"byte_end":8212,"line_start":247,"line_end":247,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":683},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7485,"byte_end":7496,"line_start":228,"line_end":228,"column_start":10,"column_end":21},"name":"Overwritten","qualname":"::Overwritten","value":"pub enum Overwritten<L, R> {\n    Neither,\n    Left(L, R),\n    Right(L, R),\n    Pair(L, R),\n    Both((L, R), (L, R)),\n}","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":692},{"krate":0,"index":696},{"krate":0,"index":700}],"decl_id":null,"docs":" The previous left-right pairs, if any, that were overwritten by a call to\n the [`insert`](BiHashMap::insert) method of a bimap.\n","sig":null,"attributes":[{"value":"/ The previous left-right pairs, if any, that were overwritten by a call to","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7290,"byte_end":7367,"line_start":225,"line_end":225,"column_start":1,"column_end":78}},{"value":"/ the [`insert`](BiHashMap::insert) method of a bimap.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":7368,"byte_end":7424,"line_start":226,"line_end":226,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8729,"byte_end":8742,"line_start":266,"line_end":266,"column_start":12,"column_end":25},"name":"did_overwrite","qualname":"<Overwritten<L, R>>::did_overwrite","value":"pub fn did_overwrite(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a boolean indicating if the `Overwritten` variant implies any\n values were overwritten.","sig":null,"attributes":[{"value":"/ Returns a boolean indicating if the `Overwritten` variant implies any","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8277,"byte_end":8350,"line_start":252,"line_end":252,"column_start":5,"column_end":78}},{"value":"/ values were overwritten.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8355,"byte_end":8383,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8388,"byte_end":8391,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This method is `true` for all variants other than `Neither`.","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8396,"byte_end":8460,"line_start":255,"line_end":255,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8465,"byte_end":8468,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8473,"byte_end":8487,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8492,"byte_end":8495,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8500,"byte_end":8507,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use bimap::{BiMap, Overwritten};","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8512,"byte_end":8548,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8553,"byte_end":8556,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let mut bimap = BiMap::new();","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8561,"byte_end":8594,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ assert!(!bimap.insert('a', 1).did_overwrite());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8599,"byte_end":8650,"line_start":263,"line_end":263,"column_start":5,"column_end":56}},{"value":"/ assert!(bimap.insert('a', 2).did_overwrite());","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8655,"byte_end":8705,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8710,"byte_end":8717,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","byte_start":9434,"byte_end":9437,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","byte_start":9534,"byte_end":9537,"line_start":13,"line_end":13,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","byte_start":9789,"byte_end":9796,"line_start":26,"line_end":26,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","byte_start":10277,"byte_end":10280,"line_start":41,"line_end":41,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11133,"byte_end":11143,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":27196,"byte_end":27206,"line_start":536,"line_end":536,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":27405,"byte_end":27415,"line_start":546,"line_end":546,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":27837,"byte_end":27847,"line_start":562,"line_end":562,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":28073,"byte_end":28083,"line_start":575,"line_end":575,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":28161,"byte_end":28171,"line_start":582,"line_end":582,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":28720,"byte_end":28730,"line_start":612,"line_end":612,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":28989,"byte_end":28999,"line_start":627,"line_end":627,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29227,"byte_end":29237,"line_start":639,"line_end":639,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29403,"byte_end":29413,"line_start":649,"line_end":649,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29572,"byte_end":29582,"line_start":659,"line_end":659,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29767,"byte_end":29777,"line_start":669,"line_end":669,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30093,"byte_end":30101,"line_start":684,"line_end":684,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30446,"byte_end":30454,"line_start":696,"line_end":696,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30494,"byte_end":30502,"line_start":698,"line_end":698,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30537,"byte_end":30545,"line_start":700,"line_end":700,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31247,"byte_end":31251,"line_start":727,"line_end":727,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31422,"byte_end":31426,"line_start":733,"line_end":733,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31474,"byte_end":31478,"line_start":735,"line_end":735,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31521,"byte_end":31525,"line_start":737,"line_end":737,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32079,"byte_end":32089,"line_start":758,"line_end":758,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32251,"byte_end":32261,"line_start":764,"line_end":764,"column_start":38,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32309,"byte_end":32319,"line_start":766,"line_end":766,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32362,"byte_end":32372,"line_start":768,"line_end":768,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32913,"byte_end":32924,"line_start":789,"line_end":789,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33086,"byte_end":33097,"line_start":795,"line_end":795,"column_start":38,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33145,"byte_end":33156,"line_start":797,"line_end":797,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33199,"byte_end":33210,"line_start":799,"line_end":799,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33772,"byte_end":33781,"line_start":821,"line_end":821,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33952,"byte_end":33961,"line_start":827,"line_end":827,"column_start":38,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34009,"byte_end":34018,"line_start":829,"line_end":829,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34061,"byte_end":34070,"line_start":831,"line_end":831,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34654,"byte_end":34664,"line_start":853,"line_end":853,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34835,"byte_end":34845,"line_start":859,"line_end":859,"column_start":38,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34893,"byte_end":34903,"line_start":861,"line_end":861,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34946,"byte_end":34956,"line_start":863,"line_end":863,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":35352,"byte_end":35362,"line_start":877,"line_end":877,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":35433,"byte_end":35443,"line_start":884,"line_end":884,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46047,"byte_end":46056,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46965,"byte_end":46974,"line_start":65,"line_end":65,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50656,"byte_end":50665,"line_start":216,"line_end":216,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":63535,"byte_end":63544,"line_start":580,"line_end":580,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":64083,"byte_end":64092,"line_start":600,"line_end":600,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":64352,"byte_end":64365,"line_start":610,"line_end":610,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":64903,"byte_end":64912,"line_start":631,"line_end":631,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":65232,"byte_end":65241,"line_start":646,"line_end":646,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":65389,"byte_end":65398,"line_start":655,"line_end":655,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":66398,"byte_end":66407,"line_start":695,"line_end":695,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":66694,"byte_end":66703,"line_start":710,"line_end":710,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67007,"byte_end":67016,"line_start":724,"line_end":724,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67389,"byte_end":67397,"line_start":741,"line_end":741,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67437,"byte_end":67445,"line_start":743,"line_end":743,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67480,"byte_end":67488,"line_start":745,"line_end":745,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68129,"byte_end":68133,"line_start":771,"line_end":771,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68181,"byte_end":68185,"line_start":773,"line_end":773,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68228,"byte_end":68232,"line_start":775,"line_end":775,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68780,"byte_end":68790,"line_start":796,"line_end":796,"column_start":38,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68838,"byte_end":68848,"line_start":798,"line_end":798,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68891,"byte_end":68901,"line_start":800,"line_end":800,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69436,"byte_end":69447,"line_start":821,"line_end":821,"column_start":38,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69495,"byte_end":69506,"line_start":823,"line_end":823,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69549,"byte_end":69560,"line_start":825,"line_end":825,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69946,"byte_end":69955,"line_start":839,"line_end":839,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":70069,"byte_end":70078,"line_start":847,"line_end":847,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8253,"byte_end":8264,"line_start":251,"line_end":251,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6781,"byte_end":6786,"line_start":204,"line_end":204,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":32}},{"kind":"Mod","span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":6848,"byte_end":6852,"line_start":208,"line_end":208,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":338}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","byte_start":9434,"byte_end":9437,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","byte_start":9534,"byte_end":9537,"line_start":13,"line_end":13,"column_start":24,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","byte_start":9789,"byte_end":9796,"line_start":26,"line_end":26,"column_start":17,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/mem.rs","byte_start":10277,"byte_end":10280,"line_start":41,"line_end":41,"column_start":35,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":610},"to":{"krate":2,"index":2615}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":11133,"byte_end":11143,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":27196,"byte_end":27206,"line_start":536,"line_end":536,"column_start":22,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":27405,"byte_end":27415,"line_start":546,"line_end":546,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":27837,"byte_end":27847,"line_start":562,"line_end":562,"column_start":24,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":28073,"byte_end":28083,"line_start":575,"line_end":575,"column_start":19,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":28161,"byte_end":28171,"line_start":582,"line_end":582,"column_start":37,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":7473}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":28720,"byte_end":28730,"line_start":612,"line_end":612,"column_start":29,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":28989,"byte_end":28999,"line_start":627,"line_end":627,"column_start":31,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":7486}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29227,"byte_end":29237,"line_start":639,"line_end":639,"column_start":20,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2703}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29403,"byte_end":29413,"line_start":649,"line_end":649,"column_start":26,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29572,"byte_end":29582,"line_start":659,"line_end":659,"column_start":27,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":2714}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":29767,"byte_end":29777,"line_start":669,"line_end":669,"column_start":21,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":9620}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30093,"byte_end":30101,"line_start":684,"line_end":684,"column_start":36,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30446,"byte_end":30454,"line_start":696,"line_end":696,"column_start":34,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30494,"byte_end":30502,"line_start":698,"line_end":698,"column_start":30,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":30537,"byte_end":30545,"line_start":700,"line_end":700,"column_start":25,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":182},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31247,"byte_end":31251,"line_start":727,"line_end":727,"column_start":40,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31422,"byte_end":31426,"line_start":733,"line_end":733,"column_start":38,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31474,"byte_end":31478,"line_start":735,"line_end":735,"column_start":34,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":31521,"byte_end":31525,"line_start":737,"line_end":737,"column_start":29,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":204},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32079,"byte_end":32089,"line_start":758,"line_end":758,"column_start":40,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32251,"byte_end":32261,"line_start":764,"line_end":764,"column_start":38,"column_end":48},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32309,"byte_end":32319,"line_start":766,"line_end":766,"column_start":34,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32362,"byte_end":32372,"line_start":768,"line_end":768,"column_start":29,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":32913,"byte_end":32924,"line_start":789,"line_end":789,"column_start":40,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":258},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33086,"byte_end":33097,"line_start":795,"line_end":795,"column_start":38,"column_end":49},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":258},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33145,"byte_end":33156,"line_start":797,"line_end":797,"column_start":34,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":258},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33199,"byte_end":33210,"line_start":799,"line_end":799,"column_start":29,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":258},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33772,"byte_end":33781,"line_start":821,"line_end":821,"column_start":40,"column_end":49},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":33952,"byte_end":33961,"line_start":827,"line_end":827,"column_start":38,"column_end":47},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34009,"byte_end":34018,"line_start":829,"line_end":829,"column_start":34,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34061,"byte_end":34070,"line_start":831,"line_end":831,"column_start":29,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":663},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34654,"byte_end":34664,"line_start":853,"line_end":853,"column_start":40,"column_end":50},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":673},"to":{"krate":2,"index":7521}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34835,"byte_end":34845,"line_start":859,"line_end":859,"column_start":38,"column_end":48},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":673},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34893,"byte_end":34903,"line_start":861,"line_end":861,"column_start":34,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":673},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":34946,"byte_end":34956,"line_start":863,"line_end":863,"column_start":29,"column_end":39},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":673},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":35352,"byte_end":35362,"line_start":877,"line_end":877,"column_start":28,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/btree.rs","byte_start":35433,"byte_end":35443,"line_start":884,"line_end":884,"column_start":28,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46047,"byte_end":46056,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":46965,"byte_end":46974,"line_start":65,"line_end":65,"column_start":20,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":50656,"byte_end":50665,"line_start":216,"line_end":216,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":63535,"byte_end":63544,"line_start":580,"line_end":580,"column_start":30,"column_end":39},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2637}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":64083,"byte_end":64092,"line_start":600,"line_end":600,"column_start":35,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":64352,"byte_end":64365,"line_start":610,"line_end":610,"column_start":39,"column_end":52},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":449},"to":{"krate":2,"index":9413}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":64903,"byte_end":64912,"line_start":631,"line_end":631,"column_start":32,"column_end":41},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2994}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":65232,"byte_end":65241,"line_start":646,"line_end":646,"column_start":27,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2672}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":65389,"byte_end":65398,"line_start":655,"line_end":655,"column_start":45,"column_end":54},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":7473}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":66398,"byte_end":66407,"line_start":695,"line_end":695,"column_start":37,"column_end":46},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":7477}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":66694,"byte_end":66703,"line_start":710,"line_end":710,"column_start":39,"column_end":48},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":7486}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67007,"byte_end":67016,"line_start":724,"line_end":724,"column_start":34,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2667}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67389,"byte_end":67397,"line_start":741,"line_end":741,"column_start":34,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67437,"byte_end":67445,"line_start":743,"line_end":743,"column_start":30,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":67480,"byte_end":67488,"line_start":745,"line_end":745,"column_start":25,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68129,"byte_end":68133,"line_start":771,"line_end":771,"column_start":38,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68181,"byte_end":68185,"line_start":773,"line_end":773,"column_start":34,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68228,"byte_end":68232,"line_start":775,"line_end":775,"column_start":29,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68780,"byte_end":68790,"line_start":796,"line_end":796,"column_start":38,"column_end":48},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":548},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68838,"byte_end":68848,"line_start":798,"line_end":798,"column_start":34,"column_end":44},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":548},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":68891,"byte_end":68901,"line_start":800,"line_end":800,"column_start":29,"column_end":39},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":548},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69436,"byte_end":69447,"line_start":821,"line_end":821,"column_start":38,"column_end":49},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":7546}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69495,"byte_end":69506,"line_start":823,"line_end":823,"column_start":34,"column_end":45},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":7925}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69549,"byte_end":69560,"line_start":825,"line_end":825,"column_start":29,"column_end":40},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":569},"to":{"krate":2,"index":7657}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":69946,"byte_end":69955,"line_start":839,"line_end":839,"column_start":36,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/hash.rs","byte_start":70069,"byte_end":70078,"line_start":847,"line_end":847,"column_start":36,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":3028}},{"span":{"file_name":"/Users/healer/.cargo/registry/src/github.com-1ecc6299db9ec823/bimap-0.6.1/src/lib.rs","byte_start":8253,"byte_end":8264,"line_start":251,"line_end":251,"column_start":12,"column_end":23},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":683},"to":{"krate":4294967295,"index":4294967295}}]}